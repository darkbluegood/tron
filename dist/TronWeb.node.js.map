{"version":3,"file":"TronWeb.node.js","mappings":"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AAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAC//C8iB,GAAK,CAAC,GAAM,EAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,EAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,G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","sources":["webpack://tronweb/webpack/runtime/create fake namespace object","webpack://tronweb/./src/protocol/core/Tron_pb.js","webpack://tronweb/./src/protocol/core/contract/account_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/asset_issue_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/balance_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/common_pb.js","webpack://tronweb/./src/protocol/core/contract/exchange_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/proposal_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/smart_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/storage_contract_pb.js","webpack://tronweb/./src/protocol/core/contract/witness_contract_pb.js","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf\"","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf/google/protobuf/any_pb\"","webpack://tronweb/external commonjs \"@tronweb3/google-protobuf/google/protobuf/any_pb.js\"","webpack://tronweb/webpack/bootstrap","webpack://tronweb/webpack/runtime/compat get default export","webpack://tronweb/webpack/runtime/define property getters","webpack://tronweb/webpack/runtime/hasOwnProperty shorthand","webpack://tronweb/webpack/runtime/make namespace object","webpack://tronweb/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/typeof\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://tronweb/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://tronweb/external commonjs \"@babel/runtime/regenerator\"","webpack://tronweb/external commonjs \"axios\"","webpack://tronweb/./src/utils/base64.js","webpack://tronweb/./src/utils/bytes.js","webpack://tronweb/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://tronweb/./src/utils/address.js","webpack://tronweb/./src/utils/code.js","webpack://tronweb/./src/utils/base58.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/constants/hashes.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/_version.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/properties.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/errors.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/data.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/maths.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/signature.js","webpack://tronweb/external node-commonjs \"crypto\"","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/sha2.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/pbkdf2.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/utf8.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_assert.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_u64.js","webpack://tronweb/external node-commonjs \"node:crypto\"","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/cryptoNode.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/utils.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha3.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/keccak.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/hash/id.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/decode-owl.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/wordlist.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/wordlist-owl.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-en.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/mnemonic.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/hmac.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/address/address.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/_sha2.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/sha256.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/utils.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/modular.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/hmac.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/curve.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/abstract/weierstrass.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/_shortw_utils.js","webpack://tronweb/./node_modules/.store/@noble+curves@1.2.0/node_modules/@noble/curves/esm/secp256k1.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/signing-key.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/transaction/address.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/abstract-coder.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/typed.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/address.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/anonymous.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/array.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/boolean.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/bytes.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/fixed-bytes.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/null.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/number.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/string.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/coders/tuple.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/fragments.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/abi/abi-coder.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/address/checks.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/hash/typed-data.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/constants/addresses.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/rlp-decode.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/rlp-encode.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/transaction/accesslist.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/transaction/transaction.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/providers/provider.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/providers/abstract-signer.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/base-wallet.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/hash/message.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/constants/strings.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/ripemd160.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/ripemd160.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/random.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/base58.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/aes.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/mode.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/mode-cbc.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/mode-cfb.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/mode-ctr.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/pbkdf2.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/mode-ofb.js","webpack://tronweb/./node_modules/.store/@noble+hashes@1.3.2/node_modules/@noble/hashes/esm/scrypt.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/crypto/scrypt.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/utils/uuid.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/utils.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/json-keystore.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/hdwallet.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/json-crowdsale.js","webpack://tronweb/./node_modules/.store/aes-js@4.0.0-beta.5/node_modules/aes-js/lib.esm/padding.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wallet/wallet.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-cz.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/wordlist-owla.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/decode-owla.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/bit-reader.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-es.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-fr.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-ja.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-ko.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-it.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-pt.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/lang-zh.js","webpack://tronweb/./node_modules/.store/ethers@6.13.2/node_modules/ethers/lib.esm/wordlists/wordlists.js","webpack://tronweb/external commonjs \"@babel/runtime/helpers/slicedToArray\"","webpack://tronweb/./src/utils/fragments.js","webpack://tronweb/external commonjs \"@babel/runtime/helpers/readOnlyError\"","webpack://tronweb/./src/utils/interface.js","webpack://tronweb/./src/utils/ethersUtils.js","webpack://tronweb/./src/utils/typedData.js","webpack://tronweb/external commonjs \"ethereum-cryptography/secp256k1.js\"","webpack://tronweb/./src/utils/crypto.js","webpack://tronweb/./src/utils/accounts.js","webpack://tronweb/external commonjs \"@ethersproject/abi\"","webpack://tronweb/./src/utils/abi.js","webpack://tronweb/./src/utils/message.js","webpack://tronweb/./src/utils/transaction.js","webpack://tronweb/external commonjs \"validator\"","webpack://tronweb/external commonjs \"bignumber.js\"","webpack://tronweb/./src/utils/index.js","webpack://tronweb/./src/lib/providers/HttpProvider.js","webpack://tronweb/./src/lib/providers/index.js","webpack://tronweb/external commonjs \"eventemitter3\"","webpack://tronweb/external commonjs \"semver\"","webpack://tronweb/external commonjs \"injectpromise\"","webpack://tronweb/./src/paramValidator/index.js","webpack://tronweb/./src/lib/transactionBuilder.js","webpack://tronweb/./src/lib/trx.js","webpack://tronweb/./src/lib/contract/method.js","webpack://tronweb/./src/lib/contract/index.js","webpack://tronweb/./src/lib/plugin.js","webpack://tronweb/external commonjs \"querystring-es3\"","webpack://tronweb/./src/lib/event.js","webpack://tronweb/./src/lib/sidechain.js","webpack://tronweb/./src/index.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// source: core/Tron.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar google_protobuf_any_pb = require('@tronweb3/google-protobuf/google/protobuf/any_pb.js');\ngoog.object.extend(proto, google_protobuf_any_pb);\ngoog.exportSymbol('TronWebProto.Account', null, global);\ngoog.exportSymbol('TronWebProto.Account.AccountResource', null, global);\ngoog.exportSymbol('TronWebProto.Account.Frozen', null, global);\ngoog.exportSymbol('TronWebProto.AccountId', null, global);\ngoog.exportSymbol('TronWebProto.AccountType', null, global);\ngoog.exportSymbol('TronWebProto.DelegatedResource', null, global);\ngoog.exportSymbol('TronWebProto.Exchange', null, global);\ngoog.exportSymbol('TronWebProto.Key', null, global);\ngoog.exportSymbol('TronWebProto.MarketOrderDetail', null, global);\ngoog.exportSymbol('TronWebProto.Permission', null, global);\ngoog.exportSymbol('TronWebProto.Permission.PermissionType', null, global);\ngoog.exportSymbol('TronWebProto.Proposal', null, global);\ngoog.exportSymbol('TronWebProto.Proposal.State', null, global);\ngoog.exportSymbol('TronWebProto.Transaction', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Contract.ContractType', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.code', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.Result.contractResult', null, global);\ngoog.exportSymbol('TronWebProto.Transaction.raw', null, global);\ngoog.exportSymbol('TronWebProto.Vote', null, global);\ngoog.exportSymbol('TronWebProto.Votes', null, global);\ngoog.exportSymbol('TronWebProto.Witness', null, global);\ngoog.exportSymbol('TronWebProto.authority', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountId.displayName = 'TronWebProto.AccountId';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Vote.displayName = 'TronWebProto.Vote';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Proposal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Proposal.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Proposal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Proposal.displayName = 'TronWebProto.Proposal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Exchange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Exchange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Exchange.displayName = 'TronWebProto.Exchange';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Account.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.displayName = 'TronWebProto.Account';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.Frozen = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.Frozen, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.Frozen.displayName = 'TronWebProto.Account.Frozen';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Account.AccountResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Account.AccountResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Account.AccountResource.displayName = 'TronWebProto.Account.AccountResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Key = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Key, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Key.displayName = 'TronWebProto.Key';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegatedResource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegatedResource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.DelegatedResource.displayName = 'TronWebProto.DelegatedResource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.authority = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.authority, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.authority.displayName = 'TronWebProto.authority';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Permission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Permission.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Permission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Permission.displayName = 'TronWebProto.Permission';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Witness = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Witness, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Witness.displayName = 'TronWebProto.Witness';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Votes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Votes.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Votes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Votes.displayName = 'TronWebProto.Votes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.MarketOrderDetail = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.MarketOrderDetail, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.MarketOrderDetail.displayName = 'TronWebProto.MarketOrderDetail';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.displayName = 'TronWebProto.Transaction';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.Transaction.Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Contract.displayName = 'TronWebProto.Transaction.Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.Result = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.Result.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.Result, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.Result.displayName = 'TronWebProto.Transaction.Result';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.Transaction.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.Transaction.raw.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.Transaction.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.Transaction.raw.displayName = 'TronWebProto.Transaction.raw';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountId.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName_asB64(),\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountId;\n  return TronWebProto.AccountId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountId}\n */\nTronWebProto.AccountId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes name = 1;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountId.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountId.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountId.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountId} returns this\n */\nTronWebProto.AccountId.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Vote;\n  return TronWebProto.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Vote} returns this\n */\nTronWebProto.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Proposal.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Proposal.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Proposal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Proposal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    proposerAddress: msg.getProposerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : [],\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    approvalsList: msg.getApprovalsList_asB64(),\n    state: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Proposal;\n  return TronWebProto.Proposal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Proposal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Proposal}\n */\nTronWebProto.Proposal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProposerAddress(value);\n      break;\n    case 3:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addApprovals(value);\n      break;\n    case 7:\n      var value = /** @type {!TronWebProto.Proposal.State} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Proposal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Proposal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Proposal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getProposerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getApprovalsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Proposal.State = {\n  PENDING: 0,\n  DISAPPROVED: 1,\n  APPROVED: 2,\n  CANCELED: 3\n};\n\n/**\n * optional int64 proposal_id = 1;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Proposal.prototype.getProposerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {string}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProposerAddress()));\n};\n\n\n/**\n * optional bytes proposer_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProposerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Proposal.prototype.getProposerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProposerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setProposerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.Proposal.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n/**\n * optional int64 expiration_time = 4;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 create_time = 5;\n * @return {number}\n */\nTronWebProto.Proposal.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Proposal.prototype.getApprovalsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<string>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getApprovalsList()));\n};\n\n\n/**\n * repeated bytes approvals = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getApprovalsList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Proposal.prototype.getApprovalsList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getApprovalsList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setApprovalsList = function(value) {\n  return jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.addApprovals = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.clearApprovalsList = function() {\n  return this.setApprovalsList([]);\n};\n\n\n/**\n * optional State state = 7;\n * @return {!TronWebProto.Proposal.State}\n */\nTronWebProto.Proposal.prototype.getState = function() {\n  return /** @type {!TronWebProto.Proposal.State} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Proposal.State} value\n * @return {!TronWebProto.Proposal} returns this\n */\nTronWebProto.Proposal.prototype.setState = function(value) {\n  return jspb.Message.setProto3EnumField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Exchange.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Exchange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Exchange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    creatorAddress: msg.getCreatorAddress_asB64(),\n    createTime: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Exchange;\n  return TronWebProto.Exchange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Exchange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Exchange}\n */\nTronWebProto.Exchange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCreatorAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Exchange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Exchange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Exchange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getCreatorAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 exchange_id = 1;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * optional bytes creator_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCreatorAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getCreatorAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCreatorAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreatorAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 create_time = 3;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 7;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Exchange.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 8, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 9;\n * @return {number}\n */\nTronWebProto.Exchange.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Exchange} returns this\n */\nTronWebProto.Exchange.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Account.repeatedFields_ = [5,7,16,33];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    address: msg.getAddress_asB64(),\n    balance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    assetMap: (f = msg.getAssetMap()) ? f.toObject(includeInstance, undefined) : [],\n    assetv2Map: (f = msg.getAssetv2Map()) ? f.toObject(includeInstance, undefined) : [],\n    frozenList: jspb.Message.toObjectList(msg.getFrozenList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    netUsage: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    acquiredDelegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 41, 0),\n    delegatedFrozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 42, 0),\n    oldTronPower: jspb.Message.getFieldWithDefault(msg, 46, 0),\n    tronPower: (f = msg.getTronPower()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    assetOptimized: jspb.Message.getBooleanFieldWithDefault(msg, 60, false),\n    createTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    latestOprationTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    allowance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    latestWithdrawTime: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    code: msg.getCode_asB64(),\n    isWitness: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),\n    isCommittee: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.Account.Frozen.toObject, includeInstance),\n    assetIssuedName: msg.getAssetIssuedName_asB64(),\n    assetIssuedId: msg.getAssetIssuedId_asB64(),\n    latestAssetOperationTimeMap: (f = msg.getLatestAssetOperationTimeMap()) ? f.toObject(includeInstance, undefined) : [],\n    latestAssetOperationTimev2Map: (f = msg.getLatestAssetOperationTimev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    freeNetUsage: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    freeAssetNetUsageMap: (f = msg.getFreeAssetNetUsageMap()) ? f.toObject(includeInstance, undefined) : [],\n    freeAssetNetUsagev2Map: (f = msg.getFreeAssetNetUsagev2Map()) ? f.toObject(includeInstance, undefined) : [],\n    latestConsumeTime: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    latestConsumeFreeTime: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    accountId: msg.getAccountId_asB64(),\n    accountResource: (f = msg.getAccountResource()) && TronWebProto.Account.AccountResource.toObject(includeInstance, f),\n    codehash: msg.getCodehash_asB64(),\n    ownerPermission: (f = msg.getOwnerPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    witnessPermission: (f = msg.getWitnessPermission()) && TronWebProto.Permission.toObject(includeInstance, f),\n    activePermissionList: jspb.Message.toObjectList(msg.getActivePermissionList(),\n    TronWebProto.Permission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account;\n  return TronWebProto.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account}\n */\nTronWebProto.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 6:\n      var value = msg.getAssetMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 56:\n      var value = msg.getAssetv2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 7:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozen(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetUsage(value);\n      break;\n    case 41:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 42:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForBandwidth(value);\n      break;\n    case 46:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOldTronPower(value);\n      break;\n    case 47:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setTronPower(value);\n      break;\n    case 60:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAssetOptimized(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestOprationTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAllowance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestWithdrawTime(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCode(value);\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsWitness(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsCommittee(value);\n      break;\n    case 16:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 17:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedName(value);\n      break;\n    case 57:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedId(value);\n      break;\n    case 18:\n      var value = msg.getLatestAssetOperationTimeMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 58:\n      var value = msg.getLatestAssetOperationTimev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeNetUsage(value);\n      break;\n    case 20:\n      var value = msg.getFreeAssetNetUsageMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 59:\n      var value = msg.getFreeAssetNetUsagev2Map();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, \"\", 0);\n         });\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTime(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeFreeTime(value);\n      break;\n    case 23:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountId(value);\n      break;\n    case 26:\n      var value = new TronWebProto.Account.AccountResource;\n      reader.readMessage(value,TronWebProto.Account.AccountResource.deserializeBinaryFromReader);\n      msg.setAccountResource(value);\n      break;\n    case 30:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodehash(value);\n      break;\n    case 31:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setOwnerPermission(value);\n      break;\n    case 32:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.setWitnessPermission(value);\n      break;\n    case 33:\n      var value = new TronWebProto.Permission;\n      reader.readMessage(value,TronWebProto.Permission.deserializeBinaryFromReader);\n      msg.addActivePermission(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getAssetv2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(56, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFrozenList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      41,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      42,\n      f\n    );\n  }\n  f = message.getOldTronPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      46,\n      f\n    );\n  }\n  f = message.getTronPower();\n  if (f != null) {\n    writer.writeMessage(\n      47,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetOptimized();\n  if (f) {\n    writer.writeBool(\n      60,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getLatestOprationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getAllowance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getLatestWithdrawTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getIsWitness();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getIsCommittee();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetIssuedName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      17,\n      f\n    );\n  }\n  f = message.getAssetIssuedId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      57,\n      f\n    );\n  }\n  f = message.getLatestAssetOperationTimeMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestAssetOperationTimev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(58, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getFreeAssetNetUsageMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(20, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeAssetNetUsagev2Map(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(59, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestConsumeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getLatestConsumeFreeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getAccountId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      23,\n      f\n    );\n  }\n  f = message.getAccountResource();\n  if (f != null) {\n    writer.writeMessage(\n      26,\n      f,\n      TronWebProto.Account.AccountResource.serializeBinaryToWriter\n    );\n  }\n  f = message.getCodehash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      30,\n      f\n    );\n  }\n  f = message.getOwnerPermission();\n  if (f != null) {\n    writer.writeMessage(\n      31,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitnessPermission();\n  if (f != null) {\n    writer.writeMessage(\n      32,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivePermissionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      33,\n      f,\n      TronWebProto.Permission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.Frozen.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.Frozen.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.Frozen} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.Frozen;\n  return TronWebProto.Account.Frozen.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.Frozen} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.Frozen.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.Frozen.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.Frozen.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.Frozen} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.Frozen.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getExpireTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_balance = 1;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 expire_time = 2;\n * @return {number}\n */\nTronWebProto.Account.Frozen.prototype.getExpireTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.Frozen} returns this\n */\nTronWebProto.Account.Frozen.prototype.setExpireTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Account.AccountResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Account.AccountResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Account.AccountResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenBalanceForEnergy: (f = msg.getFrozenBalanceForEnergy()) && TronWebProto.Account.Frozen.toObject(includeInstance, f),\n    latestConsumeTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acquiredDelegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    delegatedFrozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    storageLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    storageUsage: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestExchangeStorageTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Account.AccountResource;\n  return TronWebProto.Account.AccountResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Account.AccountResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.AccountResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyUsage(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Account.Frozen;\n      reader.readMessage(value,TronWebProto.Account.Frozen.deserializeBinaryFromReader);\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTimeForEnergy(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcquiredDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDelegatedFrozenBalanceForEnergy(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageUsage(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestExchangeStorageTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Account.AccountResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Account.AccountResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Account.AccountResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Account.AccountResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnergyUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getLatestConsumeTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAcquiredDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDelegatedFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getStorageLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getStorageUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestExchangeStorageTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getEnergyUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setEnergyUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional Frozen frozen_balance_for_energy = 2;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.AccountResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n*/\nTronWebProto.Account.AccountResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.clearFrozenBalanceForEnergy = function() {\n  return this.setFrozenBalanceForEnergy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.AccountResource.prototype.hasFrozenBalanceForEnergy = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 latest_consume_time_for_energy = 3;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestConsumeTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestConsumeTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getAcquiredDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setAcquiredDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_energy = 5;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getDelegatedFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setDelegatedFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 storage_limit = 6;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 storage_usage = 7;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getStorageUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setStorageUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latest_exchange_storage_time = 8;\n * @return {number}\n */\nTronWebProto.Account.AccountResource.prototype.getLatestExchangeStorageTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account.AccountResource} returns this\n */\nTronWebProto.Account.AccountResource.prototype.setLatestExchangeStorageTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional AccountType type = 2;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.Account.prototype.getType = function() {\n  return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional bytes address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes address = 3;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 balance = 4;\n * @return {number}\n */\nTronWebProto.Account.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated Vote votes = 5;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Account.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Account.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * map<string, int64> asset = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetMap = function() {\n  this.getAssetMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> assetV2 = 56;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getAssetv2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 56, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAssetv2Map = function() {\n  this.getAssetv2Map().clear();\n  return this;};\n\n\n/**\n * repeated Frozen frozen = 7;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozen = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenList = function() {\n  return this.setFrozenList([]);\n};\n\n\n/**\n * optional int64 net_usage = 8;\n * @return {number}\n */\nTronWebProto.Account.prototype.getNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 acquired_delegated_frozen_balance_for_bandwidth = 41;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAcquiredDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAcquiredDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 41, value);\n};\n\n\n/**\n * optional int64 delegated_frozen_balance_for_bandwidth = 42;\n * @return {number}\n */\nTronWebProto.Account.prototype.getDelegatedFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setDelegatedFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 42, value);\n};\n\n\n/**\n * optional int64 old_tron_power = 46;\n * @return {number}\n */\nTronWebProto.Account.prototype.getOldTronPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setOldTronPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 46, value);\n};\n\n\n/**\n * optional Frozen tron_power = 47;\n * @return {?TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.getTronPower = function() {\n  return /** @type{?TronWebProto.Account.Frozen} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.Frozen, 47));\n};\n\n\n/**\n * @param {?TronWebProto.Account.Frozen|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setTronPower = function(value) {\n  return jspb.Message.setWrapperField(this, 47, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearTronPower = function() {\n  return this.setTronPower(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasTronPower = function() {\n  return jspb.Message.getField(this, 47) != null;\n};\n\n\n/**\n * optional bool asset_optimized = 60;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getAssetOptimized = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 60, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetOptimized = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 60, value);\n};\n\n\n/**\n * optional int64 create_time = 9;\n * @return {number}\n */\nTronWebProto.Account.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCreateTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 latest_opration_time = 10;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestOprationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestOprationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 allowance = 11;\n * @return {number}\n */\nTronWebProto.Account.prototype.getAllowance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAllowance = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int64 latest_withdraw_time = 12;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestWithdrawTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestWithdrawTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 12, value);\n};\n\n\n/**\n * optional bytes code = 13;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes code = 13;\n * This is a type-conversion wrapper around `getCode()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCode()));\n};\n\n\n/**\n * optional bytes code = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCode()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 13, value);\n};\n\n\n/**\n * optional bool is_witness = 14;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsWitness = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsWitness = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 14, value);\n};\n\n\n/**\n * optional bool is_committee = 15;\n * @return {boolean}\n */\nTronWebProto.Account.prototype.getIsCommittee = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setIsCommittee = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 15, value);\n};\n\n\n/**\n * repeated Frozen frozen_supply = 16;\n * @return {!Array<!TronWebProto.Account.Frozen>}\n */\nTronWebProto.Account.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Account.Frozen, 16));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Account.Frozen>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!TronWebProto.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Account.Frozen}\n */\nTronWebProto.Account.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, TronWebProto.Account.Frozen, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 17, value);\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAssetIssuedId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 57, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * optional bytes asset_issued_ID = 57;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAssetIssuedId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAssetIssuedId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 57, value);\n};\n\n\n/**\n * map<string, int64> latest_asset_operation_time = 18;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimeMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 18, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimeMap = function() {\n  this.getLatestAssetOperationTimeMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> latest_asset_operation_timeV2 = 58;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getLatestAssetOperationTimev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 58, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearLatestAssetOperationTimev2Map = function() {\n  this.getLatestAssetOperationTimev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 free_net_usage = 19;\n * @return {number}\n */\nTronWebProto.Account.prototype.getFreeNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setFreeNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * map<string, int64> free_asset_net_usage = 20;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsageMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 20, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsageMap = function() {\n  this.getFreeAssetNetUsageMap().clear();\n  return this;};\n\n\n/**\n * map<string, int64> free_asset_net_usageV2 = 59;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nTronWebProto.Account.prototype.getFreeAssetNetUsagev2Map = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 59, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearFreeAssetNetUsagev2Map = function() {\n  this.getFreeAssetNetUsagev2Map().clear();\n  return this;};\n\n\n/**\n * optional int64 latest_consume_time = 21;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 latest_consume_free_time = 22;\n * @return {number}\n */\nTronWebProto.Account.prototype.getLatestConsumeFreeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setLatestConsumeFreeTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes account_id = 23;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getAccountId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 23, \"\"));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getAccountId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountId()));\n};\n\n\n/**\n * optional bytes account_id = 23;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getAccountId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setAccountId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 23, value);\n};\n\n\n/**\n * optional AccountResource account_resource = 26;\n * @return {?TronWebProto.Account.AccountResource}\n */\nTronWebProto.Account.prototype.getAccountResource = function() {\n  return /** @type{?TronWebProto.Account.AccountResource} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Account.AccountResource, 26));\n};\n\n\n/**\n * @param {?TronWebProto.Account.AccountResource|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setAccountResource = function(value) {\n  return jspb.Message.setWrapperField(this, 26, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearAccountResource = function() {\n  return this.setAccountResource(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasAccountResource = function() {\n  return jspb.Message.getField(this, 26) != null;\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Account.prototype.getCodehash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 30, \"\"));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {string}\n */\nTronWebProto.Account.prototype.getCodehash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodehash()));\n};\n\n\n/**\n * optional bytes codeHash = 30;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodehash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Account.prototype.getCodehash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodehash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.setCodehash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 30, value);\n};\n\n\n/**\n * optional Permission owner_permission = 31;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getOwnerPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 31));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setOwnerPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 31, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearOwnerPermission = function() {\n  return this.setOwnerPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasOwnerPermission = function() {\n  return jspb.Message.getField(this, 31) != null;\n};\n\n\n/**\n * optional Permission witness_permission = 32;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.getWitnessPermission = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Permission, 32));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setWitnessPermission = function(value) {\n  return jspb.Message.setWrapperField(this, 32, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearWitnessPermission = function() {\n  return this.setWitnessPermission(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Account.prototype.hasWitnessPermission = function() {\n  return jspb.Message.getField(this, 32) != null;\n};\n\n\n/**\n * repeated Permission active_permission = 33;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.Account.prototype.getActivePermissionList = function() {\n  return /** @type{!Array<!TronWebProto.Permission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Permission, 33));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.Account} returns this\n*/\nTronWebProto.Account.prototype.setActivePermissionList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 33, value);\n};\n\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Account.prototype.addActivePermission = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, TronWebProto.Permission, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Account} returns this\n */\nTronWebProto.Account.prototype.clearActivePermissionList = function() {\n  return this.setActivePermissionList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Key.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Key.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Key} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    weight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Key;\n  return TronWebProto.Key.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Key} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Key.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Key.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Key} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Key.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Key.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Key.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Key.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 weight = 2;\n * @return {number}\n */\nTronWebProto.Key.prototype.getWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Key} returns this\n */\nTronWebProto.Key.prototype.setWeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.DelegatedResource.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.DelegatedResource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.DelegatedResource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64(),\n    frozenBalanceForBandwidth: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    frozenBalanceForEnergy: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expireTimeForBandwidth: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    expireTimeForEnergy: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.DelegatedResource;\n  return TronWebProto.DelegatedResource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegatedResource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegatedResource}\n */\nTronWebProto.DelegatedResource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForBandwidth(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalanceForEnergy(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForBandwidth(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTimeForEnergy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.DelegatedResource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegatedResource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegatedResource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFrozenBalanceForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpireTimeForBandwidth();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getExpireTimeForEnergy();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getFrom = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegatedResource.prototype.getTo = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegatedResource.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setTo = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_bandwidth = 3;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 frozen_balance_for_energy = 4;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getFrozenBalanceForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setFrozenBalanceForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expire_time_for_bandwidth = 5;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForBandwidth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForBandwidth = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 expire_time_for_energy = 6;\n * @return {number}\n */\nTronWebProto.DelegatedResource.prototype.getExpireTimeForEnergy = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegatedResource} returns this\n */\nTronWebProto.DelegatedResource.prototype.setExpireTimeForEnergy = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.authority.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.authority.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.authority} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && TronWebProto.AccountId.toObject(includeInstance, f),\n    permissionName: msg.getPermissionName_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.authority;\n  return TronWebProto.authority.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.authority} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.authority}\n */\nTronWebProto.authority.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.AccountId;\n      reader.readMessage(value,TronWebProto.AccountId.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPermissionName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.authority.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.authority} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.authority.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.AccountId.serializeBinaryToWriter\n    );\n  }\n  f = message.getPermissionName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AccountId account = 1;\n * @return {?TronWebProto.AccountId}\n */\nTronWebProto.authority.prototype.getAccount = function() {\n  return /** @type{?TronWebProto.AccountId} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.AccountId, 1));\n};\n\n\n/**\n * @param {?TronWebProto.AccountId|undefined} value\n * @return {!TronWebProto.authority} returns this\n*/\nTronWebProto.authority.prototype.setAccount = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.clearAccount = function() {\n  return this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.authority.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.authority.prototype.getPermissionName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {string}\n */\nTronWebProto.authority.prototype.getPermissionName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPermissionName()));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {!Uint8Array}\n */\nTronWebProto.authority.prototype.getPermissionName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPermissionName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.authority} returns this\n */\nTronWebProto.authority.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Permission.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Permission.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Permission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Permission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    id: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    permissionName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    threshold: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    parentId: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    operations: msg.getOperations_asB64(),\n    keysList: jspb.Message.toObjectList(msg.getKeysList(),\n    TronWebProto.Key.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Permission;\n  return TronWebProto.Permission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Permission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.Permission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Permission.PermissionType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPermissionName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setThreshold(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setParentId(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOperations(value);\n      break;\n    case 7:\n      var value = new TronWebProto.Key;\n      reader.readMessage(value,TronWebProto.Key.deserializeBinaryFromReader);\n      msg.addKeys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Permission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Permission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Permission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getPermissionName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getThreshold();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getParentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getOperations_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getKeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      TronWebProto.Key.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Permission.PermissionType = {\n  OWNER: 0,\n  WITNESS: 1,\n  ACTIVE: 2\n};\n\n/**\n * optional PermissionType type = 1;\n * @return {!TronWebProto.Permission.PermissionType}\n */\nTronWebProto.Permission.prototype.getType = function() {\n  return /** @type {!TronWebProto.Permission.PermissionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Permission.PermissionType} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional int32 id = 2;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string permission_name = 3;\n * @return {string}\n */\nTronWebProto.Permission.prototype.getPermissionName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setPermissionName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional int64 threshold = 4;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getThreshold = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setThreshold = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int32 parent_id = 5;\n * @return {number}\n */\nTronWebProto.Permission.prototype.getParentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setParentId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bytes operations = 6;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Permission.prototype.getOperations = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes operations = 6;\n * This is a type-conversion wrapper around `getOperations()`\n * @return {string}\n */\nTronWebProto.Permission.prototype.getOperations_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOperations()));\n};\n\n\n/**\n * optional bytes operations = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOperations()`\n * @return {!Uint8Array}\n */\nTronWebProto.Permission.prototype.getOperations_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOperations()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.setOperations = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * repeated Key keys = 7;\n * @return {!Array<!TronWebProto.Key>}\n */\nTronWebProto.Permission.prototype.getKeysList = function() {\n  return /** @type{!Array<!TronWebProto.Key>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Key, 7));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Key>} value\n * @return {!TronWebProto.Permission} returns this\n*/\nTronWebProto.Permission.prototype.setKeysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!TronWebProto.Key=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Key}\n */\nTronWebProto.Permission.prototype.addKeys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, TronWebProto.Key, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Permission} returns this\n */\nTronWebProto.Permission.prototype.clearKeysList = function() {\n  return this.setKeysList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Witness.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Witness.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Witness} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    votecount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pubkey: msg.getPubkey_asB64(),\n    url: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    totalproduced: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalmissed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    latestblocknum: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestslotnum: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    isjobs: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Witness;\n  return TronWebProto.Witness.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Witness} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Witness}\n */\nTronWebProto.Witness.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotecount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalproduced(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalmissed(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestblocknum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestslotnum(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsjobs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Witness.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Witness} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Witness.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotecount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTotalproduced();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalmissed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getLatestblocknum();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestslotnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getIsjobs();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 voteCount = 2;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getVotecount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setVotecount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Witness.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nTronWebProto.Witness.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nTronWebProto.Witness.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setPubkey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional string url = 4;\n * @return {string}\n */\nTronWebProto.Witness.prototype.getUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 totalProduced = 5;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalproduced = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalproduced = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 totalMissed = 6;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getTotalmissed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setTotalmissed = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 latestBlockNum = 7;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestblocknum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestblocknum = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latestSlotNum = 8;\n * @return {number}\n */\nTronWebProto.Witness.prototype.getLatestslotnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setLatestslotnum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bool isJobs = 9;\n * @return {boolean}\n */\nTronWebProto.Witness.prototype.getIsjobs = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.Witness} returns this\n */\nTronWebProto.Witness.prototype.setIsjobs = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Votes.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Votes.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Votes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Votes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    oldVotesList: jspb.Message.toObjectList(msg.getOldVotesList(),\n    TronWebProto.Vote.toObject, includeInstance),\n    newVotesList: jspb.Message.toObjectList(msg.getNewVotesList(),\n    TronWebProto.Vote.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Votes;\n  return TronWebProto.Votes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Votes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Votes}\n */\nTronWebProto.Votes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addOldVotes(value);\n      break;\n    case 3:\n      var value = new TronWebProto.Vote;\n      reader.readMessage(value,TronWebProto.Vote.deserializeBinaryFromReader);\n      msg.addNewVotes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Votes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Votes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Votes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOldVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getNewVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      TronWebProto.Vote.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Votes.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.Votes.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.Votes.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote old_votes = 2;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getOldVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setOldVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addOldVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearOldVotesList = function() {\n  return this.setOldVotesList([]);\n};\n\n\n/**\n * repeated Vote new_votes = 3;\n * @return {!Array<!TronWebProto.Vote>}\n */\nTronWebProto.Votes.prototype.getNewVotesList = function() {\n  return /** @type{!Array<!TronWebProto.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Vote, 3));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Vote>} value\n * @return {!TronWebProto.Votes} returns this\n*/\nTronWebProto.Votes.prototype.setNewVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!TronWebProto.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Vote}\n */\nTronWebProto.Votes.prototype.addNewVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Votes} returns this\n */\nTronWebProto.Votes.prototype.clearNewVotesList = function() {\n  return this.setNewVotesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.MarketOrderDetail.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.MarketOrderDetail.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.MarketOrderDetail} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    makerorderid: msg.getMakerorderid_asB64(),\n    takerorderid: msg.getTakerorderid_asB64(),\n    fillsellquantity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fillbuyquantity: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.MarketOrderDetail;\n  return TronWebProto.MarketOrderDetail.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.MarketOrderDetail} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.MarketOrderDetail.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMakerorderid(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTakerorderid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillsellquantity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFillbuyquantity(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.MarketOrderDetail.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.MarketOrderDetail} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.MarketOrderDetail.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTakerorderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFillsellquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFillbuyquantity();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMakerorderid()));\n};\n\n\n/**\n * optional bytes makerOrderId = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getMakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setMakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {string}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTakerorderid()));\n};\n\n\n/**\n * optional bytes takerOrderId = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTakerorderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.MarketOrderDetail.prototype.getTakerorderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTakerorderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setTakerorderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 fillSellQuantity = 3;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillsellquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillsellquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 fillBuyQuantity = 4;\n * @return {number}\n */\nTronWebProto.MarketOrderDetail.prototype.getFillbuyquantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.MarketOrderDetail} returns this\n */\nTronWebProto.MarketOrderDetail.prototype.setFillbuyquantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.repeatedFields_ = [2,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && TronWebProto.Transaction.raw.toObject(includeInstance, f),\n    signatureList: msg.getSignatureList_asB64(),\n    retList: jspb.Message.toObjectList(msg.getRetList(),\n    TronWebProto.Transaction.Result.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction;\n  return TronWebProto.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction}\n */\nTronWebProto.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.Transaction.raw;\n      reader.readMessage(value,TronWebProto.Transaction.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addSignature(value);\n      break;\n    case 5:\n      var value = new TronWebProto.Transaction.Result;\n      reader.readMessage(value,TronWebProto.Transaction.Result.deserializeBinaryFromReader);\n      msg.addRet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.Transaction.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignatureList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRetList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.Transaction.Result.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    parameter: (f = msg.getParameter()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n    provider: msg.getProvider_asB64(),\n    contractname: msg.getContractname_asB64(),\n    permissionId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Contract;\n  return TronWebProto.Transaction.Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new google_protobuf_any_pb.Any;\n      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n      msg.setParameter(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProvider(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractname(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPermissionId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getParameter();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_any_pb.Any.serializeBinaryToWriter\n    );\n  }\n  f = message.getProvider_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getContractname_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPermissionId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Contract.ContractType = {\n  ACCOUNTCREATECONTRACT: 0,\n  TRANSFERCONTRACT: 1,\n  TRANSFERASSETCONTRACT: 2,\n  VOTEASSETCONTRACT: 3,\n  VOTEWITNESSCONTRACT: 4,\n  WITNESSCREATECONTRACT: 5,\n  ASSETISSUECONTRACT: 6,\n  WITNESSUPDATECONTRACT: 8,\n  PARTICIPATEASSETISSUECONTRACT: 9,\n  ACCOUNTUPDATECONTRACT: 10,\n  FREEZEBALANCECONTRACT: 11,\n  UNFREEZEBALANCECONTRACT: 12,\n  WITHDRAWBALANCECONTRACT: 13,\n  UNFREEZEASSETCONTRACT: 14,\n  UPDATEASSETCONTRACT: 15,\n  PROPOSALCREATECONTRACT: 16,\n  PROPOSALAPPROVECONTRACT: 17,\n  PROPOSALDELETECONTRACT: 18,\n  SETACCOUNTIDCONTRACT: 19,\n  CUSTOMCONTRACT: 20,\n  CREATESMARTCONTRACT: 30,\n  TRIGGERSMARTCONTRACT: 31,\n  GETCONTRACT: 32,\n  UPDATESETTINGCONTRACT: 33,\n  EXCHANGECREATECONTRACT: 41,\n  EXCHANGEINJECTCONTRACT: 42,\n  EXCHANGEWITHDRAWCONTRACT: 43,\n  EXCHANGETRANSACTIONCONTRACT: 44,\n  UPDATEENERGYLIMITCONTRACT: 45,\n  ACCOUNTPERMISSIONUPDATECONTRACT: 46,\n  CLEARABICONTRACT: 48,\n  UPDATEBROKERAGECONTRACT: 49,\n  SHIELDEDTRANSFERCONTRACT: 51,\n  MARKETSELLASSETCONTRACT: 52,\n  MARKETCANCELORDERCONTRACT: 53,\n  FREEZEBALANCEV2CONTRACT: 54,\n  UNFREEZEBALANCEV2CONTRACT: 55,\n  WITHDRAWEXPIREUNFREEZECONTRACT: 56,\n  DELEGATERESOURCECONTRACT: 57,\n  UNDELEGATERESOURCECONTRACT: 58,\n  CANCELALLUNFREEZEV2CONTRACT: 59\n};\n\n/**\n * optional ContractType type = 1;\n * @return {!TronWebProto.Transaction.Contract.ContractType}\n */\nTronWebProto.Transaction.Contract.prototype.getType = function() {\n  return /** @type {!TronWebProto.Transaction.Contract.ContractType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract.ContractType} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Any parameter = 2;\n * @return {?TronWebProto.Any}\n */\nTronWebProto.Transaction.Contract.prototype.getParameter = function() {\n  return /** @type{?TronWebProto.Any} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Any|undefined} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n*/\nTronWebProto.Transaction.Contract.prototype.setParameter = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.clearParameter = function() {\n  return this.setParameter(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.Contract.prototype.hasParameter = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes provider = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes provider = 3;\n * This is a type-conversion wrapper around `getProvider()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProvider()));\n};\n\n\n/**\n * optional bytes provider = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProvider()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getProvider_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProvider()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setProvider = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * This is a type-conversion wrapper around `getContractname()`\n * @return {string}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractname()));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractname()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Contract.prototype.getContractname_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractname()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setContractname = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int32 Permission_id = 5;\n * @return {number}\n */\nTronWebProto.Transaction.Contract.prototype.getPermissionId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Contract} returns this\n */\nTronWebProto.Transaction.Contract.prototype.setPermissionId = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.Result.repeatedFields_ = [26];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.Result.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.Result.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.Result} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fee: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ret: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    contractret: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    assetissueid: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    withdrawAmount: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    unfreezeAmount: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    exchangeReceivedAmount: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    exchangeInjectAnotherAmount: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    exchangeWithdrawAnotherAmount: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    shieldedTransactionFee: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    orderid: msg.getOrderid_asB64(),\n    orderdetailsList: jspb.Message.toObjectList(msg.getOrderdetailsList(),\n    TronWebProto.MarketOrderDetail.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.Result;\n  return TronWebProto.Transaction.Result.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.Result.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.Transaction.Result.code} */ (reader.readEnum());\n      msg.setRet(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.Transaction.Result.contractResult} */ (reader.readEnum());\n      msg.setContractret(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssetissueid(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWithdrawAmount(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnfreezeAmount(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeReceivedAmount(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeInjectAnotherAmount(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeWithdrawAnotherAmount(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setShieldedTransactionFee(value);\n      break;\n    case 25:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOrderid(value);\n      break;\n    case 26:\n      var value = new TronWebProto.MarketOrderDetail;\n      reader.readMessage(value,TronWebProto.MarketOrderDetail.deserializeBinaryFromReader);\n      msg.addOrderdetails(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.Result.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getRet();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getContractret();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n  f = message.getAssetissueid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getWithdrawAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      15,\n      f\n    );\n  }\n  f = message.getUnfreezeAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      16,\n      f\n    );\n  }\n  f = message.getExchangeReceivedAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getExchangeInjectAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getExchangeWithdrawAnotherAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getShieldedTransactionFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getOrderid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      25,\n      f\n    );\n  }\n  f = message.getOrderdetailsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      26,\n      f,\n      TronWebProto.MarketOrderDetail.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.code = {\n  SUCESS: 0,\n  FAILED: 1\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.Transaction.Result.contractResult = {\n  DEFAULT: 0,\n  SUCCESS: 1,\n  REVERT: 2,\n  BAD_JUMP_DESTINATION: 3,\n  OUT_OF_MEMORY: 4,\n  PRECOMPILED_CONTRACT: 5,\n  STACK_TOO_SMALL: 6,\n  STACK_TOO_LARGE: 7,\n  ILLEGAL_OPERATION: 8,\n  STACK_OVERFLOW: 9,\n  OUT_OF_ENERGY: 10,\n  OUT_OF_TIME: 11,\n  JVM_STACK_OVER_FLOW: 12,\n  UNKNOWN: 13,\n  TRANSFER_FAILED: 14,\n  INVALID_CODE: 15\n};\n\n/**\n * optional int64 fee = 1;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional code ret = 2;\n * @return {!TronWebProto.Transaction.Result.code}\n */\nTronWebProto.Transaction.Result.prototype.getRet = function() {\n  return /** @type {!TronWebProto.Transaction.Result.code} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.code} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setRet = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional contractResult contractRet = 3;\n * @return {!TronWebProto.Transaction.Result.contractResult}\n */\nTronWebProto.Transaction.Result.prototype.getContractret = function() {\n  return /** @type {!TronWebProto.Transaction.Result.contractResult} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result.contractResult} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setContractret = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n/**\n * optional string assetIssueID = 14;\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getAssetissueid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setAssetissueid = function(value) {\n  return jspb.Message.setProto3StringField(this, 14, value);\n};\n\n\n/**\n * optional int64 withdraw_amount = 15;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getWithdrawAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setWithdrawAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 15, value);\n};\n\n\n/**\n * optional int64 unfreeze_amount = 16;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getUnfreezeAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setUnfreezeAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional int64 exchange_received_amount = 18;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeReceivedAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeReceivedAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional int64 exchange_inject_another_amount = 19;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeInjectAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeInjectAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * optional int64 exchange_withdraw_another_amount = 20;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeWithdrawAnotherAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeWithdrawAnotherAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 20, value);\n};\n\n\n/**\n * optional int64 exchange_id = 21;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 shielded_transaction_fee = 22;\n * @return {number}\n */\nTronWebProto.Transaction.Result.prototype.getShieldedTransactionFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setShieldedTransactionFee = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional bytes orderId = 25;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {string}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOrderid()));\n};\n\n\n/**\n * optional bytes orderId = 25;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOrderid()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.Result.prototype.getOrderid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOrderid()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.setOrderid = function(value) {\n  return jspb.Message.setProto3BytesField(this, 25, value);\n};\n\n\n/**\n * repeated MarketOrderDetail orderDetails = 26;\n * @return {!Array<!TronWebProto.MarketOrderDetail>}\n */\nTronWebProto.Transaction.Result.prototype.getOrderdetailsList = function() {\n  return /** @type{!Array<!TronWebProto.MarketOrderDetail>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.MarketOrderDetail, 26));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.MarketOrderDetail>} value\n * @return {!TronWebProto.Transaction.Result} returns this\n*/\nTronWebProto.Transaction.Result.prototype.setOrderdetailsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 26, value);\n};\n\n\n/**\n * @param {!TronWebProto.MarketOrderDetail=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.MarketOrderDetail}\n */\nTronWebProto.Transaction.Result.prototype.addOrderdetails = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 26, opt_value, TronWebProto.MarketOrderDetail, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.Result} returns this\n */\nTronWebProto.Transaction.Result.prototype.clearOrderdetailsList = function() {\n  return this.setOrderdetailsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.Transaction.raw.repeatedFields_ = [9,11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.Transaction.raw.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.Transaction.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.Transaction.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    refBlockBytes: msg.getRefBlockBytes_asB64(),\n    refBlockNum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    refBlockHash: msg.getRefBlockHash_asB64(),\n    expiration: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    authsList: jspb.Message.toObjectList(msg.getAuthsList(),\n    TronWebProto.authority.toObject, includeInstance),\n    data: msg.getData_asB64(),\n    contractList: jspb.Message.toObjectList(msg.getContractList(),\n    TronWebProto.Transaction.Contract.toObject, includeInstance),\n    scripts: msg.getScripts_asB64(),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    feeLimit: jspb.Message.getFieldWithDefault(msg, 18, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.Transaction.raw;\n  return TronWebProto.Transaction.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.Transaction.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockBytes(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRefBlockNum(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiration(value);\n      break;\n    case 9:\n      var value = new TronWebProto.authority;\n      reader.readMessage(value,TronWebProto.authority.deserializeBinaryFromReader);\n      msg.addAuths(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 11:\n      var value = new TronWebProto.Transaction.Contract;\n      reader.readMessage(value,TronWebProto.Transaction.Contract.deserializeBinaryFromReader);\n      msg.addContract(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScripts(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.Transaction.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.Transaction.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.Transaction.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRefBlockBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRefBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRefBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getExpiration();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAuthsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      9,\n      f,\n      TronWebProto.authority.serializeBinaryToWriter\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getContractList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      TronWebProto.Transaction.Contract.serializeBinaryToWriter\n    );\n  }\n  f = message.getScripts_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockBytes = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 ref_block_num = 3;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getRefBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setRefBlockHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiration = 8;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getExpiration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setExpiration = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * repeated authority auths = 9;\n * @return {!Array<!TronWebProto.authority>}\n */\nTronWebProto.Transaction.raw.prototype.getAuthsList = function() {\n  return /** @type{!Array<!TronWebProto.authority>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.authority, 9));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.authority>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setAuthsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 9, value);\n};\n\n\n/**\n * @param {!TronWebProto.authority=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.authority}\n */\nTronWebProto.Transaction.raw.prototype.addAuths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, TronWebProto.authority, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearAuthsList = function() {\n  return this.setAuthsList([]);\n};\n\n\n/**\n * optional bytes data = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes data = 10;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * repeated Contract contract = 11;\n * @return {!Array<!TronWebProto.Transaction.Contract>}\n */\nTronWebProto.Transaction.raw.prototype.getContractList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Contract>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Contract, 11));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Contract>} value\n * @return {!TronWebProto.Transaction.raw} returns this\n*/\nTronWebProto.Transaction.raw.prototype.setContractList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Contract=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Contract}\n */\nTronWebProto.Transaction.raw.prototype.addContract = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, TronWebProto.Transaction.Contract, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.clearContractList = function() {\n  return this.setContractList([]);\n};\n\n\n/**\n * optional bytes scripts = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.Transaction.raw.prototype.getScripts = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * This is a type-conversion wrapper around `getScripts()`\n * @return {string}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScripts()));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScripts()`\n * @return {!Uint8Array}\n */\nTronWebProto.Transaction.raw.prototype.getScripts_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScripts()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setScripts = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n/**\n * optional int64 timestamp = 14;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * optional int64 fee_limit = 18;\n * @return {number}\n */\nTronWebProto.Transaction.raw.prototype.getFeeLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.Transaction.raw} returns this\n */\nTronWebProto.Transaction.raw.prototype.setFeeLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 18, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?TronWebProto.Transaction.raw}\n */\nTronWebProto.Transaction.prototype.getRawData = function() {\n  return /** @type{?TronWebProto.Transaction.raw} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.Transaction.raw, 1));\n};\n\n\n/**\n * @param {?TronWebProto.Transaction.raw|undefined} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRawData = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRawData = function() {\n  return this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.Transaction.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated bytes signature = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nTronWebProto.Transaction.prototype.getSignatureList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<string>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getSignatureList()));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array<!Uint8Array>}\n */\nTronWebProto.Transaction.prototype.getSignatureList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getSignatureList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.setSignatureList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.addSignature = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearSignatureList = function() {\n  return this.setSignatureList([]);\n};\n\n\n/**\n * repeated Result ret = 5;\n * @return {!Array<!TronWebProto.Transaction.Result>}\n */\nTronWebProto.Transaction.prototype.getRetList = function() {\n  return /** @type{!Array<!TronWebProto.Transaction.Result>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.Transaction.Result, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Transaction.Result>} value\n * @return {!TronWebProto.Transaction} returns this\n*/\nTronWebProto.Transaction.prototype.setRetList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.Transaction.Result=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Transaction.Result}\n */\nTronWebProto.Transaction.prototype.addRet = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.Transaction.Result, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.Transaction} returns this\n */\nTronWebProto.Transaction.prototype.clearRetList = function() {\n  return this.setRetList([]);\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.AccountType = {\n  NORMAL: 0,\n  ASSETISSUE: 1,\n  CONTRACT: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/account_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.js');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.AccountCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountPermissionUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.AccountUpdateContract', null, global);\ngoog.exportSymbol('TronWebProto.SetAccountIdContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountCreateContract.displayName = 'TronWebProto.AccountCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountUpdateContract.displayName = 'TronWebProto.AccountUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SetAccountIdContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SetAccountIdContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SetAccountIdContract.displayName = 'TronWebProto.SetAccountIdContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountPermissionUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AccountPermissionUpdateContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AccountPermissionUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountPermissionUpdateContract.displayName = 'TronWebProto.AccountPermissionUpdateContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    accountAddress: msg.getAccountAddress_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountCreateContract;\n  return TronWebProto.AccountCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountCreateContract}\n */\nTronWebProto.AccountCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAccountAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes account_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes account_address = 2;\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {string}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountAddress()));\n};\n\n\n/**\n * optional bytes account_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountCreateContract.prototype.getAccountAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setAccountAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional AccountType type = 3;\n * @return {!TronWebProto.AccountType}\n */\nTronWebProto.AccountCreateContract.prototype.getType = function() {\n  return /** @type {!TronWebProto.AccountType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.AccountType} value\n * @return {!TronWebProto.AccountCreateContract} returns this\n */\nTronWebProto.AccountCreateContract.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountUpdateContract;\n  return TronWebProto.AccountUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountUpdateContract}\n */\nTronWebProto.AccountUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setAccountName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountUpdateContract} returns this\n */\nTronWebProto.AccountUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SetAccountIdContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SetAccountIdContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SetAccountIdContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SetAccountIdContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountId: msg.getAccountId_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SetAccountIdContract;\n  return TronWebProto.SetAccountIdContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SetAccountIdContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SetAccountIdContract}\n */\nTronWebProto.SetAccountIdContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SetAccountIdContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SetAccountIdContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SetAccountIdContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes account_id = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_id = 1;\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountId()));\n};\n\n\n/**\n * optional bytes account_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountId()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getAccountId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setAccountId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SetAccountIdContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SetAccountIdContract} returns this\n */\nTronWebProto.SetAccountIdContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AccountPermissionUpdateContract.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountPermissionUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountPermissionUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountPermissionUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    owner: (f = msg.getOwner()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n    witness: (f = msg.getWitness()) && core_Tron_pb.Permission.toObject(includeInstance, f),\n    activesList: jspb.Message.toObjectList(msg.getActivesList(),\n    core_Tron_pb.Permission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountPermissionUpdateContract;\n  return TronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountPermissionUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountPermissionUpdateContract}\n */\nTronWebProto.AccountPermissionUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.setOwner(value);\n      break;\n    case 3:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.setWitness(value);\n      break;\n    case 4:\n      var value = new core_Tron_pb.Permission;\n      reader.readMessage(value,core_Tron_pb.Permission.deserializeBinaryFromReader);\n      msg.addActives(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountPermissionUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountPermissionUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwner();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitness();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n  f = message.getActivesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      core_Tron_pb.Permission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional Permission owner = 2;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getOwner = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 2));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setOwner = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearOwner = function() {\n  return this.setOwner(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasOwner = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Permission witness = 3;\n * @return {?TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getWitness = function() {\n  return /** @type{?TronWebProto.Permission} */ (\n    jspb.Message.getWrapperField(this, core_Tron_pb.Permission, 3));\n};\n\n\n/**\n * @param {?TronWebProto.Permission|undefined} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setWitness = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearWitness = function() {\n  return this.setWitness(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.hasWitness = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated Permission actives = 4;\n * @return {!Array<!TronWebProto.Permission>}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.getActivesList = function() {\n  return /** @type{!Array<!TronWebProto.Permission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Permission, 4));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.Permission>} value\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n*/\nTronWebProto.AccountPermissionUpdateContract.prototype.setActivesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!TronWebProto.Permission=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.Permission}\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.addActives = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.Permission, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AccountPermissionUpdateContract} returns this\n */\nTronWebProto.AccountPermissionUpdateContract.prototype.clearActivesList = function() {\n  return this.setActivesList([]);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/asset_issue_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.AssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.AssetIssueContract.FrozenSupply', null, global);\ngoog.exportSymbol('TronWebProto.ParticipateAssetIssueContract', null, global);\ngoog.exportSymbol('TronWebProto.TransferAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeAssetContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateAssetContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.AssetIssueContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.displayName = 'TronWebProto.AssetIssueContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AssetIssueContract.FrozenSupply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AssetIssueContract.FrozenSupply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AssetIssueContract.FrozenSupply.displayName = 'TronWebProto.AssetIssueContract.FrozenSupply';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransferAssetContract.displayName = 'TronWebProto.TransferAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeAssetContract.displayName = 'TronWebProto.UnfreezeAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateAssetContract.displayName = 'TronWebProto.UpdateAssetContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ParticipateAssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ParticipateAssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ParticipateAssetIssueContract.displayName = 'TronWebProto.ParticipateAssetIssueContract';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.AssetIssueContract.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 41, \"\"),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    name: msg.getName_asB64(),\n    abbr: msg.getAbbr_asB64(),\n    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    TronWebProto.AssetIssueContract.FrozenSupply.toObject, includeInstance),\n    trxNum: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    precision: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    num: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    startTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    order: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    voteScore: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    freeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    publicFreeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    publicFreeAssetNetUsage: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    publicLatestFreeNetTime: jspb.Message.getFieldWithDefault(msg, 25, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract;\n  return TronWebProto.AssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract}\n */\nTronWebProto.AssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 41:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAbbr(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSupply(value);\n      break;\n    case 5:\n      var value = new TronWebProto.AssetIssueContract.FrozenSupply;\n      reader.readMessage(value,TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTrxNum(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPrecision(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNum(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOrder(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVoteScore(value);\n      break;\n    case 20:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 21:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeAssetNetLimit(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetLimit(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetUsage(value);\n      break;\n    case 25:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicLatestFreeNetTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      41,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbbr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getTotalSupply();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter\n    );\n  }\n  f = message.getTrxNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getPrecision();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getOrder();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getVoteScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      16,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      20,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      21,\n      f\n    );\n  }\n  f = message.getFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getPublicLatestFreeNetTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      25,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AssetIssueContract.FrozenSupply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenDays: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AssetIssueContract.FrozenSupply;\n  return TronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenAmount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDays(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AssetIssueContract.FrozenSupply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenDays();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_amount = 1;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_days = 2;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.getFrozenDays = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply} returns this\n */\nTronWebProto.AssetIssueContract.FrozenSupply.prototype.setFrozenDays = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string id = 41;\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 41, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes name = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes name = 2;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes abbr = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAbbr()));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getAbbr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAbbr()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setAbbr = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 total_supply = 4;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTotalSupply = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTotalSupply = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated FrozenSupply frozen_supply = 5;\n * @return {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>}\n */\nTronWebProto.AssetIssueContract.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.AssetIssueContract.FrozenSupply, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.AssetIssueContract.FrozenSupply>} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n*/\nTronWebProto.AssetIssueContract.prototype.setFrozenSupplyList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.AssetIssueContract.FrozenSupply=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.AssetIssueContract.FrozenSupply}\n */\nTronWebProto.AssetIssueContract.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.AssetIssueContract.FrozenSupply, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.clearFrozenSupplyList = function() {\n  return this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional int32 trx_num = 6;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getTrxNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setTrxNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int32 precision = 7;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPrecision = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPrecision = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int32 num = 8;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setNum = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 start_time = 9;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setStartTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 end_time = 10;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setEndTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 order = 11;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getOrder = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setOrder = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int32 vote_score = 16;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getVoteScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setVoteScore = function(value) {\n  return jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional bytes description = 20;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/**\n * optional bytes description = 20;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 20;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 20, value);\n};\n\n\n/**\n * optional bytes url = 21;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * optional bytes url = 21;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 21;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.AssetIssueContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 21, value);\n};\n\n\n/**\n * optional int64 free_asset_net_limit = 22;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_limit = 23;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 23, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_usage = 24;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicFreeAssetNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicFreeAssetNetUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 24, value);\n};\n\n\n/**\n * optional int64 public_latest_free_net_time = 25;\n * @return {number}\n */\nTronWebProto.AssetIssueContract.prototype.getPublicLatestFreeNetTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AssetIssueContract} returns this\n */\nTronWebProto.AssetIssueContract.prototype.setPublicLatestFreeNetTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 25, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransferAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransferAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransferAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    assetName: msg.getAssetName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransferAssetContract;\n  return TronWebProto.TransferAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferAssetContract}\n */\nTronWebProto.TransferAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransferAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes to_address = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferAssetContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.TransferAssetContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferAssetContract} returns this\n */\nTronWebProto.TransferAssetContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeAssetContract;\n  return TronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeAssetContract}\n */\nTronWebProto.UnfreezeAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeAssetContract} returns this\n */\nTronWebProto.UnfreezeAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    newLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    newPublicLimit: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateAssetContract;\n  return TronWebProto.UpdateAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateAssetContract}\n */\nTronWebProto.UpdateAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewLimit(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewPublicLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getNewLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNewPublicLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes description = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes description = 2;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes url = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes url = 3;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateAssetContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 new_limit = 4;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 new_public_limit = 5;\n * @return {number}\n */\nTronWebProto.UpdateAssetContract.prototype.getNewPublicLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateAssetContract} returns this\n */\nTronWebProto.UpdateAssetContract.prototype.setNewPublicLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ParticipateAssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    assetName: msg.getAssetName_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ParticipateAssetIssueContract;\n  return TronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ParticipateAssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ParticipateAssetIssueContract}\n */\nTronWebProto.ParticipateAssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ParticipateAssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ParticipateAssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAssetName = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ParticipateAssetIssueContract} returns this\n */\nTronWebProto.ParticipateAssetIssueContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/balance_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_contract_common_pb = require('../../core/contract/common_pb.js');\ngoog.object.extend(proto, core_contract_common_pb);\ngoog.exportSymbol('TronWebProto.AccountBalanceRequest', null, global);\ngoog.exportSymbol('TronWebProto.AccountBalanceResponse', null, global);\ngoog.exportSymbol('TronWebProto.AccountIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.AccountTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.BlockBalanceTrace.BlockIdentifier', null, global);\ngoog.exportSymbol('TronWebProto.CancelAllUnfreezeV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.DelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.FreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace', null, global);\ngoog.exportSymbol('TronWebProto.TransactionBalanceTrace.Operation', null, global);\ngoog.exportSymbol('TronWebProto.TransferContract', null, global);\ngoog.exportSymbol('TronWebProto.UnDelegateResourceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.UnfreezeBalanceV2Contract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawBalanceContract', null, global);\ngoog.exportSymbol('TronWebProto.WithdrawExpireUnfreezeContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.FreezeBalanceContract.displayName = 'TronWebProto.FreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeBalanceContract.displayName = 'TronWebProto.UnfreezeBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WithdrawBalanceContract.displayName = 'TronWebProto.WithdrawBalanceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransferContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransferContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransferContract.displayName = 'TronWebProto.TransferContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.TransactionBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransactionBalanceTrace.displayName = 'TronWebProto.TransactionBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TransactionBalanceTrace.Operation = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TransactionBalanceTrace.Operation, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TransactionBalanceTrace.Operation.displayName = 'TronWebProto.TransactionBalanceTrace.Operation';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.BlockBalanceTrace.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BlockBalanceTrace.displayName = 'TronWebProto.BlockBalanceTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BlockBalanceTrace.BlockIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BlockBalanceTrace.BlockIdentifier.displayName = 'TronWebProto.BlockBalanceTrace.BlockIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountTrace = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountTrace, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountTrace.displayName = 'TronWebProto.AccountTrace';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountIdentifier = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountIdentifier, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountIdentifier.displayName = 'TronWebProto.AccountIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountBalanceRequest.displayName = 'TronWebProto.AccountBalanceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.AccountBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.AccountBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.AccountBalanceResponse.displayName = 'TronWebProto.AccountBalanceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.FreezeBalanceV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.FreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.FreezeBalanceV2Contract.displayName = 'TronWebProto.FreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnfreezeBalanceV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnfreezeBalanceV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnfreezeBalanceV2Contract.displayName = 'TronWebProto.UnfreezeBalanceV2Contract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WithdrawExpireUnfreezeContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WithdrawExpireUnfreezeContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WithdrawExpireUnfreezeContract.displayName = 'TronWebProto.WithdrawExpireUnfreezeContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.DelegateResourceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.DelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.DelegateResourceContract.displayName = 'TronWebProto.DelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UnDelegateResourceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UnDelegateResourceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UnDelegateResourceContract.displayName = 'TronWebProto.UnDelegateResourceContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CancelAllUnfreezeV2Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CancelAllUnfreezeV2Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.CancelAllUnfreezeV2Contract.displayName = 'TronWebProto.CancelAllUnfreezeV2Contract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.FreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.FreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.FreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    frozenDuration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.FreezeBalanceContract;\n  return TronWebProto.FreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceContract}\n */\nTronWebProto.FreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDuration(value);\n      break;\n    case 10:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.FreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenDuration();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_duration = 3;\n * @return {number}\n */\nTronWebProto.FreezeBalanceContract.prototype.getFrozenDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setFrozenDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceContract} returns this\n */\nTronWebProto.FreezeBalanceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeBalanceContract;\n  return TronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceContract}\n */\nTronWebProto.UnfreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 10:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 10;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceContract} returns this\n */\nTronWebProto.UnfreezeBalanceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 15, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WithdrawBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WithdrawBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WithdrawBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WithdrawBalanceContract;\n  return TronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawBalanceContract}\n */\nTronWebProto.WithdrawBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WithdrawBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawBalanceContract} returns this\n */\nTronWebProto.WithdrawBalanceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransferContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransferContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransferContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransferContract;\n  return TronWebProto.TransferContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransferContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransferContract}\n */\nTronWebProto.TransferContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransferContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransferContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransferContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransferContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransferContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setToAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransferContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransferContract} returns this\n */\nTronWebProto.TransferContract.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.TransactionBalanceTrace.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransactionBalanceTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransactionBalanceTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransactionBalanceTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionIdentifier: msg.getTransactionIdentifier_asB64(),\n    operationList: jspb.Message.toObjectList(msg.getOperationList(),\n    TronWebProto.TransactionBalanceTrace.Operation.toObject, includeInstance),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransactionBalanceTrace;\n  return TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTransactionIdentifier(value);\n      break;\n    case 2:\n      var value = new TronWebProto.TransactionBalanceTrace.Operation;\n      reader.readMessage(value,TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader);\n      msg.addOperation(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionIdentifier_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOperationList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TransactionBalanceTrace.Operation.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.Operation.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    operationIdentifier: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: msg.getAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TransactionBalanceTrace.Operation;\n  return TronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.Operation.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOperationIdentifier(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TransactionBalanceTrace.Operation} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TransactionBalanceTrace.Operation.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOperationIdentifier();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 operation_identifier = 1;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getOperationIdentifier = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setOperationIdentifier = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TransactionBalanceTrace.Operation} returns this\n */\nTronWebProto.TransactionBalanceTrace.Operation.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTransactionIdentifier()));\n};\n\n\n/**\n * optional bytes transaction_identifier = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransactionIdentifier()`\n * @return {!Uint8Array}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getTransactionIdentifier_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTransactionIdentifier()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setTransactionIdentifier = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Operation operation = 2;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace.Operation>}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getOperationList = function() {\n  return /** @type{!Array<!TronWebProto.TransactionBalanceTrace.Operation>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace.Operation, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace.Operation>} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n*/\nTronWebProto.TransactionBalanceTrace.prototype.setOperationList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace.Operation=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace.Operation}\n */\nTronWebProto.TransactionBalanceTrace.prototype.addOperation = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.TransactionBalanceTrace.Operation, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.clearOperationList = function() {\n  return this.setOperationList([]);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nTronWebProto.TransactionBalanceTrace.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.TransactionBalanceTrace} returns this\n */\nTronWebProto.TransactionBalanceTrace.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.BlockBalanceTrace.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BlockBalanceTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BlockBalanceTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BlockBalanceTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    transactionBalanceTraceList: jspb.Message.toObjectList(msg.getTransactionBalanceTraceList(),\n    TronWebProto.TransactionBalanceTrace.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BlockBalanceTrace;\n  return TronWebProto.BlockBalanceTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 3:\n      var value = new TronWebProto.TransactionBalanceTrace;\n      reader.readMessage(value,TronWebProto.TransactionBalanceTrace.deserializeBinaryFromReader);\n      msg.addTransactionBalanceTrace(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BlockBalanceTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTransactionBalanceTraceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      TronWebProto.TransactionBalanceTrace.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n  return TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BlockBalanceTrace.BlockIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace.BlockIdentifier} returns this\n */\nTronWebProto.BlockBalanceTrace.BlockIdentifier.prototype.setNumber = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional BlockIdentifier block_identifier = 1;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.BlockBalanceTrace.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 1));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n*/\nTronWebProto.BlockBalanceTrace.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.BlockBalanceTrace.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 timestamp = 2;\n * @return {number}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.setTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated TransactionBalanceTrace transaction_balance_trace = 3;\n * @return {!Array<!TronWebProto.TransactionBalanceTrace>}\n */\nTronWebProto.BlockBalanceTrace.prototype.getTransactionBalanceTraceList = function() {\n  return /** @type{!Array<!TronWebProto.TransactionBalanceTrace>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.TransactionBalanceTrace, 3));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.TransactionBalanceTrace>} value\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n*/\nTronWebProto.BlockBalanceTrace.prototype.setTransactionBalanceTraceList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!TronWebProto.TransactionBalanceTrace=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.TransactionBalanceTrace}\n */\nTronWebProto.BlockBalanceTrace.prototype.addTransactionBalanceTrace = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, TronWebProto.TransactionBalanceTrace, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.BlockBalanceTrace} returns this\n */\nTronWebProto.BlockBalanceTrace.prototype.clearTransactionBalanceTraceList = function() {\n  return this.setTransactionBalanceTraceList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountTrace.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountTrace.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountTrace} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountTrace.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    placeholder: jspb.Message.getFieldWithDefault(msg, 99, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountTrace;\n  return TronWebProto.AccountTrace.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountTrace} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountTrace}\n */\nTronWebProto.AccountTrace.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 99:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPlaceholder(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountTrace.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountTrace.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountTrace} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountTrace.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPlaceholder();\n  if (f !== 0) {\n    writer.writeInt64(\n      99,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 placeholder = 99;\n * @return {number}\n */\nTronWebProto.AccountTrace.prototype.getPlaceholder = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 99, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountTrace} returns this\n */\nTronWebProto.AccountTrace.prototype.setPlaceholder = function(value) {\n  return jspb.Message.setProto3IntField(this, 99, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountIdentifier.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountIdentifier.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountIdentifier} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountIdentifier.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountIdentifier;\n  return TronWebProto.AccountIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountIdentifier.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountIdentifier.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.AccountIdentifier.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.AccountIdentifier} returns this\n */\nTronWebProto.AccountIdentifier.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountIdentifier: (f = msg.getAccountIdentifier()) && TronWebProto.AccountIdentifier.toObject(includeInstance, f),\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountBalanceRequest;\n  return TronWebProto.AccountBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceRequest}\n */\nTronWebProto.AccountBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.AccountIdentifier;\n      reader.readMessage(value,TronWebProto.AccountIdentifier.deserializeBinaryFromReader);\n      msg.setAccountIdentifier(value);\n      break;\n    case 2:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.AccountIdentifier.serializeBinaryToWriter\n    );\n  }\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional AccountIdentifier account_identifier = 1;\n * @return {?TronWebProto.AccountIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getAccountIdentifier = function() {\n  return /** @type{?TronWebProto.AccountIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.AccountIdentifier, 1));\n};\n\n\n/**\n * @param {?TronWebProto.AccountIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n*/\nTronWebProto.AccountBalanceRequest.prototype.setAccountIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearAccountIdentifier = function() {\n  return this.setAccountIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasAccountIdentifier = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceRequest.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n*/\nTronWebProto.AccountBalanceRequest.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceRequest} returns this\n */\nTronWebProto.AccountBalanceRequest.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceRequest.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.AccountBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.AccountBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.AccountBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blockIdentifier: (f = msg.getBlockIdentifier()) && TronWebProto.BlockBalanceTrace.BlockIdentifier.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.AccountBalanceResponse;\n  return TronWebProto.AccountBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.AccountBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.AccountBalanceResponse}\n */\nTronWebProto.AccountBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 2:\n      var value = new TronWebProto.BlockBalanceTrace.BlockIdentifier;\n      reader.readMessage(value,TronWebProto.BlockBalanceTrace.BlockIdentifier.deserializeBinaryFromReader);\n      msg.setBlockIdentifier(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.AccountBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.AccountBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.AccountBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.AccountBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getBlockIdentifier();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.BlockBalanceTrace.BlockIdentifier.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional BlockBalanceTrace.BlockIdentifier block_identifier = 2;\n * @return {?TronWebProto.BlockBalanceTrace.BlockIdentifier}\n */\nTronWebProto.AccountBalanceResponse.prototype.getBlockIdentifier = function() {\n  return /** @type{?TronWebProto.BlockBalanceTrace.BlockIdentifier} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.BlockBalanceTrace.BlockIdentifier, 2));\n};\n\n\n/**\n * @param {?TronWebProto.BlockBalanceTrace.BlockIdentifier|undefined} value\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n*/\nTronWebProto.AccountBalanceResponse.prototype.setBlockIdentifier = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.AccountBalanceResponse} returns this\n */\nTronWebProto.AccountBalanceResponse.prototype.clearBlockIdentifier = function() {\n  return this.setBlockIdentifier(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.AccountBalanceResponse.prototype.hasBlockIdentifier = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.FreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.FreezeBalanceV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.FreezeBalanceV2Contract;\n  return TronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.FreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.FreezeBalanceV2Contract}\n */\nTronWebProto.FreezeBalanceV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.FreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.FreezeBalanceV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setFrozenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.FreezeBalanceV2Contract} returns this\n */\nTronWebProto.FreezeBalanceV2Contract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnfreezeBalanceV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    unfreezeBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    resource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnfreezeBalanceV2Contract;\n  return TronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnfreezeBalanceV2Contract}\n */\nTronWebProto.UnfreezeBalanceV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnfreezeBalance(value);\n      break;\n    case 3:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnfreezeBalanceV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnfreezeBalanceV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUnfreezeBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 unfreeze_balance = 2;\n * @return {number}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getUnfreezeBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setUnfreezeBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional ResourceCode resource = 3;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnfreezeBalanceV2Contract} returns this\n */\nTronWebProto.UnfreezeBalanceV2Contract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WithdrawExpireUnfreezeContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawExpireUnfreezeContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WithdrawExpireUnfreezeContract;\n  return TronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WithdrawExpireUnfreezeContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WithdrawExpireUnfreezeContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WithdrawExpireUnfreezeContract} returns this\n */\nTronWebProto.WithdrawExpireUnfreezeContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.DelegateResourceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.DelegateResourceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.DelegateResourceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegateResourceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    receiverAddress: msg.getReceiverAddress_asB64(),\n    lock: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),\n    lockPeriod: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.DelegateResourceContract;\n  return TronWebProto.DelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.DelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.DelegateResourceContract}\n */\nTronWebProto.DelegateResourceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLock(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLockPeriod(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.DelegateResourceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.DelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.DelegateResourceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getLock();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getLockPeriod();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.DelegateResourceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.DelegateResourceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bool lock = 5;\n * @return {boolean}\n */\nTronWebProto.DelegateResourceContract.prototype.getLock = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLock = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional int64 lock_period = 6;\n * @return {number}\n */\nTronWebProto.DelegateResourceContract.prototype.getLockPeriod = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.DelegateResourceContract} returns this\n */\nTronWebProto.DelegateResourceContract.prototype.setLockPeriod = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UnDelegateResourceContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UnDelegateResourceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UnDelegateResourceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnDelegateResourceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    resource: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    balance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    receiverAddress: msg.getReceiverAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UnDelegateResourceContract;\n  return TronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UnDelegateResourceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UnDelegateResourceContract}\n */\nTronWebProto.UnDelegateResourceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!TronWebProto.ResourceCode} */ (reader.readEnum());\n      msg.setResource(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReceiverAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UnDelegateResourceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UnDelegateResourceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UnDelegateResourceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getResource();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getReceiverAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional ResourceCode resource = 2;\n * @return {!TronWebProto.ResourceCode}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getResource = function() {\n  return /** @type {!TronWebProto.ResourceCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!TronWebProto.ResourceCode} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setResource = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional int64 balance = 3;\n * @return {number}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {string}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * optional bytes receiver_address = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiverAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UnDelegateResourceContract.prototype.getReceiverAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReceiverAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UnDelegateResourceContract} returns this\n */\nTronWebProto.UnDelegateResourceContract.prototype.setReceiverAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.CancelAllUnfreezeV2Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CancelAllUnfreezeV2Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.CancelAllUnfreezeV2Contract;\n  return TronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CancelAllUnfreezeV2Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CancelAllUnfreezeV2Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CancelAllUnfreezeV2Contract} returns this\n */\nTronWebProto.CancelAllUnfreezeV2Contract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/common.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ResourceCode', null, global);\n/**\n * @enum {number}\n */\nTronWebProto.ResourceCode = {\n  BANDWIDTH: 0,\n  ENERGY: 1,\n  TRON_POWER: 2\n};\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/exchange_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ExchangeCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeInjectContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeTransactionContract', null, global);\ngoog.exportSymbol('TronWebProto.ExchangeWithdrawContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeCreateContract.displayName = 'TronWebProto.ExchangeCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeInjectContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeInjectContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeInjectContract.displayName = 'TronWebProto.ExchangeInjectContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeWithdrawContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeWithdrawContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeWithdrawContract.displayName = 'TronWebProto.ExchangeWithdrawContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ExchangeTransactionContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ExchangeTransactionContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ExchangeTransactionContract.displayName = 'TronWebProto.ExchangeTransactionContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    firstTokenId: msg.getFirstTokenId_asB64(),\n    firstTokenBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    secondTokenId: msg.getSecondTokenId_asB64(),\n    secondTokenBalance: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeCreateContract;\n  return TronWebProto.ExchangeCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeCreateContract}\n */\nTronWebProto.ExchangeCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFirstTokenId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFirstTokenBalance(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSecondTokenId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSecondTokenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFirstTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFirstTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getSecondTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getSecondTokenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * optional bytes first_token_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFirstTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFirstTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 first_token_balance = 3;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getFirstTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setFirstTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * optional bytes second_token_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSecondTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSecondTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 second_token_balance = 5;\n * @return {number}\n */\nTronWebProto.ExchangeCreateContract.prototype.getSecondTokenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeCreateContract} returns this\n */\nTronWebProto.ExchangeCreateContract.prototype.setSecondTokenBalance = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeInjectContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeInjectContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeInjectContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeInjectContract;\n  return TronWebProto.ExchangeInjectContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeInjectContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeInjectContract}\n */\nTronWebProto.ExchangeInjectContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeInjectContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeInjectContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeInjectContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeInjectContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeInjectContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeInjectContract} returns this\n */\nTronWebProto.ExchangeInjectContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeWithdrawContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeWithdrawContract;\n  return TronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeWithdrawContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeWithdrawContract}\n */\nTronWebProto.ExchangeWithdrawContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeWithdrawContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeWithdrawContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeWithdrawContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeWithdrawContract} returns this\n */\nTronWebProto.ExchangeWithdrawContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ExchangeTransactionContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ExchangeTransactionContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ExchangeTransactionContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    exchangeId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tokenId: msg.getTokenId_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expected: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ExchangeTransactionContract;\n  return TronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ExchangeTransactionContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ExchangeTransactionContract}\n */\nTronWebProto.ExchangeTransactionContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExchangeId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTokenId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpected(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ExchangeTransactionContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ExchangeTransactionContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ExchangeTransactionContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getExchangeId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTokenId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpected();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 exchange_id = 2;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExchangeId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExchangeId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes token_id = 3;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {string}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTokenId()));\n};\n\n\n/**\n * optional bytes token_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTokenId()`\n * @return {!Uint8Array}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getTokenId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTokenId()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 quant = 4;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 expected = 5;\n * @return {number}\n */\nTronWebProto.ExchangeTransactionContract.prototype.getExpected = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ExchangeTransactionContract} returns this\n */\nTronWebProto.ExchangeTransactionContract.prototype.setExpected = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/proposal_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.ProposalApproveContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.ProposalDeleteContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalApproveContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalApproveContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalApproveContract.displayName = 'TronWebProto.ProposalApproveContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalCreateContract.displayName = 'TronWebProto.ProposalCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ProposalDeleteContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ProposalDeleteContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ProposalDeleteContract.displayName = 'TronWebProto.ProposalDeleteContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalApproveContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalApproveContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalApproveContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    isAddApproval: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalApproveContract;\n  return TronWebProto.ProposalApproveContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalApproveContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalApproveContract}\n */\nTronWebProto.ProposalApproveContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAddApproval(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalApproveContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalApproveContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalApproveContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getIsAddApproval();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalApproveContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalApproveContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bool is_add_approval = 3;\n * @return {boolean}\n */\nTronWebProto.ProposalApproveContract.prototype.getIsAddApproval = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.ProposalApproveContract} returns this\n */\nTronWebProto.ProposalApproveContract.prototype.setIsAddApproval = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    parametersMap: (f = msg.getParametersMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalCreateContract;\n  return TronWebProto.ProposalCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalCreateContract}\n */\nTronWebProto.ProposalCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = msg.getParametersMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getParametersMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * map<int64, int64> parameters = 2;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,number>}\n */\nTronWebProto.ProposalCreateContract.prototype.getParametersMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,number>} */ (\n      jspb.Message.getMapField(this, 2, opt_noLazyCreate,\n      null));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!TronWebProto.ProposalCreateContract} returns this\n */\nTronWebProto.ProposalCreateContract.prototype.clearParametersMap = function() {\n  this.getParametersMap().clear();\n  return this;};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ProposalDeleteContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ProposalDeleteContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ProposalDeleteContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ProposalDeleteContract;\n  return TronWebProto.ProposalDeleteContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ProposalDeleteContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ProposalDeleteContract}\n */\nTronWebProto.ProposalDeleteContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposalId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ProposalDeleteContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ProposalDeleteContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ProposalDeleteContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getProposalId();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ProposalDeleteContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 proposal_id = 2;\n * @return {number}\n */\nTronWebProto.ProposalDeleteContract.prototype.getProposalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ProposalDeleteContract} returns this\n */\nTronWebProto.ProposalDeleteContract.prototype.setProposalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/smart_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\nvar core_Tron_pb = require('../../core/Tron_pb.js');\ngoog.object.extend(proto, core_Tron_pb);\ngoog.exportSymbol('TronWebProto.ClearABIContract', null, global);\ngoog.exportSymbol('TronWebProto.ContractState', null, global);\ngoog.exportSymbol('TronWebProto.CreateSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.EntryType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.Param', null, global);\ngoog.exportSymbol('TronWebProto.SmartContract.ABI.Entry.StateMutabilityType', null, global);\ngoog.exportSymbol('TronWebProto.SmartContractDataWrapper', null, global);\ngoog.exportSymbol('TronWebProto.TriggerSmartContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateEnergyLimitContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateSettingContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.displayName = 'TronWebProto.SmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.displayName = 'TronWebProto.SmartContract.ABI';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.SmartContract.ABI.Entry.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.Entry.displayName = 'TronWebProto.SmartContract.ABI.Entry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContract.ABI.Entry.Param = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContract.ABI.Entry.Param, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContract.ABI.Entry.Param.displayName = 'TronWebProto.SmartContract.ABI.Entry.Param';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ContractState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ContractState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ContractState.displayName = 'TronWebProto.ContractState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.CreateSmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.CreateSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.CreateSmartContract.displayName = 'TronWebProto.CreateSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.TriggerSmartContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.TriggerSmartContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.TriggerSmartContract.displayName = 'TronWebProto.TriggerSmartContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.ClearABIContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.ClearABIContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.ClearABIContract.displayName = 'TronWebProto.ClearABIContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateSettingContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateSettingContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateSettingContract.displayName = 'TronWebProto.UpdateSettingContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateEnergyLimitContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateEnergyLimitContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateEnergyLimitContract.displayName = 'TronWebProto.UpdateEnergyLimitContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SmartContractDataWrapper = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SmartContractDataWrapper, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SmartContractDataWrapper.displayName = 'TronWebProto.SmartContractDataWrapper';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    originAddress: msg.getOriginAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    abi: (f = msg.getAbi()) && TronWebProto.SmartContract.ABI.toObject(includeInstance, f),\n    bytecode: msg.getBytecode_asB64(),\n    callValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    name: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    codeHash: msg.getCodeHash_asB64(),\n    trxHash: msg.getTrxHash_asB64(),\n    version: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract;\n  return TronWebProto.SmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract}\n */\nTronWebProto.SmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOriginAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = new TronWebProto.SmartContract.ABI;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.deserializeBinaryFromReader);\n      msg.setAbi(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBytecode(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallValue(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConsumeUserResourcePercent(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOriginEnergyLimit(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCodeHash(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTrxHash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOriginAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbi();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      TronWebProto.SmartContract.ABI.serializeBinaryToWriter\n    );\n  }\n  f = message.getBytecode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCallValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getConsumeUserResourcePercent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getOriginEnergyLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCodeHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n  f = message.getTrxHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entrysList: jspb.Message.toObjectList(msg.getEntrysList(),\n    TronWebProto.SmartContract.ABI.Entry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI;\n  return TronWebProto.SmartContract.ABI.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.ABI.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.SmartContract.ABI.Entry;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader);\n      msg.addEntrys(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntrysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.SmartContract.ABI.Entry.repeatedFields_ = [4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.Entry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI.Entry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    anonymous: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    constant: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    name: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    inputsList: jspb.Message.toObjectList(msg.getInputsList(),\n    TronWebProto.SmartContract.ABI.Entry.Param.toObject, includeInstance),\n    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),\n    TronWebProto.SmartContract.ABI.Entry.Param.toObject, includeInstance),\n    type: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    payable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),\n    statemutability: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI.Entry;\n  return TronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.Entry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAnonymous(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setConstant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = new TronWebProto.SmartContract.ABI.Entry.Param;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n      msg.addInputs(value);\n      break;\n    case 5:\n      var value = new TronWebProto.SmartContract.ABI.Entry.Param;\n      reader.readMessage(value,TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader);\n      msg.addOutputs(value);\n      break;\n    case 6:\n      var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPayable(value);\n      break;\n    case 8:\n      var value = /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (reader.readEnum());\n      msg.setStatemutability(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAnonymous();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getConstant();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = message.getPayable();\n  if (f) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = message.getStatemutability();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.EntryType = {\n  UNKNOWNENTRYTYPE: 0,\n  CONSTRUCTOR: 1,\n  FUNCTION: 2,\n  EVENT: 3,\n  FALLBACK: 4,\n  RECEIVE: 5,\n  ERROR: 6\n};\n\n/**\n * @enum {number}\n */\nTronWebProto.SmartContract.ABI.Entry.StateMutabilityType = {\n  UNKNOWNMUTABILITYTYPE: 0,\n  PURE: 1,\n  VIEW: 2,\n  NONPAYABLE: 3,\n  PAYABLE: 4\n};\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContract.ABI.Entry.Param.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.Param.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    indexed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContract.ABI.Entry.Param;\n  return TronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIndexed(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContract.ABI.Entry.Param.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIndexed();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool indexed = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getIndexed = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setIndexed = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.Param.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bool anonymous = 1;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getAnonymous = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setAnonymous = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool constant = 2;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getConstant = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setConstant = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * repeated Param inputs = 4;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getInputsList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 4));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n*/\nTronWebProto.SmartContract.ABI.Entry.prototype.setInputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addInputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearInputsList = function() {\n  return this.setInputsList([]);\n};\n\n\n/**\n * repeated Param outputs = 5;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getOutputsList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry.Param, 5));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry.Param>} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n*/\nTronWebProto.SmartContract.ABI.Entry.prototype.setOutputsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.Param=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry.Param}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.addOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, TronWebProto.SmartContract.ABI.Entry.Param, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.clearOutputsList = function() {\n  return this.setOutputsList([]);\n};\n\n\n/**\n * optional EntryType type = 6;\n * @return {!TronWebProto.SmartContract.ABI.Entry.EntryType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getType = function() {\n  return /** @type {!TronWebProto.SmartContract.ABI.Entry.EntryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.EntryType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 6, value);\n};\n\n\n/**\n * optional bool payable = 7;\n * @return {boolean}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getPayable = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setPayable = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 7, value);\n};\n\n\n/**\n * optional StateMutabilityType stateMutability = 8;\n * @return {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType}\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.getStatemutability = function() {\n  return /** @type {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry.StateMutabilityType} value\n * @return {!TronWebProto.SmartContract.ABI.Entry} returns this\n */\nTronWebProto.SmartContract.ABI.Entry.prototype.setStatemutability = function(value) {\n  return jspb.Message.setProto3EnumField(this, 8, value);\n};\n\n\n/**\n * repeated Entry entrys = 1;\n * @return {!Array<!TronWebProto.SmartContract.ABI.Entry>}\n */\nTronWebProto.SmartContract.ABI.prototype.getEntrysList = function() {\n  return /** @type{!Array<!TronWebProto.SmartContract.ABI.Entry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.SmartContract.ABI.Entry, 1));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.SmartContract.ABI.Entry>} value\n * @return {!TronWebProto.SmartContract.ABI} returns this\n*/\nTronWebProto.SmartContract.ABI.prototype.setEntrysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!TronWebProto.SmartContract.ABI.Entry=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.SmartContract.ABI.Entry}\n */\nTronWebProto.SmartContract.ABI.prototype.addEntrys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, TronWebProto.SmartContract.ABI.Entry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.SmartContract.ABI} returns this\n */\nTronWebProto.SmartContract.ABI.prototype.clearEntrysList = function() {\n  return this.setEntrysList([]);\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOriginAddress()));\n};\n\n\n/**\n * optional bytes origin_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOriginAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getOriginAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOriginAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional ABI abi = 3;\n * @return {?TronWebProto.SmartContract.ABI}\n */\nTronWebProto.SmartContract.prototype.getAbi = function() {\n  return /** @type{?TronWebProto.SmartContract.ABI} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract.ABI, 3));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract.ABI|undefined} value\n * @return {!TronWebProto.SmartContract} returns this\n*/\nTronWebProto.SmartContract.prototype.setAbi = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.clearAbi = function() {\n  return this.setAbi(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContract.prototype.hasAbi = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getBytecode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBytecode()));\n};\n\n\n/**\n * optional bytes bytecode = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBytecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getBytecode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBytecode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setBytecode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 call_value = 5;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getCallValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCallValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 consume_user_resource_percent = 6;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getConsumeUserResourcePercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setConsumeUserResourcePercent = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int64 origin_energy_limit = 8;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getOriginEnergyLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setOriginEnergyLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getCodeHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCodeHash()));\n};\n\n\n/**\n * optional bytes code_hash = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCodeHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getCodeHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCodeHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setCodeHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContract.prototype.getTrxHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {string}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTrxHash()));\n};\n\n\n/**\n * optional bytes trx_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTrxHash()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContract.prototype.getTrxHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTrxHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setTrxHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * optional int32 version = 11;\n * @return {number}\n */\nTronWebProto.SmartContract.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SmartContract} returns this\n */\nTronWebProto.SmartContract.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ContractState.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ContractState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ContractState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ContractState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    energyUsage: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    energyFactor: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    updateCycle: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ContractState;\n  return TronWebProto.ContractState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ContractState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ContractState}\n */\nTronWebProto.ContractState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyUsage(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEnergyFactor(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUpdateCycle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ContractState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ContractState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ContractState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ContractState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEnergyUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getEnergyFactor();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getUpdateCycle();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 energy_usage = 1;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyUsage = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 energy_factor = 2;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getEnergyFactor = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setEnergyFactor = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 update_cycle = 3;\n * @return {number}\n */\nTronWebProto.ContractState.prototype.getUpdateCycle = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.ContractState} returns this\n */\nTronWebProto.ContractState.prototype.setUpdateCycle = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.CreateSmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.CreateSmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.CreateSmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CreateSmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    newContract: (f = msg.getNewContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n    callTokenValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    tokenId: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.CreateSmartContract;\n  return TronWebProto.CreateSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.CreateSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.CreateSmartContract}\n */\nTronWebProto.CreateSmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.SmartContract;\n      reader.readMessage(value,TronWebProto.SmartContract.deserializeBinaryFromReader);\n      msg.setNewContract(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallTokenValue(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTokenId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.CreateSmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.CreateSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.CreateSmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNewContract();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      TronWebProto.SmartContract.serializeBinaryToWriter\n    );\n  }\n  f = message.getCallTokenValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTokenId();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.CreateSmartContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional SmartContract new_contract = 2;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.CreateSmartContract.prototype.getNewContract = function() {\n  return /** @type{?TronWebProto.SmartContract} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 2));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n*/\nTronWebProto.CreateSmartContract.prototype.setNewContract = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.clearNewContract = function() {\n  return this.setNewContract(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.CreateSmartContract.prototype.hasNewContract = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 call_token_value = 3;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getCallTokenValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setCallTokenValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 token_id = 4;\n * @return {number}\n */\nTronWebProto.CreateSmartContract.prototype.getTokenId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.CreateSmartContract} returns this\n */\nTronWebProto.CreateSmartContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.TriggerSmartContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.TriggerSmartContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.TriggerSmartContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TriggerSmartContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    callValue: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    data: msg.getData_asB64(),\n    callTokenValue: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    tokenId: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.TriggerSmartContract;\n  return TronWebProto.TriggerSmartContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.TriggerSmartContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.TriggerSmartContract}\n */\nTronWebProto.TriggerSmartContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallValue(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCallTokenValue(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTokenId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.TriggerSmartContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.TriggerSmartContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.TriggerSmartContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCallValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCallTokenValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTokenId();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 call_value = 3;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes data = 4;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.TriggerSmartContract.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes data = 4;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nTronWebProto.TriggerSmartContract.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 call_token_value = 5;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getCallTokenValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setCallTokenValue = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 token_id = 6;\n * @return {number}\n */\nTronWebProto.TriggerSmartContract.prototype.getTokenId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.TriggerSmartContract} returns this\n */\nTronWebProto.TriggerSmartContract.prototype.setTokenId = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.ClearABIContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.ClearABIContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.ClearABIContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ClearABIContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.ClearABIContract;\n  return TronWebProto.ClearABIContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.ClearABIContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.ClearABIContract}\n */\nTronWebProto.ClearABIContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.ClearABIContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.ClearABIContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.ClearABIContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.ClearABIContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.ClearABIContract} returns this\n */\nTronWebProto.ClearABIContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateSettingContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateSettingContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateSettingContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateSettingContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    consumeUserResourcePercent: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateSettingContract;\n  return TronWebProto.UpdateSettingContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateSettingContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateSettingContract}\n */\nTronWebProto.UpdateSettingContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConsumeUserResourcePercent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateSettingContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateSettingContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateSettingContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getConsumeUserResourcePercent();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateSettingContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 consume_user_resource_percent = 3;\n * @return {number}\n */\nTronWebProto.UpdateSettingContract.prototype.getConsumeUserResourcePercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateSettingContract} returns this\n */\nTronWebProto.UpdateSettingContract.prototype.setConsumeUserResourcePercent = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateEnergyLimitContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateEnergyLimitContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateEnergyLimitContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    contractAddress: msg.getContractAddress_asB64(),\n    originEnergyLimit: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateEnergyLimitContract;\n  return TronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateEnergyLimitContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateEnergyLimitContract}\n */\nTronWebProto.UpdateEnergyLimitContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOriginEnergyLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateEnergyLimitContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateEnergyLimitContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getOriginEnergyLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {string}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractAddress()));\n};\n\n\n/**\n * optional bytes contract_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getContractAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 origin_energy_limit = 3;\n * @return {number}\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.getOriginEnergyLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateEnergyLimitContract} returns this\n */\nTronWebProto.UpdateEnergyLimitContract.prototype.setOriginEnergyLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SmartContractDataWrapper.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SmartContractDataWrapper.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SmartContractDataWrapper} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContractDataWrapper.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    smartContract: (f = msg.getSmartContract()) && TronWebProto.SmartContract.toObject(includeInstance, f),\n    runtimecode: msg.getRuntimecode_asB64(),\n    contractState: (f = msg.getContractState()) && TronWebProto.ContractState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SmartContractDataWrapper;\n  return TronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SmartContractDataWrapper} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SmartContractDataWrapper}\n */\nTronWebProto.SmartContractDataWrapper.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new TronWebProto.SmartContract;\n      reader.readMessage(value,TronWebProto.SmartContract.deserializeBinaryFromReader);\n      msg.setSmartContract(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRuntimecode(value);\n      break;\n    case 3:\n      var value = new TronWebProto.ContractState;\n      reader.readMessage(value,TronWebProto.ContractState.deserializeBinaryFromReader);\n      msg.setContractState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SmartContractDataWrapper.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SmartContractDataWrapper} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SmartContractDataWrapper.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSmartContract();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      TronWebProto.SmartContract.serializeBinaryToWriter\n    );\n  }\n  f = message.getRuntimecode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getContractState();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      TronWebProto.ContractState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SmartContract smart_contract = 1;\n * @return {?TronWebProto.SmartContract}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getSmartContract = function() {\n  return /** @type{?TronWebProto.SmartContract} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.SmartContract, 1));\n};\n\n\n/**\n * @param {?TronWebProto.SmartContract|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n*/\nTronWebProto.SmartContractDataWrapper.prototype.setSmartContract = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearSmartContract = function() {\n  return this.setSmartContract(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasSmartContract = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {string}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRuntimecode()));\n};\n\n\n/**\n * optional bytes runtimecode = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRuntimecode()`\n * @return {!Uint8Array}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getRuntimecode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRuntimecode()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.setRuntimecode = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional ContractState contract_state = 3;\n * @return {?TronWebProto.ContractState}\n */\nTronWebProto.SmartContractDataWrapper.prototype.getContractState = function() {\n  return /** @type{?TronWebProto.ContractState} */ (\n    jspb.Message.getWrapperField(this, TronWebProto.ContractState, 3));\n};\n\n\n/**\n * @param {?TronWebProto.ContractState|undefined} value\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n*/\nTronWebProto.SmartContractDataWrapper.prototype.setContractState = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!TronWebProto.SmartContractDataWrapper} returns this\n */\nTronWebProto.SmartContractDataWrapper.prototype.clearContractState = function() {\n  return this.setContractState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nTronWebProto.SmartContractDataWrapper.prototype.hasContractState = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/storage_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.BuyStorageBytesContract', null, global);\ngoog.exportSymbol('TronWebProto.BuyStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.SellStorageContract', null, global);\ngoog.exportSymbol('TronWebProto.UpdateBrokerageContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageBytesContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageBytesContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageBytesContract.displayName = 'TronWebProto.BuyStorageBytesContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.BuyStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.BuyStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.BuyStorageContract.displayName = 'TronWebProto.BuyStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.SellStorageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.SellStorageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.SellStorageContract.displayName = 'TronWebProto.SellStorageContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.UpdateBrokerageContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.UpdateBrokerageContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.UpdateBrokerageContract.displayName = 'TronWebProto.UpdateBrokerageContract';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageBytesContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageBytesContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageBytesContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    bytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageBytesContract;\n  return TronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageBytesContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageBytesContract}\n */\nTronWebProto.BuyStorageBytesContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageBytesContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageBytesContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageBytesContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 bytes = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageBytesContract.prototype.getBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageBytesContract} returns this\n */\nTronWebProto.BuyStorageBytesContract.prototype.setBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.BuyStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.BuyStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.BuyStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    quant: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.BuyStorageContract;\n  return TronWebProto.BuyStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.BuyStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.BuyStorageContract}\n */\nTronWebProto.BuyStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuant(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.BuyStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.BuyStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.BuyStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getQuant();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.BuyStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 quant = 2;\n * @return {number}\n */\nTronWebProto.BuyStorageContract.prototype.getQuant = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.BuyStorageContract} returns this\n */\nTronWebProto.BuyStorageContract.prototype.setQuant = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.SellStorageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.SellStorageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.SellStorageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    storageBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.SellStorageContract;\n  return TronWebProto.SellStorageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.SellStorageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.SellStorageContract}\n */\nTronWebProto.SellStorageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStorageBytes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.SellStorageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.SellStorageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.SellStorageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStorageBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.SellStorageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 storage_bytes = 2;\n * @return {number}\n */\nTronWebProto.SellStorageContract.prototype.getStorageBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.SellStorageContract} returns this\n */\nTronWebProto.SellStorageContract.prototype.setStorageBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.UpdateBrokerageContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.UpdateBrokerageContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.UpdateBrokerageContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    brokerage: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.UpdateBrokerageContract;\n  return TronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.UpdateBrokerageContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.UpdateBrokerageContract}\n */\nTronWebProto.UpdateBrokerageContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBrokerage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.UpdateBrokerageContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.UpdateBrokerageContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.UpdateBrokerageContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBrokerage();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 brokerage = 2;\n * @return {number}\n */\nTronWebProto.UpdateBrokerageContract.prototype.getBrokerage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.UpdateBrokerageContract} returns this\n */\nTronWebProto.UpdateBrokerageContract.prototype.setBrokerage = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","// source: core/contract/witness_contract.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('@tronweb3/google-protobuf');\nvar goog = jspb;\nvar global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof window !== 'undefined' && window) ||\n  (typeof global !== 'undefined' && global) ||\n  (typeof self !== 'undefined' && self) ||\n  (function () { return this; }).call(null) ||\n  Function('return this')();\n\ngoog.exportSymbol('TronWebProto.VoteWitnessContract', null, global);\ngoog.exportSymbol('TronWebProto.VoteWitnessContract.Vote', null, global);\ngoog.exportSymbol('TronWebProto.WitnessCreateContract', null, global);\ngoog.exportSymbol('TronWebProto.WitnessUpdateContract', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessCreateContract.displayName = 'TronWebProto.WitnessCreateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.WitnessUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.WitnessUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.WitnessUpdateContract.displayName = 'TronWebProto.WitnessUpdateContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, TronWebProto.VoteWitnessContract.repeatedFields_, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.displayName = 'TronWebProto.VoteWitnessContract';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nTronWebProto.VoteWitnessContract.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(TronWebProto.VoteWitnessContract.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  TronWebProto.VoteWitnessContract.Vote.displayName = 'TronWebProto.VoteWitnessContract.Vote';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    url: msg.getUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessCreateContract;\n  return TronWebProto.WitnessCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessCreateContract}\n */\nTronWebProto.WitnessCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes url = 2;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes url = 2;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessCreateContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessCreateContract} returns this\n */\nTronWebProto.WitnessCreateContract.prototype.setUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.WitnessUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.WitnessUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.WitnessUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    updateUrl: msg.getUpdateUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.WitnessUpdateContract;\n  return TronWebProto.WitnessUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.WitnessUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.WitnessUpdateContract}\n */\nTronWebProto.WitnessUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUpdateUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.WitnessUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.WitnessUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.WitnessUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUpdateUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes update_url = 12;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {string}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {!Uint8Array}\n */\nTronWebProto.WitnessUpdateContract.prototype.getUpdateUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.WitnessUpdateContract} returns this\n */\nTronWebProto.WitnessUpdateContract.prototype.setUpdateUrl = function(value) {\n  return jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nTronWebProto.VoteWitnessContract.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    TronWebProto.VoteWitnessContract.Vote.toObject, includeInstance),\n    support: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract;\n  return TronWebProto.VoteWitnessContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract}\n */\nTronWebProto.VoteWitnessContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new TronWebProto.VoteWitnessContract.Vote;\n      reader.readMessage(value,TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSupport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getSupport();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.toObject = function(opt_includeInstance) {\n  return TronWebProto.VoteWitnessContract.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new TronWebProto.VoteWitnessContract.Vote;\n  return TronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!TronWebProto.VoteWitnessContract.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  TronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!TronWebProto.VoteWitnessContract.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nTronWebProto.VoteWitnessContract.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!TronWebProto.VoteWitnessContract.Vote} returns this\n */\nTronWebProto.VoteWitnessContract.Vote.prototype.setVoteCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nTronWebProto.VoteWitnessContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setOwnerAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote votes = 2;\n * @return {!Array<!TronWebProto.VoteWitnessContract.Vote>}\n */\nTronWebProto.VoteWitnessContract.prototype.getVotesList = function() {\n  return /** @type{!Array<!TronWebProto.VoteWitnessContract.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, TronWebProto.VoteWitnessContract.Vote, 2));\n};\n\n\n/**\n * @param {!Array<!TronWebProto.VoteWitnessContract.Vote>} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n*/\nTronWebProto.VoteWitnessContract.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!TronWebProto.VoteWitnessContract.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!TronWebProto.VoteWitnessContract.Vote}\n */\nTronWebProto.VoteWitnessContract.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, TronWebProto.VoteWitnessContract.Vote, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n/**\n * optional bool support = 3;\n * @return {boolean}\n */\nTronWebProto.VoteWitnessContract.prototype.getSupport = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!TronWebProto.VoteWitnessContract} returns this\n */\nTronWebProto.VoteWitnessContract.prototype.setSupport = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, TronWebProto);\n","module.exports = require(\"@tronweb3/google-protobuf\");","module.exports = require(\"@tronweb3/google-protobuf/google/protobuf/any_pb\");","module.exports = require(\"@tronweb3/google-protobuf/google/protobuf/any_pb.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/typeof\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n\nexport const TRON_BIP39_PATH_PREFIX = \"m/44'/195'\";\nexport const TRON_BIP39_PATH_INDEX_0 = TRON_BIP39_PATH_PREFIX + \"/0'/0/0\";","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// set strict as true: if the length of str is odd, add 0 before the str to make its length as even\nexport function hexStr2byteArray(str, strict = false) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    let len = str.length;\n\n    if (strict) {\n        if (len % 2) {\n            str = `0${str}`;\n            len++;\n        }\n    }\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < len; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n/**\n *  The current version of Ethers.\n */\nexport const version = \"6.13.2\";\n//# sourceMappingURL=_version.js.map","/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nfunction checkType(value, type, name) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties(target, values, types) {\n    for (let key in values) {\n        let value = values[key];\n        const type = (types ? types[key] : null);\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map","/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\nimport { version } from \"../_version.js\";\nimport { defineProperties } from \"./properties.js\";\nfunction stringify(value) {\n    if (value == null) {\n        return \"null\";\n    }\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map(stringify)).join(\", \") + \" ]\";\n    }\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n    if (typeof (value) === \"object\" && typeof (value.toJSON) === \"function\") {\n        return stringify(value.toJSON());\n    }\n    switch (typeof (value)) {\n        case \"boolean\":\n        case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"number\":\n            return (value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${stringify(k)}: ${stringify(value[k])}`).join(\", \") + \" }\";\n        }\n    }\n    return `[ COULD NOT SERIALIZE ]`;\n}\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError(error, code) {\n    return (error && error.code === code);\n}\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError(message, code, info) {\n    let shortMessage = message;\n    {\n        const details = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${stringify(info)}`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") {\n                    continue;\n                }\n                const value = (info[key]);\n                //                try {\n                details.push(key + \"=\" + stringify(value));\n                //                } catch (error: any) {\n                //                console.log(\"MMM\", error.message);\n                //                    details.push(key + \"=[could not serialize object]\");\n                //                }\n            }\n        }\n        details.push(`code=${code}`);\n        details.push(`version=${version}`);\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n    defineProperties(error, { code });\n    if (info) {\n        Object.assign(error, info);\n    }\n    if (error.shortMessage == null) {\n        defineProperties(error, { shortMessage });\n    }\n    return error;\n}\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert(check, message, code, info) {\n    if (!check) {\n        throw makeError(message, code, info);\n    }\n}\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check, message, name, value) {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\nexport function assertArgumentCount(count, expectedCount, message) {\n    if (message == null) {\n        message = \"\";\n    }\n    if (message) {\n        message = \": \" + message;\n    }\n    assert(count >= expectedCount, \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n        }\n        ;\n        /* c8 ignore stop */\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error(\"broken\");\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n    }\n    catch (error) { }\n    return accum;\n}, []);\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form) {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard, guard, className) {\n    if (className == null) {\n        className = \"\";\n    }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\nfunction _getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof (value) === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value, name) {\n    return _getBytes(value, name, false);\n}\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value, name) {\n    return _getBytes(value, name, true);\n}\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof (length) === \"number\" && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && (value.length % 2) !== 0) {\n        return false;\n    }\n    return true;\n}\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value) {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\nconst HexCharacters = \"0123456789abcdef\";\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data) {\n    const bytes = getBytes(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return getBytes(data).length;\n}\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data, start, end) {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0 : start, (end == null) ? bytes.length : end));\n}\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) {\n        bytes = bytes.substring(2);\n    }\n    return \"0x\" + bytes;\n}\nfunction zeroPad(data, length, left) {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data, length) {\n    return zeroPad(data, length, true);\n}\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data, length) {\n    return zeroPad(data, length, false);\n}\n//# sourceMappingURL=data.js.map","/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value, _width) {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n    return value;\n}\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value, _width) {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n    const limit = (BN_1 << (width - BN_1));\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    }\n    else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n    return value;\n}\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value, _bits) {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            }\n            catch (e) {\n                assertArgument(false, `invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value, name) {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\nconst Nibbles = \"0123456789abcdef\";\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value) {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return getBigInt(value);\n}\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value, name) {\n    switch (typeof (value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") {\n                    throw new Error(\"empty string\");\n                }\n                return getNumber(BigInt(value), name);\n            }\n            catch (e) {\n                assertArgument(false, `invalid numeric string: ${e.message}`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value) {\n    return getNumber(toBigInt(value));\n}\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value, _width) {\n    const value = getUint(_value, \"value\");\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = \"0\" + result;\n        }\n    }\n    else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${width} bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n        // Pad the value to the required width\n        while (result.length < (width * 2)) {\n            result = \"0\" + result;\n        }\n    }\n    return \"0x\" + result;\n}\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value) {\n    const value = getUint(_value, \"value\");\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value) {\n    let result = hexlify(isBytesLike(value) ? value : toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) {\n        result = result.substring(1);\n    }\n    if (result === \"\") {\n        result = \"0\";\n    }\n    return \"0x\" + result;\n}\n//# sourceMappingURL=maths.js.map","import { ZeroHash } from \"../constants/index.js\";\nimport { concat, dataLength, getBigInt, getBytes, getNumber, hexlify, toBeArray, isHexString, zeroPadValue, assertArgument, assertPrivate } from \"../utils/index.js\";\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nfunction toUint256(value) {\n    return zeroPadValue(toBeArray(value), 32);\n}\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r;\n    #s;\n    #v;\n    #networkV;\n    /**\n     *  The ``r`` value for a signautre.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r() { return this.#r; }\n    set r(value) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s() { return this.#s; }\n    set s(_value) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        const value = hexlify(_value);\n        assertArgument(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n        this.#s = value;\n    }\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v() { return this.#v; }\n    set v(value) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV() { return this.#networkV; }\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId() {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity() {\n        return (this.v === 27) ? 0 : 1;\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS() {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized() {\n        return concat([this.r, this.yParityAndS]);\n    }\n    /**\n     *  The serialized representation.\n     */\n    get serialized() {\n        return concat([this.r, this.s, (this.yParity ? \"0x1c\" : \"0x1b\")]);\n    }\n    /**\n     *  @private\n     */\n    constructor(guard, r, s, v) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone() {\n        const clone = new Signature(_guard, this.r, this.s, this.v);\n        if (this.networkV) {\n            clone.#networkV = this.networkV;\n        }\n        return clone;\n    }\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON() {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString() : null),\n            r: this.r, s: this.s, v: this.v,\n        };\n    }\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v) {\n        const bv = getBigInt(v, \"v\");\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) {\n            return BN_0;\n        }\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n        return (bv - BN_35) / BN_2;\n    }\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId, v) {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v) {\n        const bv = getBigInt(v);\n        if (bv === BN_0 || bv === BN_27) {\n            return 27;\n        }\n        if (bv === BN_1 || bv === BN_28) {\n            return 28;\n        }\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27 : 28;\n    }\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig) {\n        function assertError(check, message) {\n            assertArgument(check, message, \"signature\", sig);\n        }\n        ;\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n        if (typeof (sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            assertError(false, \"invalid raw signature length\");\n        }\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s, yParityAndS) {\n            if (s != null) {\n                return toUint256(s);\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n        assertError((getBytes(s)[0] & 0x80) == 0, \"non-canonical s\");\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function (_v, yParityAndS, yParity) {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v : undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28 : 27) };\n            }\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) {\n            result.#networkV = networkV;\n        }\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n        return result;\n    }\n}\n//# sourceMappingURL=signature.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","import { createHash } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nconst _sha256 = function (data) {\n    return createHash(\"sha256\").update(data).digest();\n};\nconst _sha512 = function (data) {\n    return createHash(\"sha512\").update(data).digest();\n};\nlet __sha256 = _sha256;\nlet __sha512 = _sha512;\nlet locked256 = false, locked512 = false;\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function () { locked256 = true; };\nsha256.register = function (func) {\n    if (locked256) {\n        throw new Error(\"sha256 is locked\");\n    }\n    __sha256 = func;\n};\nObject.freeze(sha256);\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function () { locked512 = true; };\nsha512.register = function (func) {\n    if (locked512) {\n        throw new Error(\"sha512 is locked\");\n    }\n    __sha512 = func;\n};\nObject.freeze(sha256);\n//# sourceMappingURL=sha2.js.map","/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\nimport { pbkdf2Sync } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _pbkdf2 = function (password, salt, iterations, keylen, algo) {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n};\nlet __pbkdf2 = _pbkdf2;\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password, _salt, iterations, keylen, algo) {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function () { locked = true; };\npbkdf2.register = function (func) {\n    if (locked) {\n        throw new Error(\"pbkdf2 is locked\");\n    }\n    __pbkdf2 = func;\n};\nObject.freeze(pbkdf2);\n//# sourceMappingURL=pbkdf2.js.map","/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    assertArgument(false, `invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof (badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    const bytes = getBytes(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            }\n            else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str, form) {\n    assertArgument(typeof (str) === \"string\", \"invalid string value\", \"str\", str);\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00), \"invalid surrogate pair\", \"str\", str);\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\n;\n//export \nfunction _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str, form) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:crypto\");","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto = nc && typeof nc === 'object' && 'webcrypto' in nc ? nc.webcrypto : undefined;\n//# sourceMappingURL=cryptoNode.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\nimport { keccak_256 } from \"@noble/hashes/sha3\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _keccak256 = function (data) {\n    return keccak_256(data);\n};\nlet __keccak256 = _keccak256;\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function () { locked = true; };\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"keccak256 is locked\");\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value) {\n    return keccak256(toUtf8Bytes(value));\n}\n//# sourceMappingURL=id.js.map","import { assertArgument } from \"../utils/index.js\";\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\nfunction unfold(words, sep) {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        }\n        else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        }\n        else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, []);\n}\n/**\n *  @_ignore\n */\nexport function decode(data, subs) {\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps = [];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) {\n                clumps.push(\";\");\n            }\n        }\n        else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) {\n        throw new Error(`leftovers: ${JSON.stringify(leftover)}`);\n    }\n    /* c8 ignore stop */\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n/**\n *  @_ignore\n */\nexport function decodeOwl(data) {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n    return decode(data.substring(1 + 2 * subsChrs.length), data.substring(1, 1 + 2 * subsChrs.length));\n}\n//# sourceMappingURL=decode-owl.js.map","import { defineProperties } from \"../utils/index.js\";\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport class Wordlist {\n    locale;\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale) {\n        defineProperties(this, { locale });\n    }\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase) {\n        return phrase.toLowerCase().split(/\\s+/g);\n    }\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words) {\n        return words.join(\" \");\n    }\n}\n//# sourceMappingURL=wordlist.js.map","// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data;\n    #checksum;\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale, data, checksum) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data() { return this.#data; }\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords() {\n        return decodeOwl(this.#data);\n    }\n    #words;\n    #loadWords() {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);\n            }\n            /* c8 ignore stop */\n            this.#words = words;\n        }\n        return this.#words;\n    }\n    getWord(index) {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return this.#loadWords().indexOf(word);\n    }\n}\n//# sourceMappingURL=wordlist-owl.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEn();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-en.js.map","import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport { defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return ((1 << bits) - 1) & 0xff;\n}\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    assertNormalize(\"NFKD\");\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24, \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${i}`, \"mnemonic\", \"[ REDACTED ]\");\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask), \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32, \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n    if (wordlist == null) {\n        wordlist = LangEn.wordlist();\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nconst _guard = {};\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    phrase;\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    password;\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    wordlist;\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    entropy;\n    /**\n     *  @private\n     */\n    constructor(guard, entropy, phrase, password, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties(this, { phrase, password, wordlist, entropy });\n    }\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed() {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase, password, wordlist) {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy, password, wordlist) {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy, wordlist) {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase, wordlist) {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase, wordlist) {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        }\n        catch (error) { }\n        return false;\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return createHmac(algorithm, key).update(data).digest();\n};\nlet __computeHmac = _computeHmac;\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm, _key, _data) {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () { locked = true; };\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error(\"computeHmac is locked\");\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\nfunction getChecksumAddress(address) {\n    //    if (!isHexString(address, 20)) {\n    //        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    //    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = getBytes(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nconst Base36 = (function () {\n    ;\n    const result = {};\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\nfunction fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address) {\n    assertArgument(typeof (address) === \"string\", \"invalid address\", \"address\", address);\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) {\n            address = \"0x\" + address;\n        }\n        const result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address, \"bad address checksum\", \"address\", address);\n        return result;\n    }\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        return getChecksumAddress(\"0x\" + result);\n    }\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address) {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n//# sourceMappingURL=address.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex, assertArgument } from \"../utils/index.js\";\nimport { Signature } from \"./signature.js\";\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey;\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n    /**\n     *  The private key.\n     */\n    get privateKey() { return this.#privateKey; }\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey() { return SigningKey.computePublicKey(this.#privateKey); }\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey() { return SigningKey.computePublicKey(this.#privateKey, true); }\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c : 0x1b)\n        });\n    }\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other) {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key, compressed) {\n        let bytes = getBytes(key, \"key\");\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest, signature) {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n        const sig = Signature.from(signature);\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([sig.r, sig.s])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signautre for digest\", \"signature\", signature);\n        return \"0x\" + pubKey.toHex(false);\n    }\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0, p1, compressed) {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n//# sourceMappingURL=signing-key.js.map","import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key) {\n    let pubkey;\n    if (typeof (key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    }\n    else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest, signature) {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n//# sourceMappingURL=address.js.map","import { defineProperties, concat, getBytesCopy, getNumber, hexlify, toBeArray, toBigInt, toNumber, assert, assertArgument\n/*, isError*/\n } from \"../../utils/index.js\";\n/**\n * @_ignore:\n */\nexport const WordSize = 32;\nconst Padding = new Uint8Array(WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [\"then\"];\nconst _guard = {};\nconst resultNames = new WeakMap();\nfunction getNames(result) {\n    return resultNames.get(result);\n}\nfunction setNames(result, names) {\n    resultNames.set(result, names);\n}\nfunction throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n}\nfunction toObject(names, items, deep) {\n    if (names.indexOf(null) >= 0) {\n        return items.map((item, index) => {\n            if (item instanceof Result) {\n                return toObject(getNames(item), item, deep);\n            }\n            return item;\n        });\n    }\n    return names.reduce((accum, name, index) => {\n        let item = items.getValue(name);\n        if (!(name in accum)) {\n            if (deep && item instanceof Result) {\n                item = toObject(getNames(item), item, deep);\n            }\n            accum[name] = item;\n        }\n        return accum;\n    }, {});\n}\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array {\n    // No longer used; but cannot be removed as it will remove the\n    // #private field from the .d.ts which may break backwards\n    // compatibility\n    #names;\n    /**\n     *  @private\n     */\n    constructor(...args) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items = args[1];\n        let names = (args[2] || []).slice();\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [];\n            wrap = false;\n        }\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof (name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, (new Map()));\n        // Remove any key thats not unique\n        setNames(this, Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        })));\n        // Dummy operations to prevent TypeScript from complaining\n        this.#names = [];\n        if (this.#names == null) {\n            void (this.#names);\n        }\n        if (!wrap) {\n            return;\n        }\n        // A wrapped Result is immutable\n        Object.freeze(this);\n        // Proxy indices and names so we can trap deferred errors\n        const proxy = new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof (prop) === \"string\") {\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${index}`, item);\n                        }\n                        return item;\n                    }\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function (...args) {\n                            return value.apply((this === receiver) ? target : this, args);\n                        };\n                    }\n                    else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target : this, [prop]);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n        setNames(proxy, getNames(this));\n        return proxy;\n    }\n    /**\n     *  Returns the Result as a normal Array. If %%deep%%, any children\n     *  which are Result objects are also converted to a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(deep) {\n        const result = [];\n        this.forEach((item, index) => {\n            if (item instanceof Error) {\n                throwError(`index ${index}`, item);\n            }\n            if (deep && item instanceof Result) {\n                item = item.toArray(deep);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n    /**\n     *  Returns the Result as an Object with each name-value pair. If\n     *  %%deep%%, any children which are Result objects are also\n     *  converted to an Object.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(deep) {\n        const names = getNames(this);\n        return names.reduce((accum, name, index) => {\n            assert(name != null, `value at index ${index} unnamed`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n            return toObject(names, this, deep);\n        }, {});\n    }\n    /**\n     *  @_ignore\n     */\n    slice(start, end) {\n        if (start == null) {\n            start = 0;\n        }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.length;\n        }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) {\n                end = 0;\n            }\n        }\n        if (end > this.length) {\n            end = this.length;\n        }\n        const _names = getNames(this);\n        const result = [], names = [];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(_names[i]);\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  @_ignore\n     */\n    filter(callback, thisArg) {\n        const _names = getNames(this);\n        const result = [], names = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(_names[i]);\n            }\n        }\n        return new Result(_guard, result, names);\n    }\n    /**\n     *  @_ignore\n     */\n    map(callback, thisArg) {\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${i}`, item);\n            }\n            result.push(callback.call(thisArg, item, i, this));\n        }\n        return result;\n    }\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name) {\n        const index = getNames(this).indexOf(name);\n        if (index === -1) {\n            return undefined;\n        }\n        const value = this[index];\n        if (value instanceof Error) {\n            throwError(`property ${JSON.stringify(name)}`, value.error);\n        }\n        return value;\n    }\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items, keys) {\n        return new Result(_guard, items, keys);\n    }\n}\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nfunction getValue(value) {\n    let bytes = toBeArray(value);\n    assert(bytes.length <= WordSize, \"value out-of-bounds\", \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n    return bytes;\n}\n/**\n *  @_ignore\n */\nexport class Coder {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    name;\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    type;\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    localName;\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    dynamic;\n    constructor(name, type, localName, dynamic) {\n        defineProperties(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n    _throwError(message, value) {\n        assertArgument(false, message, this.localName, value);\n    }\n}\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data;\n    #dataLength;\n    constructor() {\n        this.#data = [];\n        this.#dataLength = 0;\n    }\n    get data() {\n        return concat(this.#data);\n    }\n    get length() { return this.#dataLength; }\n    #writeData(data) {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value) {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return this.#writeData(bytes);\n    }\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value) {\n        return this.#writeData(getValue(value));\n    }\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue() {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    allowLoose;\n    #data;\n    #offset;\n    #bytesRead;\n    #parent;\n    #maxInflation;\n    constructor(data, allowLoose, maxInflation) {\n        defineProperties(this, { allowLoose: !!allowLoose });\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation : 1024;\n        this.#offset = 0;\n    }\n    get data() { return hexlify(this.#data); }\n    get dataLength() { return this.#data.length; }\n    get consumed() { return this.#offset; }\n    get bytes() { return new Uint8Array(this.#data); }\n    #incrementBytesRead(count) {\n        if (this.#parent) {\n            return this.#parent.#incrementBytesRead(count);\n        }\n        this.#bytesRead += count;\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${this.#maxInflation} ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`, \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n    #peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            }\n            else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength);\n    }\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset) {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n    // Read bytes\n    readBytes(length, loose) {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    // Read a numeric values\n    readValue() {\n        return toBigInt(this.readBytes(WordSize));\n    }\n    readIndex() {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\nconst _gaurd = {};\nfunction n(value, width) {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${signed ? \"\" : \"u\"}int${width}`, value, { signed, width });\n}\nfunction b(value, size) {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${(size) ? size : \"\"}`, value, { size });\n}\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    type;\n    /**\n     *  The actual value.\n     */\n    value;\n    #options;\n    /**\n     *  @_ignore:\n     */\n    _typedSymbol;\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd, type, value, options) {\n        if (options == null) {\n            options = null;\n        }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties(this, { _typedSymbol, type, value });\n        this.#options = options;\n        // Check the value is valid\n        this.format();\n    }\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format() {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"tuple\") {\n            return `tuple(${this.value.map((v) => v.format()).join(\",\")})`;\n        }\n        return this.type;\n    }\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue() {\n        return 0;\n    }\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue() {\n        return 0;\n    }\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue() {\n        return 0;\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt() {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData() {\n        return this.type.startsWith(\"bytes\");\n    }\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString() {\n        return (this.type === \"string\");\n    }\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName() {\n        if (this.type !== \"tuple\") {\n            throw TypeError(\"not a tuple\");\n        }\n        return this.#options;\n    }\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength() {\n        if (this.type !== \"array\") {\n            throw TypeError(\"not an array\");\n        }\n        if (this.#options === true) {\n            return -1;\n        }\n        if (this.#options === false) {\n            return (this.value).length;\n        }\n        return null;\n    }\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type, value) {\n        return new Typed(_gaurd, type, value);\n    }\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v) { return n(v, 8); }\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v) { return n(v, 16); }\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v) { return n(v, 24); }\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v) { return n(v, 32); }\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v) { return n(v, 40); }\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v) { return n(v, 48); }\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v) { return n(v, 56); }\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v) { return n(v, 64); }\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v) { return n(v, 72); }\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v) { return n(v, 80); }\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v) { return n(v, 88); }\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v) { return n(v, 96); }\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v) { return n(v, 104); }\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v) { return n(v, 112); }\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v) { return n(v, 120); }\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v) { return n(v, 128); }\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v) { return n(v, 136); }\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v) { return n(v, 144); }\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v) { return n(v, 152); }\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v) { return n(v, 160); }\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v) { return n(v, 168); }\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v) { return n(v, 176); }\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v) { return n(v, 184); }\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v) { return n(v, 192); }\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v) { return n(v, 200); }\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v) { return n(v, 208); }\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v) { return n(v, 216); }\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v) { return n(v, 224); }\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v) { return n(v, 232); }\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v) { return n(v, 240); }\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v) { return n(v, 248); }\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v) { return n(v, 256); }\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v) { return n(v, 256); }\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v) { return n(v, -8); }\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v) { return n(v, -16); }\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v) { return n(v, -24); }\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v) { return n(v, -32); }\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v) { return n(v, -40); }\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v) { return n(v, -48); }\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v) { return n(v, -56); }\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v) { return n(v, -64); }\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v) { return n(v, -72); }\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v) { return n(v, -80); }\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v) { return n(v, -88); }\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v) { return n(v, -96); }\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v) { return n(v, -104); }\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v) { return n(v, -112); }\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v) { return n(v, -120); }\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v) { return n(v, -128); }\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v) { return n(v, -136); }\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v) { return n(v, -144); }\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v) { return n(v, -152); }\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v) { return n(v, -160); }\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v) { return n(v, -168); }\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v) { return n(v, -176); }\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v) { return n(v, -184); }\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v) { return n(v, -192); }\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v) { return n(v, -200); }\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v) { return n(v, -208); }\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v) { return n(v, -216); }\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v) { return n(v, -224); }\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v) { return n(v, -232); }\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v) { return n(v, -240); }\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v) { return n(v, -248); }\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v) { return n(v, -256); }\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v) { return n(v, -256); }\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v) { return b(v, 1); }\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v) { return b(v, 2); }\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v) { return b(v, 3); }\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v) { return b(v, 4); }\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v) { return b(v, 5); }\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v) { return b(v, 6); }\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v) { return b(v, 7); }\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v) { return b(v, 8); }\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v) { return b(v, 9); }\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v) { return b(v, 10); }\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v) { return b(v, 11); }\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v) { return b(v, 12); }\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v) { return b(v, 13); }\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v) { return b(v, 14); }\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v) { return b(v, 15); }\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v) { return b(v, 16); }\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v) { return b(v, 17); }\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v) { return b(v, 18); }\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v) { return b(v, 19); }\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v) { return b(v, 20); }\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v) { return b(v, 21); }\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v) { return b(v, 22); }\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v) { return b(v, 23); }\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v) { return b(v, 24); }\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v) { return b(v, 25); }\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v) { return b(v, 26); }\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v) { return b(v, 27); }\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v) { return b(v, 28); }\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v) { return b(v, 29); }\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v) { return b(v, 30); }\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v) { return b(v, 31); }\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v) { return b(v, 32); }\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v) { return new Typed(_gaurd, \"address\", v); }\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v) { return new Typed(_gaurd, \"bool\", !!v); }\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v) { return new Typed(_gaurd, \"bytes\", v); }\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v) { return new Typed(_gaurd, \"string\", v); }\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v, dynamic) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v, name) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v) {\n        return new Typed(_gaurd, \"overrides\", Object.assign({}, v));\n    }\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value) {\n        return (value\n            && typeof (value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference(value, type) {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=typed.js.map","import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, _value) {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","import { Coder } from \"./abstract-coder.js\";\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    coder;\n    constructor(coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","import { defineProperties, isError, assert, assertArgument, assertArgumentCount } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n/**\n *  @_ignore\n */\nexport function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n/**\n *  @_ignore\n */\nexport function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n}\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    coder;\n    length;\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties(this, { coder, length });\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"array\");\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\", \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return unpack(reader, coders);\n    }\n}\n//# sourceMappingURL=array.js.map","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return !!reader.readValue();\n    }\n}\n//# sourceMappingURL=boolean.js.map","import { getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return hexlify(super.decode(reader));\n    }\n}\n//# sourceMappingURL=bytes.js.map","import { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    size;\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties(this, { size }, { size: \"number\" });\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, _value) {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","import { Coder } from \"./abstract-coder.js\";\nconst Empty = new Uint8Array([]);\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes(Empty);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return null;\n    }\n}\n//# sourceMappingURL=null.js.map","import { defineProperties, fromTwos, getBigInt, mask, toTwos } from \"../../utils/index.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    size;\n    signed;\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return value;\n    }\n}\n//# sourceMappingURL=number.js.map","import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, _value) {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","import { defineProperties } from \"../../utils/properties.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nimport { pack, unpack } from \"./array.js\";\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    coders;\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties(this, { coders: Object.freeze(coders.slice()) });\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return unpack(reader, this.coders);\n    }\n}\n//# sourceMappingURL=tuple.js.map","/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\nconst _kwVisibDeploy = \"external public payable override\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view override\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() { return this.#offset; }\n    get length() { return this.#tokens.length - this.#offset; }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    clone() { return new TokenString(this.#tokens); }\n    reset() { this.#offset = 0; }\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${type}; got ${top.type} ${JSON.stringify(top.text)}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens at offset ${tokens.offset}: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    name;\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    type;\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    baseType;\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    indexed;\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    components;\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayLength;\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayChildren;\n    /**\n     *  @private\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n                return JSON.stringify(result);\n            }\n            const result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== \"sighash\") {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof (value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error(\"cannot use object value with unnamed components\");\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () { setValue(await result); })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS names by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            }\n            catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) {\n                    throw new Error(\"\");\n                }\n                indexed = true;\n            }\n            const name = (obj.peekType(\"ID\") ? obj.pop().text : \"\");\n            if (obj.length) {\n                throw new Error(\"leftover tokens\");\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof (name) === \"string\" && name.match(regexId)), \"invalid name\", \"obj.name\", name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === \"tuple\" || type.startsWith(\"tuple(\" /* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    type;\n    /**\n     *  The inputs for the fragment.\n     */\n    inputs;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n        }\n        else if (typeof (obj) === \"object\") {\n            // JSON ABI\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    name;\n    /**\n     *  @private\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof (name) === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n}\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     *  The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    anonymous;\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format(\"sighash\"));\n    }\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    payable;\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format) {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        if (this.payable) {\n            result.push(\"payable\");\n        }\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, (obj.gas != null) ? obj.gas : null);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format) {\n        const type = ((this.inputs.length === 0) ? \"receive\" : \"fallback\");\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\" : \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? \" payable\" : \"\"}`;\n    }\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([\"payable\"]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            else {\n                inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    constant;\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    stateMutability;\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     *  The Function selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [], null);\n        return fragment.selector;\n    }\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        let stateMutability = obj.stateMutability;\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n            if (typeof (obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\";\n                    if (typeof (obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            }\n            else if (typeof (obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n        return new FunctionFragment(_guard, obj.name, stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], (obj.gas != null) ? obj.gas : null);\n    }\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            }\n            catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    // @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value) {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n//# sourceMappingURL=fragments.js.map","/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\nimport { Reader, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nlet defaultCoder = null;\nlet defaultMaxInflation = 1024;\nfunction getBuiltinCallException(action, tx, data, abiCoder) {\n    let message = \"missing revert data\";\n    let reason = null;\n    const invocation = null;\n    let revert = null;\n    if (data) {\n        message = \"execution reverted\";\n        const bytes = getBytes(data);\n        data = hexlify(data);\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n        }\n        else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [reason]\n                };\n                message += `: ${JSON.stringify(reason)}`;\n            }\n            catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n        }\n        else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([\"uint256\"], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [code]\n                };\n                reason = `Panic due to ${PanicReasons.get(code) || \"UNKNOWN\"}(${code})`;\n                message += `: ${reason}`;\n            }\n            catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        }\n        else {\n            message += \" (unknown custom error)\";\n        }\n    }\n    const transaction = {\n        to: (tx.to ? getAddress(tx.to) : null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) {\n        transaction.from = getAddress(tx.from);\n    }\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n    #getCoder(param) {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types, values) {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types, data, loose) {\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n    static _setDefaultMaxInflation(value) {\n        assertArgument(typeof (value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder() {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action, tx, data) {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n//# sourceMappingURL=abi-coder.js.map","import { assert, assertArgument } from \"../utils/index.js\";\nimport { getAddress } from \"./address.js\";\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value) {\n    return (value && typeof (value.getAddress) === \"function\");\n}\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value) {\n    try {\n        getAddress(value);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nasync function checkAddress(target, promise) {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof (target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target, resolver) {\n    if (typeof (target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return getAddress(target);\n        }\n        assert(resolver != null, \"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n        return checkAddress(target, resolver.resolveName(target));\n    }\n    else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n    }\n    else if (target && typeof (target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n//# sourceMappingURL=checks.js.map","//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue, assertArgument } from \"../utils/index.js\";\nimport { id } from \"./id.js\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n;\n;\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof (value) === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (_value) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) {\n            return Number(value);\n        }\n        return toQuantity(value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d+)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2]);\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, \"value\");\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n                return toBeHex(signed ? toTwos(value, 256) : value, 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\n// foo[][3] => { base: \"foo\", index: \"[][3]\", array: {\n//     base: \"foo\", prefix: \"foo[]\", count: 3 } }\nfunction splitArray(type) {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        return {\n            base: match[1],\n            index: (match[2] + match[4]),\n            array: {\n                base: match[1],\n                prefix: (match[1] + match[2]),\n                count: (match[5] ? parseInt(match[5]) : -1),\n            }\n        };\n    }\n    return { base: type };\n}\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    primaryType;\n    #types;\n    /**\n     *  The types.\n     */\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(_types) {\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        const types = {};\n        Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type }) => {\n                // Normalize the base type (unless name conflict)\n                let { base, index } = splitArray(type);\n                if (base === \"int\" && !_types[\"int\"]) {\n                    base = \"int256\";\n                }\n                if (base === \"uint\" && !_types[\"uint\"]) {\n                    base = \"uint256\";\n                }\n                return { name, type: (base + (index || \"\")) };\n            });\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        this.#types = JSON.stringify(types);\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", _types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = splitArray(field.type).base;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", _types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", _types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", _types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", _types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        return result;\n    }\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    /**\n     *  @_ignore:\n     */\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${array.count}`, \"value\", value);\n            return value.map((v) => this._visit(array.prefix, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            if (domain[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain, types, value, resolveName) {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({}, domain);\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if (domain[key] == null) {\n                delete domain[key];\n            }\n        }\n        // Look up all ENS names\n        const ensCache = {};\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n        // Get a list of all the addresses\n        encoder.visit(value, (type, value) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type, value) => {\n            if (type === \"address\" && ensCache[value]) {\n                return ensCache[value];\n            }\n            return value;\n        });\n        return { domain, value };\n    }\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        // Get the normalized types\n        types = encoder.types;\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof (value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=typed-data.js.map","/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\nfunction hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n    const checkOffset = (offset) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data) {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n//# sourceMappingURL=rlp-decode.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { getBytes } from \"./data.js\";\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    const data = Array.prototype.slice.call(getBytes(object, \"object\"));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nconst nibbles = \"0123456789abcdef\";\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object) {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n//# sourceMappingURL=rlp-encode.js.map","import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${index}]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${index}]`, set);\n                return accessSetify(set[0], set[1]);\n            }\n            assertArgument(set != null && typeof (set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    assertArgument(value != null && typeof (value) === \"object\", \"invalid access list\", \"value\", value);\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n//# sourceMappingURL=accesslist.js.map","import { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/addresses.js\";\nimport { keccak256, sha256, Signature, SigningKey } from \"../crypto/index.js\";\nimport { concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify, assert, assertArgument, isBytesLike, isHexString, toBeArray, zeroPadValue } from \"../utils/index.js\";\nimport { accessListify } from \"./accesslist.js\";\nimport { recoverAddress } from \"./address.js\";\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst BLOB_SIZE = 4096 * 32;\nfunction getVersionedHash(version, hash) {\n    let versioned = version.toString(16);\n    while (versioned.length < 2) {\n        versioned = \"0\" + versioned;\n    }\n    versioned += sha256(hash).substring(4);\n    return \"0x\" + versioned;\n}\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleAccessList(value, param) {\n    try {\n        return accessListify(value);\n    }\n    catch (error) {\n        assertArgument(false, error.message, param, value);\n    }\n}\nfunction handleNumber(_value, param) {\n    if (_value === \"0x\") {\n        return 0;\n    }\n    return getNumber(_value, param);\n}\nfunction handleUint(_value, param) {\n    if (_value === \"0x\") {\n        return BN_0;\n    }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\nfunction formatNumber(_value, name) {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${name}`, value);\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction formatHashes(value, param) {\n    assertArgument(Array.isArray(value), `invalid ${param}`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n        assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${i}]`, value[i]);\n    }\n    return value;\n}\nfunction _parseLegacy(data) {\n    const fields = decodeRlp(data);\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6), \"invalid field count for legacy transaction\", \"data\", data);\n    const tx = {\n        type: 0,\n        nonce: handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to: handleAddress(fields[3]),\n        value: handleUint(fields[4], \"value\"),\n        data: hexlify(fields[5]),\n        chainId: BN_0\n    };\n    // Legacy unsigned transaction\n    if (fields.length === 6) {\n        return tx;\n    }\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n    }\n    else {\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) {\n            chainId = BN_0;\n        }\n        tx.chainId = chainId;\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n        //tx.hash = keccak256(data);\n    }\n    return tx;\n}\nfunction _serializeLegacy(tx, sig) {\n    const fields = [\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n    ];\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) {\n            chainId = legacy;\n        }\n    }\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n        return encodeRlp(fields);\n    }\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    }\n    else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n    return encodeRlp(fields);\n}\nfunction _parseEipSignature(tx, fields) {\n    let yParity;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) {\n            throw new Error(\"bad yParity\");\n        }\n    }\n    catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\nfunction _parseEip1559(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12), \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n    const tx = {\n        type: 2,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice: null,\n        gasLimit: handleUint(fields[4], \"gasLimit\"),\n        to: handleAddress(fields[5]),\n        value: handleUint(fields[6], \"value\"),\n        data: hexlify(fields[7]),\n        accessList: handleAccessList(fields[8], \"accessList\"),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) {\n        return tx;\n    }\n    //tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(9));\n    return tx;\n}\nfunction _serializeEip1559(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x02\", encodeRlp(fields)]);\n}\nfunction _parseEip2930(data) {\n    const fields = decodeRlp(getBytes(data).slice(1));\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11), \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n    const tx = {\n        type: 1,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        gasPrice: handleUint(fields[2], \"gasPrice\"),\n        gasLimit: handleUint(fields[3], \"gasLimit\"),\n        to: handleAddress(fields[4]),\n        value: handleUint(fields[5], \"value\"),\n        data: hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) {\n        return tx;\n    }\n    //tx.hash = keccak256(data);\n    _parseEipSignature(tx, fields.slice(8));\n    return tx;\n}\nfunction _serializeEip2930(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [])\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n    return concat([\"0x01\", encodeRlp(fields)]);\n}\nfunction _parseEip4844(data) {\n    let fields = decodeRlp(getBytes(data).slice(1));\n    let typeName = \"3\";\n    let blobs = null;\n    // Parse the network format\n    if (fields.length === 4 && Array.isArray(fields[0])) {\n        typeName = \"3 (network format)\";\n        const fBlobs = fields[1], fCommits = fields[2], fProofs = fields[3];\n        assertArgument(Array.isArray(fBlobs), \"invalid network format: blobs not an array\", \"fields[1]\", fBlobs);\n        assertArgument(Array.isArray(fCommits), \"invalid network format: commitments not an array\", \"fields[2]\", fCommits);\n        assertArgument(Array.isArray(fProofs), \"invalid network format: proofs not an array\", \"fields[3]\", fProofs);\n        assertArgument(fBlobs.length === fCommits.length, \"invalid network format: blobs/commitments length mismatch\", \"fields\", fields);\n        assertArgument(fBlobs.length === fProofs.length, \"invalid network format: blobs/proofs length mismatch\", \"fields\", fields);\n        blobs = [];\n        for (let i = 0; i < fields[1].length; i++) {\n            blobs.push({\n                data: fBlobs[i],\n                commitment: fCommits[i],\n                proof: fProofs[i],\n            });\n        }\n        fields = fields[0];\n    }\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14), `invalid field count for transaction type: ${typeName}`, \"data\", hexlify(data));\n    const tx = {\n        type: 3,\n        chainId: handleUint(fields[0], \"chainId\"),\n        nonce: handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas: handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas: handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice: null,\n        gasLimit: handleUint(fields[4], \"gasLimit\"),\n        to: handleAddress(fields[5]),\n        value: handleUint(fields[6], \"value\"),\n        data: hexlify(fields[7]),\n        accessList: handleAccessList(fields[8], \"accessList\"),\n        maxFeePerBlobGas: handleUint(fields[9], \"maxFeePerBlobGas\"),\n        blobVersionedHashes: fields[10]\n    };\n    if (blobs) {\n        tx.blobs = blobs;\n    }\n    assertArgument(tx.to != null, `invalid address for transaction type: ${typeName}`, \"data\", data);\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n        assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${i}: must be length 32`, \"data\", data);\n    }\n    // Unsigned EIP-4844 Transaction\n    if (fields.length === 11) {\n        return tx;\n    }\n    // @TODO: Do we need to do this? This is only called internally\n    // and used to verify hashes; it might save time to not do this\n    //tx.hash = keccak256(concat([ \"0x03\", encodeRlp(fields) ]));\n    _parseEipSignature(tx, fields.slice(11));\n    return tx;\n}\nfunction _serializeEip4844(tx, sig, blobs) {\n    const fields = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || ZeroAddress),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || []),\n        formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n        formatHashes(tx.blobVersionedHashes || [], \"blobVersionedHashes\")\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n        // We have blobs; return the network wrapped format\n        if (blobs) {\n            return concat([\n                \"0x03\",\n                encodeRlp([\n                    fields,\n                    blobs.map((b) => b.data),\n                    blobs.map((b) => b.commitment),\n                    blobs.map((b) => b.proof),\n                ])\n            ]);\n        }\n    }\n    return concat([\"0x03\", encodeRlp(fields)]);\n}\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction {\n    #type;\n    #to;\n    #data;\n    #nonce;\n    #gasLimit;\n    #gasPrice;\n    #maxPriorityFeePerGas;\n    #maxFeePerGas;\n    #value;\n    #chainId;\n    #sig;\n    #accessList;\n    #maxFeePerBlobGas;\n    #blobVersionedHashes;\n    #kzg;\n    #blobs;\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type() { return this.#type; }\n    set type(value) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0:\n            case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1:\n            case \"berlin\":\n            case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2:\n            case \"london\":\n            case \"eip-1559\":\n                this.#type = 2;\n                break;\n            case 3:\n            case \"cancun\":\n            case \"eip-4844\":\n                this.#type = 3;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName() {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n            case 3: return \"eip-4844\";\n        }\n        return null;\n    }\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to() {\n        const value = this.#to;\n        if (value == null && this.type === 3) {\n            return ZeroAddress;\n        }\n        return value;\n    }\n    set to(value) {\n        this.#to = (value == null) ? null : getAddress(value);\n    }\n    /**\n     *  The transaction nonce.\n     */\n    get nonce() { return this.#nonce; }\n    set nonce(value) { this.#nonce = getNumber(value, \"value\"); }\n    /**\n     *  The gas limit.\n     */\n    get gasLimit() { return this.#gasLimit; }\n    set gasLimit(value) { this.#gasLimit = getBigInt(value); }\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice() {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) {\n            return BN_0;\n        }\n        return value;\n    }\n    set gasPrice(value) {\n        this.#gasPrice = (value == null) ? null : getBigInt(value, \"gasPrice\");\n    }\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas() {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value) {\n        this.#maxPriorityFeePerGas = (value == null) ? null : getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas() {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) {\n                return BN_0;\n            }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value) {\n        this.#maxFeePerGas = (value == null) ? null : getBigInt(value, \"maxFeePerGas\");\n    }\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data() { return this.#data; }\n    set data(value) { this.#data = hexlify(value); }\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value() { return this.#value; }\n    set value(value) {\n        this.#value = getBigInt(value, \"value\");\n    }\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId() { return this.#chainId; }\n    set chainId(value) { this.#chainId = getBigInt(value); }\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature() { return this.#sig || null; }\n    set signature(value) {\n        this.#sig = (value == null) ? null : Signature.from(value);\n    }\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList() {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n                // @TODO: in v7, this should assign the value or become\n                // a live object itself, otherwise mutation is inconsistent\n                return [];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value) {\n        this.#accessList = (value == null) ? null : accessListify(value);\n    }\n    /**\n     *  The max fee per blob gas for Cancun transactions.\n     */\n    get maxFeePerBlobGas() {\n        const value = this.#maxFeePerBlobGas;\n        if (value == null && this.type === 3) {\n            return BN_0;\n        }\n        return value;\n    }\n    set maxFeePerBlobGas(value) {\n        this.#maxFeePerBlobGas = (value == null) ? null : getBigInt(value, \"maxFeePerBlobGas\");\n    }\n    /**\n     *  The BLOb versioned hashes for Cancun transactions.\n     */\n    get blobVersionedHashes() {\n        // @TODO: Mutation is inconsistent; if unset, the returned value\n        // cannot mutate the object, if set it can\n        let value = this.#blobVersionedHashes;\n        if (value == null && this.type === 3) {\n            return [];\n        }\n        return value;\n    }\n    set blobVersionedHashes(value) {\n        if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n                assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${i}]`, value[i]);\n            }\n        }\n        this.#blobVersionedHashes = value;\n    }\n    /**\n     *  The BLObs for the Transaction, if any.\n     *\n     *  If ``blobs`` is non-``null``, then the [[seriailized]]\n     *  will return the network formatted sidecar, otherwise it\n     *  will return the standard [[link-eip-2718]] payload. The\n     *  [[unsignedSerialized]] is unaffected regardless.\n     *\n     *  When setting ``blobs``, either fully valid [[Blob]] objects\n     *  may be specified (i.e. correctly padded, with correct\n     *  committments and proofs) or a raw [[BytesLike]] may\n     *  be provided.\n     *\n     *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**\n     *  be already set. The blob will be correctly padded and the\n     *  [[KzgLibrary]] will be used to compute the committment and\n     *  proof for the blob.\n     *\n     *  A BLOb is a sequence of field elements, each of which must\n     *  be within the BLS field modulo, so some additional processing\n     *  may be required to encode arbitrary data to ensure each 32 byte\n     *  field is within the valid range.\n     *\n     *  Setting this automatically populates [[blobVersionedHashes]],\n     *  overwriting any existing values. Setting this to ``null``\n     *  does **not** remove the [[blobVersionedHashes]], leaving them\n     *  present.\n     */\n    get blobs() {\n        if (this.#blobs == null) {\n            return null;\n        }\n        return this.#blobs.map((b) => Object.assign({}, b));\n    }\n    set blobs(_blobs) {\n        if (_blobs == null) {\n            this.#blobs = null;\n            return;\n        }\n        const blobs = [];\n        const versionedHashes = [];\n        for (let i = 0; i < _blobs.length; i++) {\n            const blob = _blobs[i];\n            if (isBytesLike(blob)) {\n                assert(this.#kzg, \"adding a raw blob requires a KZG library\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"set blobs()\"\n                });\n                let data = getBytes(blob);\n                assertArgument(data.length <= BLOB_SIZE, \"blob is too large\", `blobs[${i}]`, blob);\n                // Pad blob if necessary\n                if (data.length !== BLOB_SIZE) {\n                    const padded = new Uint8Array(BLOB_SIZE);\n                    padded.set(data);\n                    data = padded;\n                }\n                const commit = this.#kzg.blobToKzgCommitment(data);\n                const proof = hexlify(this.#kzg.computeBlobKzgProof(data, commit));\n                blobs.push({\n                    data: hexlify(data),\n                    commitment: hexlify(commit),\n                    proof\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n            else {\n                const commit = hexlify(blob.commitment);\n                blobs.push({\n                    data: hexlify(blob.data),\n                    commitment: commit,\n                    proof: hexlify(blob.proof)\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n        }\n        this.#blobs = blobs;\n        this.#blobVersionedHashes = versionedHashes;\n    }\n    get kzg() { return this.#kzg; }\n    set kzg(kzg) {\n        this.#kzg = kzg;\n    }\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BN_0;\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BN_0;\n        this.#chainId = BN_0;\n        this.#sig = null;\n        this.#accessList = null;\n        this.#maxFeePerBlobGas = null;\n        this.#blobVersionedHashes = null;\n        this.#blobs = null;\n        this.#kzg = null;\n    }\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash() {\n        if (this.signature == null) {\n            return null;\n        }\n        return keccak256(this.#getSerialized(true, false));\n    }\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash() {\n        return keccak256(this.unsignedSerialized);\n    }\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from() {\n        if (this.signature == null) {\n            return null;\n        }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey() {\n        if (this.signature == null) {\n            return null;\n        }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned() {\n        return this.signature != null;\n    }\n    #getSerialized(signed, sidecar) {\n        assert(!signed || this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n        const sig = signed ? this.signature : null;\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, sig);\n            case 1:\n                return _serializeEip2930(this, sig);\n            case 2:\n                return _serializeEip1559(this, sig);\n            case 3:\n                return _serializeEip4844(this, sig, sidecar ? this.blobs : null);\n        }\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized() {\n        return this.#getSerialized(true, true);\n    }\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized() {\n        return this.#getSerialized(false, false);\n    }\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType() {\n        const types = this.inferTypes();\n        // Prefer London (EIP-1559) over Cancun (BLOb)\n        if (types.indexOf(2) >= 0) {\n            return 2;\n        }\n        // Return the highest inferred type\n        return (types.pop());\n    }\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes() {\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasBlob = (this.#maxFeePerBlobGas != null || this.#blobVersionedHashes);\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this });\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            if (hasFee) {\n                types.push(2);\n            }\n            else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) {\n                    types.push(0);\n                }\n            }\n            else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            }\n            else if (hasBlob && this.to) {\n                types.push(3);\n            }\n            else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n                types.push(3);\n            }\n        }\n        types.sort();\n        return types;\n    }\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy() {\n        return (this.type === 0);\n    }\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin() {\n        return (this.type === 1);\n    }\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon() {\n        return (this.type === 2);\n    }\n    /**\n     *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n     *  transaction.\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isCancun() {\n        return (this.type === 3);\n    }\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone() {\n        return Transaction.from(this);\n    }\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON() {\n        const s = (v) => {\n            if (v == null) {\n                return null;\n            }\n            return v.toString();\n        };\n        return {\n            type: this.type,\n            to: this.to,\n            //            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON() : null,\n            accessList: this.accessList\n        };\n    }\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx) {\n        if (tx == null) {\n            return new Transaction();\n        }\n        if (typeof (tx) === \"string\") {\n            const payload = getBytes(tx);\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n            switch (payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n                case 3: return Transaction.from(_parseEip4844(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n        const result = new Transaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.maxPriorityFeePerGas != null) {\n            result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n        }\n        if (tx.maxFeePerGas != null) {\n            result.maxFeePerGas = tx.maxFeePerGas;\n        }\n        if (tx.maxFeePerBlobGas != null) {\n            result.maxFeePerBlobGas = tx.maxFeePerBlobGas;\n        }\n        if (tx.data != null) {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n        // This will get overwritten by blobs, if present\n        if (tx.blobVersionedHashes != null) {\n            result.blobVersionedHashes = tx.blobVersionedHashes;\n        }\n        // Make sure we assign the kzg before assigning blobs, which\n        // require the library in the event raw blob data is provided.\n        if (tx.kzg != null) {\n            result.kzg = tx.kzg;\n        }\n        if (tx.blobs != null) {\n            result.blobs = tx.blobs;\n        }\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.hash'\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.from'\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=transaction.js.map","//import { resolveAddress } from \"@ethersproject/address\";\nimport { defineProperties, getBigInt, getNumber, hexlify, isBytesLike, resolveProperties, assert, assertArgument, isError, makeError } from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\nconst BN_0 = BigInt(0);\n// -----------------------\nfunction getValue(value) {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\nfunction toJson(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n// @TODO? <T extends FeeData = { }> implements Required<T>\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    gasPrice;\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxFeePerGas;\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    maxPriorityFeePerGas;\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice, maxFeePerGas, maxPriorityFeePerGas) {\n        defineProperties(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n;\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req) {\n    const result = {};\n    // These could be addresses, ENS names or Addressables\n    if (req.to) {\n        result.to = req.to;\n    }\n    if (req.from) {\n        result.from = req.from;\n    }\n    if (req.data) {\n        result.data = hexlify(req.data);\n    }\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = getNumber(req[key], `request.${key}`);\n    }\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n    if (\"blockTag\" in req) {\n        result.blockTag = req.blockTag;\n    }\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead;\n    }\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n    if (\"blobVersionedHashes\" in req && req.blobVersionedHashes) {\n        result.blobVersionedHashes = req.blobVersionedHashes.slice();\n    }\n    if (\"kzg\" in req) {\n        result.kzg = req.kzg;\n    }\n    if (\"blobs\" in req && req.blobs) {\n        result.blobs = req.blobs.map((b) => {\n            if (isBytesLike(b)) {\n                return hexlify(b);\n            }\n            return Object.assign({}, b);\n        });\n    }\n    return result;\n}\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block {\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    number;\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    hash;\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    timestamp;\n    /**\n     *  The block hash of the parent block.\n     */\n    parentHash;\n    /**\n     *  The hash tree root of the parent beacon block for the given\n     *  execution block. See [[link-eip-4788]].\n     */\n    parentBeaconBlockRoot;\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    nonce;\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    difficulty;\n    /**\n     *  The total gas limit for this block.\n     */\n    gasLimit;\n    /**\n     *  The total gas used in this block.\n     */\n    gasUsed;\n    /**\n     *  The root hash for the global state after applying changes\n     *  in this block.\n     */\n    stateRoot;\n    /**\n     *  The hash of the transaction receipts trie.\n     */\n    receiptsRoot;\n    /**\n     *  The total amount of blob gas consumed by the transactions\n     *  within the block. See [[link-eip-4844]].\n     */\n    blobGasUsed;\n    /**\n     *  The running total of blob gas consumed in excess of the\n     *  target, prior to the block. See [[link-eip-4844]].\n     */\n    excessBlobGas;\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    miner;\n    /**\n     *  The latest RANDAO mix of the post beacon state of\n     *  the previous block.\n     */\n    prevRandao;\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    extraData;\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    baseFeePerGas;\n    #transactions;\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block, provider) {\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof (tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n        defineProperties(this, {\n            provider,\n            hash: getValue(block.hash),\n            number: block.number,\n            timestamp: block.timestamp,\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            prevRandao: getValue(block.prevRandao),\n            extraData: block.extraData,\n            baseFeePerGas: getValue(block.baseFeePerGas),\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot,\n        });\n    }\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions() {\n        return this.#transactions.map((tx) => {\n            if (typeof (tx) === \"string\") {\n                return tx;\n            }\n            return tx.hash;\n        });\n    }\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions() {\n        const txs = this.#transactions.slice();\n        // Doesn't matter...\n        if (txs.length === 0) {\n            return [];\n        }\n        // Make sure we prefetched the transactions\n        assert(typeof (txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n        return txs;\n    }\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON() {\n        const { baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash, miner, prevRandao, nonce, number, parentHash, parentBeaconBlockRoot, stateRoot, receiptsRoot, timestamp, transactions } = this;\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash, miner, prevRandao, nonce, number, parentHash, timestamp,\n            parentBeaconBlockRoot, stateRoot, receiptsRoot,\n            transactions,\n        };\n    }\n    [Symbol.iterator]() {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The number of transactions in this block.\n     */\n    get length() { return this.#transactions.length; }\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date() {\n        if (this.timestamp == null) {\n            return null;\n        }\n        return new Date(this.timestamp * 1000);\n    }\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash) {\n        // Find the internal value by its index or hash\n        let tx = undefined;\n        if (typeof (indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n        }\n        else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof (v) === \"string\") {\n                    if (v !== hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n                else {\n                    if (v.hash === hash) {\n                        continue;\n                    }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) {\n            throw new Error(\"no such tx\");\n        }\n        if (typeof (tx) === \"string\") {\n            return (await this.provider.getTransaction(tx));\n        }\n        else {\n            return tx;\n        }\n    }\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash) {\n        const txs = this.prefetchedTransactions;\n        if (typeof (indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) {\n                return tx;\n            }\n        }\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined() { return !!this.hash; }\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon() {\n        return !!this.baseFeePerGas;\n    }\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent() {\n        if (!this.isMined()) {\n            throw new Error(\"\");\n        }\n        return createOrphanedBlockFilter(this);\n    }\n}\n//////////////////////\n// Log\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    transactionHash;\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    blockHash;\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    blockNumber;\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    removed;\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    address;\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    data;\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    topics;\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    index;\n    /**\n     *  The index within the transaction of this log.\n     */\n    transactionIndex;\n    /**\n     *  @_ignore:\n     */\n    constructor(log, provider) {\n        this.provider = provider;\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON() {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return block;\n    }\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", {});\n        return tx;\n    }\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt() {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", {});\n        return receipt;\n    }\n    /**\n     *  @_ignore:\n     */\n    removedEvent() {\n        return createRemovedLogFilter(this);\n    }\n}\n//////////////////////\n// Transaction Receipt\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    provider;\n    /**\n     *  The address the transaction was sent to.\n     */\n    to;\n    /**\n     *  The sender of the transaction.\n     */\n    from;\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    contractAddress;\n    /**\n     *  The transaction hash.\n     */\n    hash;\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    index;\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    blockHash;\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    blockNumber;\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    logsBloom;\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    gasUsed;\n    /**\n     *  The gas used for BLObs. See [[link-eip-4844]].\n     */\n    blobGasUsed;\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    cumulativeGasUsed;\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    gasPrice;\n    /**\n     *  The price paid per BLOB in gas. See [[link-eip-4844]].\n     */\n    blobGasPrice;\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    type;\n    //readonly byzantium!: boolean;\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    status;\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    root;\n    #logs;\n    /**\n     *  @_ignore:\n     */\n    constructor(tx, provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        }\n        else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n        defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n    /**\n     *  The logs for this transaction.\n     */\n    get logs() { return this.#logs; }\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON() {\n        const { to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom, logs, //byzantium, \n        status, root } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n    /**\n     *  @_ignore:\n     */\n    get length() { return this.logs.length; }\n    [Symbol.iterator]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee() {\n        return this.gasUsed * this.gasPrice;\n    }\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error(\"TODO\");\n        }\n        return tx;\n    }\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult() {\n        return (await this.provider.getTransactionResult(this.hash));\n    }\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations() {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n    /**\n     *  @_ignore:\n     */\n    removedEvent() {\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other) {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    provider;\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    blockNumber;\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    blockHash;\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    index;\n    /**\n     *  The transaction hash.\n     */\n    hash;\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    type;\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    to;\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    from;\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    nonce;\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    gasLimit;\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    gasPrice;\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    maxPriorityFeePerGas;\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    maxFeePerGas;\n    /**\n     *  The [[link-eip-4844]] max fee per BLOb gas.\n     */\n    maxFeePerBlobGas;\n    /**\n     *  The data.\n     */\n    data;\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    value;\n    /**\n     *  The chain ID.\n     */\n    chainId;\n    /**\n     *  The signature.\n     */\n    signature;\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    accessList;\n    /**\n     *  The [[link-eip-4844]] BLOb versioned hashes.\n     */\n    blobVersionedHashes;\n    #startBlock;\n    /**\n     *  @_ignore:\n     */\n    constructor(tx, provider) {\n        this.provider = provider;\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber : null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas : null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas : null;\n        this.maxFeePerBlobGas = (tx.maxFeePerBlobGas != null) ? tx.maxFeePerBlobGas : null;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = (tx.accessList != null) ? tx.accessList : null;\n        this.blobVersionedHashes = (tx.blobVersionedHashes != null) ? tx.blobVersionedHashes : null;\n        this.#startBlock = -1;\n    }\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList, blobVersionedHashes } = this;\n        return {\n            _type: \"TransactionResponse\",\n            accessList, blockNumber, blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock() {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction() {\n        return this.provider.getTransaction(this.hash);\n    }\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations() {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) {\n                return 0;\n            }\n            return blockNumber - tx.blockNumber + 1;\n        }\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms, _timeout) {\n        const confirms = (_confirms == null) ? 1 : _confirms;\n        const timeout = (_timeout == null) ? 0 : _timeout;\n        let startBlock = this.#startBlock;\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true : false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) {\n                return null;\n            }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n            // We were mined; no replacement\n            if (stopScanning) {\n                return null;\n            }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) {\n                return;\n            }\n            // We were replaced; start scanning for that transaction\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) {\n                    nextScan = this.#startBlock;\n                }\n            }\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) {\n                    return null;\n                }\n                const block = await this.provider.getBlock(nextScan, true);\n                // This should not happen; but we'll try again shortly\n                if (block == null) {\n                    return;\n                }\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) {\n                        return;\n                    }\n                }\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx = await block.getTransaction(i);\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) {\n                            return null;\n                        }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) {\n                            return;\n                        }\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) {\n                            return;\n                        }\n                        // The reason we were replaced\n                        let reason = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        }\n                        else if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\";\n                        }\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n                nextScan++;\n            }\n            return;\n        };\n        const checkReceipt = (receipt) => {\n            if (receipt == null || receipt.status !== 0) {\n                return receipt;\n            }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n        if (confirms === 0) {\n            return checkReceipt(receipt);\n        }\n        if (receipt) {\n            if ((await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n        }\n        else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n            // Allow null only when the confirms is 0\n            if (confirms === 0) {\n                return null;\n            }\n        }\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers = [];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n            const txListener = async (receipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n                    }\n                    catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n        return await waiter;\n    }\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined() {\n        return (this.blockHash != null);\n    }\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy() {\n        return (this.type === 0);\n    }\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin() {\n        return (this.type === 1);\n    }\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon() {\n        return (this.type === 2);\n    }\n    /**\n     *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n     *  transaction. See [[link-eip-4844]].\n     */\n    isCancun() {\n        return (this.type === 3);\n    }\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent() {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other) {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock) {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\nfunction createOrphanedBlockFilter(block) {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\nfunction createReorderedTransactionFilter(tx, other) {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\nfunction createRemovedTransactionFilter(tx) {\n    return { orphan: \"drop-transaction\", tx };\n}\nfunction createRemovedLogFilter(log) {\n    return { orphan: \"drop-log\", log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index\n        } };\n}\n//# sourceMappingURL=provider.js.map","/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport { defineProperties, getBigInt, resolveProperties, assert, assertArgument } from \"../utils/index.js\";\nimport { copyRequest } from \"./provider.js\";\nfunction checkProvider(signer, operation) {\n    if (signer.provider) {\n        return signer.provider;\n    }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\nasync function populate(signer, tx) {\n    let pop = copyRequest(tx);\n    if (pop.to != null) {\n        pop.to = resolveAddress(pop.to, signer);\n    }\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([address, from]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(), \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    }\n    else {\n        pop.from = signer.getAddress();\n    }\n    return await resolveProperties(pop);\n}\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport class AbstractSigner {\n    /**\n     *  The provider this signer is connected to.\n     */\n    provider;\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider) {\n        defineProperties(this, { provider: (provider || null) });\n    }\n    async getNonce(blockTag) {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n    async populateCall(tx) {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n    async populateTransaction(tx) {\n        const provider = checkProvider(this, \"populateTransaction\");\n        const pop = await populate(this, tx);\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n        // Populate the chain ID\n        const network = await (this.provider).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        }\n        else {\n            pop.chainId = network.chainId;\n        }\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        }\n        else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n        }\n        else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\"\n            });\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) {\n                pop.gasPrice = feeData.gasPrice;\n            }\n        }\n        else {\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n                    // Upgrade transaction from null to eip-1559\n                    pop.type = 2;\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n                    }\n                    else {\n                        // Populate missing fee data\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n                }\n                else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"populateTransaction\"\n                    });\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n                }\n                else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n            }\n            else if (pop.type === 2 || pop.type === 3) {\n                // Explicitly using EIP-1559 or EIP-4844\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n        //@TOOD: Don't await all over the place; save them up for\n        // the end for better batching\n        return await resolveProperties(pop);\n    }\n    async estimateGas(tx) {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n    async call(tx) {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n    async resolveName(name) {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n    async sendTransaction(tx) {\n        const provider = checkProvider(this, \"sendTransaction\");\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n}\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    address;\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address, provider) {\n        super(provider);\n        defineProperties(this, { address });\n    }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n    #throwUnsupported(suffix, operation) {\n        assert(false, `VoidSigner cannot sign ${suffix}`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n    async signTransaction(tx) {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n    async signMessage(message) {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n    async signTypedData(domain, types, value) {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n//# sourceMappingURL=abstract-signer.js.map","import { getAddress, resolveAddress } from \"../address/index.js\";\nimport { hashMessage, TypedDataEncoder } from \"../hash/index.js\";\nimport { AbstractSigner, copyRequest } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport { defineProperties, resolveProperties, assert, assertArgument } from \"../utils/index.js\";\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    address;\n    #signingKey;\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey, provider) {\n        super(provider);\n        assertArgument(privateKey && typeof (privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n        this.#signingKey = privateKey;\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties(this, { address });\n    }\n    // Store private values behind getters to reduce visibility\n    // in console.log\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey() { return this.#signingKey; }\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey() { return this.signingKey.privateKey; }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n    async signTransaction(tx) {\n        tx = copyRequest(tx);\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this.provider) : undefined),\n            from: (tx.from ? resolveAddress(tx.from, this.provider) : undefined)\n        });\n        if (to != null) {\n            tx.to = to;\n        }\n        if (from != null) {\n            tx.from = from;\n        }\n        if (tx.from != null) {\n            assertArgument(getAddress((tx.from)) === this.address, \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n        // Build the transaction\n        const btx = Transaction.from(tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n        return btx.serialized;\n    }\n    async signMessage(message) {\n        return this.signMessageSync(message);\n    }\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message) {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n    async signTypedData(domain, types, value) {\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n            return address;\n        });\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n//# sourceMappingURL=base-wallet.js.map","import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message, sig) {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n//# sourceMappingURL=message.js.map","// NFKC (composed)             // (decomposed)\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n//# sourceMappingURL=strings.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\nlet locked = false;\nconst _ripemd160 = function (data) {\n    return noble_ripemd160(data);\n};\nlet __ripemd160 = _ripemd160;\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data) {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function () { locked = true; };\nripemd160.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"ripemd160 is locked\");\n    }\n    __ripemd160 = func;\n};\nObject.freeze(ripemd160);\n//# sourceMappingURL=ripemd160.js.map","/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length) {\n    return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () { locked = true; };\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error(\"randomBytes is locked\");\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map","/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value) {\n    const bytes = getBytes(_value);\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) {\n            break;\n        }\n        result = Alphabet[0] + result;\n    }\n    return result;\n}\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n//# sourceMappingURL=base58.js.map","/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AES_key, _AES_Kd, _AES_Ke;\n// Number of rounds by keysize\nconst numberOfRounds = { 16: 10, 24: 12, 32: 14 };\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\nfunction convertToInt32(bytes) {\n    const result = [];\n    for (let i = 0; i < bytes.length; i += 4) {\n        result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | bytes[i + 3]);\n    }\n    return result;\n}\nexport class AES {\n    get key() { return __classPrivateFieldGet(this, _AES_key, \"f\").slice(); }\n    constructor(key) {\n        _AES_key.set(this, void 0);\n        _AES_Kd.set(this, void 0);\n        _AES_Ke.set(this, void 0);\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n        __classPrivateFieldSet(this, _AES_key, new Uint8Array(key), \"f\");\n        const rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n        // encryption round keys\n        __classPrivateFieldSet(this, _AES_Ke, [], \"f\");\n        // decryption round keys\n        __classPrivateFieldSet(this, _AES_Kd, [], \"f\");\n        for (let i = 0; i <= rounds; i++) {\n            __classPrivateFieldGet(this, _AES_Ke, \"f\").push([0, 0, 0, 0]);\n            __classPrivateFieldGet(this, _AES_Kd, \"f\").push([0, 0, 0, 0]);\n        }\n        const roundKeyCount = (rounds + 1) * 4;\n        const KC = this.key.length / 4;\n        // convert the key into ints\n        const tk = convertToInt32(this.key);\n        // copy values into round key arrays\n        let index;\n        for (let i = 0; i < KC; i++) {\n            index = i >> 2;\n            __classPrivateFieldGet(this, _AES_Ke, \"f\")[index][i % 4] = tk[i];\n            __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - index][i % 4] = tk[i];\n        }\n        // key expansion (fips-197 section 5.2)\n        let rconpointer = 0;\n        let t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >> 8) & 0xFF] << 16) ^\n                (S[tt & 0xFF] << 8) ^\n                S[(tt >> 24) & 0xFF] ^\n                (rcon[rconpointer] << 24));\n            rconpointer += 1;\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (let i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            }\n            else {\n                for (let i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n                tk[KC / 2] ^= (S[tt & 0xFF] ^\n                    (S[(tt >> 8) & 0xFF] << 8) ^\n                    (S[(tt >> 16) & 0xFF] << 16) ^\n                    (S[(tt >> 24) & 0xFF] << 24));\n                for (let i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n            // copy values into round key arrays\n            let i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][c] = tk[i];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (let r = 1; r < rounds; r++) {\n            for (let c = 0; c < 4; c++) {\n                tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                    U2[(tt >> 16) & 0xFF] ^\n                    U3[(tt >> 8) & 0xFF] ^\n                    U4[tt & 0xFF]);\n            }\n        }\n    }\n    encrypt(plaintext) {\n        if (plaintext.length != 16) {\n            throw new TypeError('invalid plaintext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Ke, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(plaintext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Ke, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T1[(t[i] >> 24) & 0xff] ^\n                    T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                    T3[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T4[t[(i + 3) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Ke, \"f\")[rounds][i];\n            result[4 * i] = (S[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Kd, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(ciphertext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Kd, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T5[(t[i] >> 24) & 0xff] ^\n                    T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                    T7[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T8[t[(i + 1) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds][i];\n            result[4 * i] = (Si[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n}\n_AES_key = new WeakMap(), _AES_Kd = new WeakMap(), _AES_Ke = new WeakMap();\n//# sourceMappingURL=aes.js.map","import { AES } from \"./aes.js\";\nexport class ModeOfOperation {\n    constructor(name, key, cls) {\n        if (cls && !(this instanceof cls)) {\n            throw new Error(`${name} must be instantiated with \"new\"`);\n        }\n        Object.defineProperties(this, {\n            aes: { enumerable: true, value: new AES(key) },\n            name: { enumerable: true, value: name }\n        });\n    }\n}\n//# sourceMappingURL=mode.js.map","// Cipher Block Chaining\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CBC_iv, _CBC_lastBlock;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CBC extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"ECC\", key, CBC);\n        _CBC_iv.set(this, void 0);\n        _CBC_lastBlock.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CBC_lastBlock, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CBC_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext.length);\n        for (let i = 0; i < plaintext.length; i += 16) {\n            for (let j = 0; j < 16; j++) {\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] ^= plaintext[i + j];\n            }\n            __classPrivateFieldSet(this, _CBC_lastBlock, this.aes.encrypt(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\")), \"f\");\n            ciphertext.set(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\"), i);\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        const plaintext = new Uint8Array(ciphertext.length);\n        for (let i = 0; i < ciphertext.length; i += 16) {\n            const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n            for (let j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j];\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] = ciphertext[i + j];\n            }\n        }\n        return plaintext;\n    }\n}\n_CBC_iv = new WeakMap(), _CBC_lastBlock = new WeakMap();\n//# sourceMappingURL=mode-cbc.js.map","// Cipher Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CFB_instances, _CFB_iv, _CFB_shiftRegister, _CFB_shift;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CFB extends ModeOfOperation {\n    constructor(key, iv, segmentSize = 8) {\n        super(\"CFB\", key, CFB);\n        _CFB_instances.add(this);\n        _CFB_iv.set(this, void 0);\n        _CFB_shiftRegister.set(this, void 0);\n        // This library currently only handles byte-aligned segmentSize\n        if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n            throw new TypeError(\"invalid segmentSize\");\n        }\n        Object.defineProperties(this, {\n            segmentSize: { enumerable: true, value: segmentSize }\n        });\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CFB_shiftRegister, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (8 * plaintext.length % this.segmentSize) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                ciphertext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (8 * ciphertext.length % this.segmentSize) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const plaintext = new Uint8Array(ciphertext);\n        for (let i = 0; i < plaintext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return plaintext;\n    }\n}\n_CFB_iv = new WeakMap(), _CFB_shiftRegister = new WeakMap(), _CFB_instances = new WeakSet(), _CFB_shift = function _CFB_shift(data) {\n    const segmentSize = this.segmentSize / 8;\n    // Shift the register\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").subarray(segmentSize));\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(data.subarray(0, segmentSize), 16 - segmentSize);\n};\n//# sourceMappingURL=mode-cfb.js.map","// Counter Mode\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CTR_remaining, _CTR_remainingIndex, _CTR_counter;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CTR extends ModeOfOperation {\n    constructor(key, initialValue) {\n        super(\"CTR\", key, CTR);\n        // Remaining bytes for the one-time pad\n        _CTR_remaining.set(this, void 0);\n        _CTR_remainingIndex.set(this, void 0);\n        // The current counter\n        _CTR_counter.set(this, void 0);\n        __classPrivateFieldSet(this, _CTR_counter, new Uint8Array(16), \"f\");\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").fill(0);\n        __classPrivateFieldSet(this, _CTR_remaining, __classPrivateFieldGet(this, _CTR_counter, \"f\"), \"f\"); // This will be discarded immediately\n        __classPrivateFieldSet(this, _CTR_remainingIndex, 16, \"f\");\n        if (initialValue == null) {\n            initialValue = 1;\n        }\n        if (typeof (initialValue) === \"number\") {\n            this.setCounterValue(initialValue);\n        }\n        else {\n            this.setCounterBytes(initialValue);\n        }\n    }\n    get counter() { return new Uint8Array(__classPrivateFieldGet(this, _CTR_counter, \"f\")); }\n    setCounterValue(value) {\n        if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n            throw new TypeError(\"invalid counter initial integer value\");\n        }\n        for (let index = 15; index >= 0; --index) {\n            __classPrivateFieldGet(this, _CTR_counter, \"f\")[index] = value % 256;\n            value = Math.floor(value / 256);\n        }\n    }\n    setCounterBytes(value) {\n        if (value.length !== 16) {\n            throw new TypeError(\"invalid counter initial Uint8Array value length\");\n        }\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").set(value);\n    }\n    increment() {\n        for (let i = 15; i >= 0; i--) {\n            if (__classPrivateFieldGet(this, _CTR_counter, \"f\")[i] === 255) {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i] = 0;\n            }\n            else {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i]++;\n                break;\n            }\n        }\n    }\n    encrypt(plaintext) {\n        var _a, _b;\n        const crypttext = new Uint8Array(plaintext);\n        for (let i = 0; i < crypttext.length; i++) {\n            if (__classPrivateFieldGet(this, _CTR_remainingIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _CTR_remaining, this.aes.encrypt(__classPrivateFieldGet(this, _CTR_counter, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _CTR_remainingIndex, 0, \"f\");\n                this.increment();\n            }\n            crypttext[i] ^= __classPrivateFieldGet(this, _CTR_remaining, \"f\")[__classPrivateFieldSet(this, _CTR_remainingIndex, (_b = __classPrivateFieldGet(this, _CTR_remainingIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return crypttext;\n    }\n    decrypt(ciphertext) {\n        return this.encrypt(ciphertext);\n    }\n}\n_CTR_remaining = new WeakMap(), _CTR_remainingIndex = new WeakMap(), _CTR_counter = new WeakMap();\n//# sourceMappingURL=mode-ctr.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","// Output Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OFB_iv, _OFB_lastPrecipher, _OFB_lastPrecipherIndex;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class OFB extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"OFB\", key, OFB);\n        _OFB_iv.set(this, void 0);\n        _OFB_lastPrecipher.set(this, void 0);\n        _OFB_lastPrecipherIndex.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _OFB_lastPrecipher, this.iv, \"f\");\n        __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 16, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _OFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        var _a, _b;\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i++) {\n            if (__classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _OFB_lastPrecipher, this.aes.encrypt(__classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 0, \"f\");\n            }\n            ciphertext[i] ^= __classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")[__classPrivateFieldSet(this, _OFB_lastPrecipherIndex, (_b = __classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        return this.encrypt(ciphertext);\n    }\n}\n_OFB_iv = new WeakMap(), _OFB_lastPrecipher = new WeakMap(), _OFB_lastPrecipherIndex = new WeakMap();\n//# sourceMappingURL=mode-ofb.js.map","import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, () => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, () => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n//# sourceMappingURL=scrypt.js.map","import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\nlet lockedSync = false, lockedAsync = false;\nconst _scryptAsync = async function (passwd, salt, N, r, p, dkLen, onProgress) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n};\nconst _scryptSync = function (passwd, salt, N, r, p, dkLen) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n};\nlet __scryptAsync = _scryptAsync;\nlet __scryptSync = _scryptSync;\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd, _salt, N, r, p, dkLen, progress) {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function () { lockedAsync = true; };\nscrypt.register = function (func) {\n    if (lockedAsync) {\n        throw new Error(\"scrypt is locked\");\n    }\n    __scryptAsync = func;\n};\nObject.freeze(scrypt);\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd, _salt, N, r, p, dkLen) {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function () { lockedSync = true; };\nscryptSync.register = function (func) {\n    if (lockedSync) {\n        throw new Error(\"scryptSync is locked\");\n    }\n    __scryptSync = func;\n};\nObject.freeze(scryptSync);\n//# sourceMappingURL=scrypt.js.map","/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes) {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=uuid.js.map","/**\n *  @_ignore\n */\nimport { getBytesCopy, assertArgument, toUtf8Bytes } from \"../utils/index.js\";\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\nexport function spelunk(object, _path) {\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) {\n                break;\n            }\n            cur = cur[parseInt(comp)];\n        }\n        else if (typeof (cur) === \"object\") {\n            let found = null;\n            for (const key in cur) {\n                if (key.toLowerCase() === comp) {\n                    found = cur[key];\n                    break;\n                }\n            }\n            cur = found;\n        }\n        else {\n            cur = null;\n        }\n        if (cur == null) {\n            break;\n        }\n    }\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return parseInt(cur);\n            }\n            else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n        if (type === \"number\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return parseFloat(cur);\n            }\n        }\n        if (type === \"data\") {\n            if (typeof (cur) === \"string\") {\n                return looseArrayify(cur);\n            }\n        }\n        if (type === \"array\" && Array.isArray(cur)) {\n            return cur;\n        }\n        if (type === typeof (cur)) {\n            return cur;\n        }\n        assertArgument(false, `wrong type found for ${type} `, \"path\", path);\n    }\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n//# sourceMappingURL=utils.js.map","/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nimport { CTR } from \"aes-js\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport { concat, getBytes, hexlify, uuidV4, assert, assertArgument } from \"../utils/index.js\";\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\nimport { version } from \"../_version.js\";\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json) {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version) : 0);\n        if (version === 3) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction decrypt(data, key, ciphertext) {\n    const cipher = spelunk(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk(data, \"crypto.cipherparams.iv:data!\");\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\nfunction getAccount(data, _key) {\n    const key = getBytes(_key);\n    const ciphertext = spelunk(data, \"crypto.ciphertext:data!\");\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    assertArgument(computedMAC === spelunk(data, \"crypto.mac:string!\").toLowerCase(), \"incorrect password\", \"password\", \"[ REDACTED ]\");\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) {\n            check = \"0x\" + check;\n        }\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n    const account = { address, privateKey };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n        const mnemonicCiphertext = spelunk(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk(data, \"x-ethers.mnemonicCounter:data!\");\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        account.mnemonic = {\n            path: (spelunk(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n    return account;\n}\nfunction getDecryptKdfParams(data) {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof (kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk(data, \"crypto.kdfparams.p:int!\");\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const prf = spelunk(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n            const count = spelunk(data, \"crypto.kdfparams.c:int!\");\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json, _password, progress) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params });\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\nfunction getEncryptKdfParams(options) {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\") : randomBytes(32);\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    assertArgument(typeof (N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof (r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof (p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\nfunction _encryptKeystore(key, kdf, account, options) {\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\") : randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\") : randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([macPrefix, ciphertext]));\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client : `ethers/${version}`;\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n        const mnemonicKey = key.slice(32, 64);\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n            zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n            zpad(now.getUTCDate(), 2) + \"T\" +\n            zpad(now.getUTCHours(), 2) + \"-\" +\n            zpad(now.getUTCMinutes(), 2) + \"-\" +\n            zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n    return JSON.stringify(data);\n}\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account, password, options) {\n    if (options == null) {\n        options = {};\n    }\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n//# sourceMappingURL=json-keystore.js.map","/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport { concat, dataSlice, decodeBase58, defineProperties, encodeBase58, getBytes, hexlify, isBytesLike, getNumber, toBeArray, toBigInt, toBeHex, assertPrivate, assert, assertArgument } from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport { encryptKeystoreJson, encryptKeystoreJsonSync, } from \"./json-keystore.js\";\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);\nconst HardenedBit = 0x80000000;\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value, length) {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction encodeBase58Check(_value) {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([value, check]);\n    return encodeBase58(bytes);\n}\nconst _guard = {};\nfunction ser_I(index, chainCode, publicKey, privateKey) {\n    const data = new Uint8Array(37);\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n    }\n    else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) {\n        data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n    }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\nfunction derivePath(node, path) {\n    const components = path.split(\"/\");\n    assertArgument(components.length > 0, \"invalid path\", \"path\", path);\n    if (components[0] === \"m\") {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${node.depth}`, \"path\", path);\n        components.shift();\n    }\n    let result = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${i}]`, component);\n            result = result.deriveChild(HardenedBit + index);\n        }\n        else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${i}]`, component);\n            result = result.deriveChild(index);\n        }\n        else {\n            assertArgument(false, \"invalid path component\", `path[${i}]`, component);\n        }\n    }\n    return result;\n}\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    publicKey;\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    fingerprint;\n    /**\n     *  The parent fingerprint.\n     */\n    parentFingerprint;\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    mnemonic;\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    chainCode;\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provide full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  encode it.\n     */\n    path;\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    index;\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    depth;\n    /**\n     *  @private\n     */\n    constructor(guard, signingKey, parentFingerprint, chainCode, path, index, depth, mnemonic, provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n        defineProperties(this, { publicKey: signingKey.compressedPublicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n        defineProperties(this, { mnemonic });\n    }\n    connect(provider) {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n    #account() {\n        const account = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n        return account;\n    }\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password, progressCallback) {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password) {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([\"0x00\", this.privateKey])\n        ]));\n    }\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath() { return (this.path != null); }\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter() {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider);\n    }\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.mnemonic, this.provider);\n    }\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n    static #fromSeed(_seed, mnemonic) {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64, \"invalid seed\", \"seed\", \"[REDACTED]\");\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)), \"m\", 0, 0, mnemonic, null);\n    }\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey) {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey, \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey, parentFingerprint, chainCode, null, index, depth, null);\n            }\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)), parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password, path, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (path == null) {\n            path = defaultPath;\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic, path) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase, password, path, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (path == null) {\n            path = defaultPath;\n        }\n        if (wordlist == null) {\n            wordlist = LangEn.wordlist();\n        }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist);\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed) {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by\n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    publicKey;\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    fingerprint;\n    /**\n     *  The parent node fingerprint.\n     */\n    parentFingerprint;\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    chainCode;\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    path;\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    index;\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    depth;\n    /**\n     *  @private\n     */\n    constructor(guard, address, publicKey, parentFingerprint, chainCode, path, index, depth, provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n        defineProperties(this, { publicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n    connect(provider) {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath() { return (this.path != null); }\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index) {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n        const address = computeAddress(Ki);\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.provider);\n    }\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n}\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index) {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${index}'/0/0`;\n}\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index) {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${index}`;\n}\n//# sourceMappingURL=hdwallet.js.map","/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\nimport { CBC, pkcs7Strip } from \"aes-js\";\nimport { getAddress } from \"../address/index.js\";\nimport { pbkdf2 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nexport function isCrowdsaleJson(json) {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\n// See: https://github.com/ethereum/pyethsaletool\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nexport function decryptCrowdsaleJson(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    assertArgument(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n    const key = getBytes(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    return { address, privateKey: id(seedHex) };\n}\n//# sourceMappingURL=json-crowdsale.js.map","export function pkcs7Pad(data) {\n    const padder = 16 - (data.length % 16);\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n    return result;\n}\nexport function pkcs7Strip(data) {\n    if (data.length < 16) {\n        throw new TypeError('PKCS#7 invalid length');\n    }\n    const padder = data[data.length - 1];\n    if (padder > 16) {\n        throw new TypeError('PKCS#7 padding byte out of range');\n    }\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n    return new Uint8Array(data.subarray(0, length));\n}\n//# sourceMappingURL=padding.js.map","import { SigningKey } from \"../crypto/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson } from \"./json-crowdsale.js\";\nimport { decryptKeystoreJson, decryptKeystoreJsonSync, encryptKeystoreJson, encryptKeystoreJsonSync, isKeystoreJson } from \"./json-keystore.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n/**\n *  A **Wallet** manages a single private key which is used to sign\n *  transactions, messages and other common payloads.\n *\n *  This class is generally the main entry point for developers\n *  that wish to use a private key directly, as it can create\n *  instances from a large variety of common sources, including\n *  raw private key, [[link-bip-39]] mnemonics and encrypte JSON\n *  wallets.\n */\nexport class Wallet extends BaseWallet {\n    /**\n     *  Create a new wallet for the private %%key%%, optionally connected\n     *  to %%provider%%.\n     */\n    constructor(key, provider) {\n        if (typeof (key) === \"string\" && !key.startsWith(\"0x\")) {\n            key = \"0x\" + key;\n        }\n        let signingKey = (typeof (key) === \"string\") ? new SigningKey(key) : key;\n        super(signingKey, provider);\n    }\n    connect(provider) {\n        return new Wallet(this.signingKey, provider);\n    }\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password, progressCallback) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password) {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n    static #fromAccount(account) {\n        assertArgument(account, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        if (\"mnemonic\" in account && account.mnemonic && account.mnemonic.locale === \"en\") {\n            const mnemonic = Mnemonic.fromEntropy(account.mnemonic.entropy);\n            const wallet = HDNodeWallet.fromMnemonic(mnemonic, account.mnemonic.path);\n            if (wallet.address === account.address && wallet.privateKey === account.privateKey) {\n                return wallet;\n            }\n            console.log(\"WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key\");\n        }\n        const wallet = new Wallet(account.privateKey);\n        assertArgument(wallet.address === account.address, \"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n        return wallet;\n    }\n    /**\n     *  Creates (asynchronously) a **Wallet** by decrypting the %%json%%\n     *  with %%password%%.\n     *\n     *  If %%progress%% is provided, it is called periodically during\n     *  decryption so that any UI can be updated.\n     */\n    static async fromEncryptedJson(json, password, progress) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n        }\n        else if (isCrowdsaleJson(json)) {\n            if (progress) {\n                progress(0);\n                await stall(0);\n            }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) {\n                progress(1);\n                await stall(0);\n            }\n        }\n        return Wallet.#fromAccount(account);\n    }\n    /**\n     *  Creates a **Wallet** by decrypting the %%json%% with %%password%%.\n     *\n     *  The [[fromEncryptedJson]] method is preferred, as this method\n     *  will lock up and freeze the UI during decryption, which may take\n     *  some time.\n     */\n    static fromEncryptedJsonSync(json, password) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        }\n        else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        }\n        else {\n            assertArgument(false, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n        return Wallet.#fromAccount(account);\n    }\n    /**\n     *  Creates a new random [[HDNodeWallet]] using the available\n     *  [cryptographic random source](randomBytes).\n     *\n     *  If there is no crytographic random source, this will throw.\n     */\n    static createRandom(provider) {\n        const wallet = HDNodeWallet.createRandom();\n        if (provider) {\n            return wallet.connect(provider);\n        }\n        return wallet;\n    }\n    /**\n     *  Creates a [[HDNodeWallet]] for %%phrase%%.\n     */\n    static fromPhrase(phrase, provider) {\n        const wallet = HDNodeWallet.fromPhrase(phrase);\n        if (provider) {\n            return wallet.connect(provider);\n        }\n        return wallet;\n    }\n}\n//# sourceMappingURL=wallet.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0itatkastcenaovo$taouleraeki&chor*teci%enbalodaeladet'!Chn=0Di#%E%^1Resa2Rese3CeT'#0EjKohol0Pu)%0A&sDul#Ekdo)Ke)Ti#Ul|3}aOgan%0FaltI$@tPi,%TmaTronom0LasL{i#Ol0Tobus4Yl:B#}<CilCul#D!_Ge)GrHnoKterieLa^L{#LkonLon-LvanLzaMbusNkom!R[rR{RmanRokoRvaTer#TohVl&Zal#Zili#Zu#3D&RanSe^StieTonZin#ZmocZ)k3CyklD]Ft-KinyLan%Og,fO]gTvaZon2AhobytAt*/E/aEdu+EskIk!Iz&Ok|Oud Ud2B-BrDl.D~H!(JkotJ|K<ysLe$R>R'?TaUb_U/!U^U+Ur!Xer2A^v#Ambo,An#AtrEp)Ike)KoLohOnzOskevUn{#Usin#Z^Zy2Bl.Bn|})D _D#D'aF{Jar(Kv?LdokLvaN^NkrRzaTikVolZola3D+tL.T'#0Ukot:PartRev&3DrDu+J/JnLaLerLkemLn?N.Nn(N'#NtrumNz<StopisT#2AlupaAp`]Ar aA)E/t!EmieI/otIrurgL`Le[Lub M_Mu,ObotO/olOd[O+,Om=Op Oro[OvRapotRl RtRupTiv(Ud.Utn!V!Vil#V(Y[Y$!Yt 0Bu+Gare)H_&HlaNkotRkusSter&Ta%TrusZin>Z(2O&2KolivUv!4It_N(0Dn(Ke)KrPot0Ak~AlIkRkot2Kli$a:L-oRe[T_Tum1E,1B!a}'#Cib_Fic Fla%KlKr{Mokr!PreseRbyS#T-tiv3Kob,zKt|O^P]mSkSp+jV`]Vo/2AhaOuhoUhopis1Es0BroByt-C@t}ut DnesH+dHo^H,JemJn?Kl`KolaKt<Kum@tLarLevaL.MaM.ntMluv M'Nut P`PisPln PosudPr'odPu$ Raz R(RtSahSl'St!-SudSy)TazT-Tk~Uf!Utn!Voz%Z`uZn!Z<%2Aho)AkAm!ikAv>AzeDolObn(OgerieOzdSn(T Z(2B@}'noD-HaH'#S SnoT(0Oj?Or>2Nam :9O]gOnomie0EktronIpsa0AilIseO%P!ie2Izo^O/aOpejOs2EjEn%K<)Kymo0Ike)0F<ie0Olu%1Eku%KurzePed?P]zeP<tT,kt:C#Jf#Kul)N!ikN)zieRmacieV< Zo+3De,%J{onN#3Al#Gu,ntLozofLtrNan%N)Xa%0Ord1An_IrtOtila2NdSf<T[lT#Ton2Ak%Es#On)2KarNk%3Zi#:LejeRant3N{i#O]g3Lot.2Azu,Ejt2LemLfi$aTi#2AfAmofonAnu+EpIlOgOtes#2Ma:D?DrLaL@#N[NopisRfaRpu&V,n3Bk(J#lJnoJtmanK)rLmaM!omR>R&S]Zky3St<ik2Ad'#AsivkyAvaEd!EnO^v>OhOup(T!Ub.U/o)0AtO)Yz0IsOjivoOut0Bl.Boj}DinyDl!Dno)D|Jn(KejLin#L#LubMo+N [No,%RalR^RizontRkoRliv>RmonRn.RoskopR$voSpo^St.T'(U[UfUp!Us#V<2Ad[An?Av(Az^Bo+kD.D]D(N-Ob#Oma^OtOu^Oz@St#Ub(Yz!2B@(B~D[KotMrS aSto)0Ozd2Bn(D,ntGie&M&Sterik:2Yl#3Ned2O&0Uze0Un a0F-%Fla%KasoOva%Sp-%Tern{Vali^Ve$<Zer%3Onie:Blko})Ho^Kmi+K(L'>N)rRmarkRoSanSnoT#V<Zyk3Din>D+Dn!_HlanKotL@L oMn(NomP?S{erV Zd>Zero3NakNdyNo/Sk,Sto)Trn?Zva3En|1Gurt5R):Bar{B_Bin{}&D{Did]HanJakJu)KaoKtusLam aLhotyLibrLn(Me,MkolivM&Ni[lNoeNt<Pal.P_aP olaP#P+Po)PrPu$aPy[,Ram_Rot#RtonSaTa]gTed,U%UzaVa+cZaj#Ze)Ziv(2EkolivEsi0Dlub@MpRami#3No2A%kAdivoAmApotAsi#AunEcEn[Ep!Es~IdImaIs&Ob*kO#nOpaOubUb'&Us!Uzk(0EnIt!Otr0IhaOt0Al?Ber>B#BlihaBylaC*rH=J@>KosKtejlLapsLe^LizeLoMandoMe)MikMn!aMo,MpasMun aN!N%ptNd?N>NfeseNgresN.NkursN)ktNzervaPan>PieP~Pr'#Rb_R-t<Rmid]RoptevRpusRu&RytoRz{S!>St#T_T+)T*lUk!Up_&Us-Uz]VbojZaZ<oh2Ab?A/Aj.Al|AsopisAv!aEd EjcarEs[Eve)Ik{ItikIzeKav>Me+cMivoOcanOkOni#Op OupaOv#T-Uh`]Up?Ut(Vin#Y/+Yp)Y$alYt2Dlan#FrJn(KlaLaj^Li/L#Lom{Ltu,NaPodivuRtRz<Til0Al aAsin#E$<2No]gS_.Ta,T?T#T'>V`]:B,d<})nDn(IkKom>M_aMpaN'#S?SoStu,Tin#V.3B#CkdyD@Dn?D'#Dv.G@^GieG,%H%Hk(H~KtvarNo/odNtil#P@#Pid]T`]T>TmoTokruhVhartV a%Vobok3B,}ot#DojedDsk(H'.Jav>L-M{#NieN#No+umStop`T.T|5Bi$aDivodGi#GopedKal aK{Mc|P!aPu/RdSosTrU^lUhU#Usk!V>3Tiv(1Cer&CiferMpSkSt,%0I%2RaRi#S.:DamD]Gi$rHagonJ{-J _J< aKakK'?Kr_aL[L.L|Lv?Min#Nd+NkoRn(SakrSkotSopu$T?Tri#Tur aZan>ZivoZl Zur#2Lo[0}anikD a%D'.LasaL*nNtol#TlaTo^TrZe,3G,%H~Hu+K.KrofonL@>Lim{rL(Mi#Nc'&Ni[rNom{Nul(S#StrX|2Ad(HaH'.OkS!Uv 1I/Ohem0BilCn(D_#Dl [HylaKroL-ulaM@t#Nar/aNoklN$rumNt|NzunSazSkytStTiva%T<#Ty#U/aUdr(Zai#Z-Zol2Am<Av@>KevTvolaZ{Zut(0T _1DrcF]nL!MieN?S{Ta%ZeumZi#nt3Sliv>0Da:B*r!}yt!Da%Dbyt-DhozDobroDpisHlasHn!Hodi+H,d Iv aJedn*Ji$oJm=K]n Kon>Krm LevoMaz!Mluv Nom{rOkoOpakO$roP`!PevnoPln P~Pos+dPr(oRod RubyRy/]S` S-!S+poSt!TolikV@-Vr/Vzd<yZv!3Be}!CkyDa+koDb!DuhGa%H{Ho^J@JprveKlidLib(Mil(MocO/o)On#PokojR(RvSmyslS*l`Tv<UronV.Zvyk+3Co)JakKamKdyKlKte,kTro5C+hHav?M.%RaR-S _Sn(UzeVinyVo)Zd,5DaD+G{T Tn(Trie3Mfa:0AlArv AvaDivEcEhn!Ejm=Ez aHajo[Iln?Jasn J-tK]p La$L-Li[LohaLu^NosOh! Oj-OutRaz>R&Ru[RysSahSluhaS)r!UvVazVin VodVyk+Yv!_Z<0AsElEn Hl` Ho)H,&It~0BojByt}odCiz Ebr!Esl!Evzd!EzvaH`%Hod J{JinudKazK*p LivLu#Ml#Oln(P`PisPl=P<Pu$ Pyk!Raz#S*d StupSunTokTudVahaVe)Vol!V,%tZ&k1I&Sajd1LasNiskoRa^Roz Ryz-2ApEn?Li#NoOuzl OvyRasaResRs-RuhUpantUr#Us 0Ejn.Iz|0AkE+)Ez L`.L*v!LuvaYl0Ehdy1Ak|As-E,%I%Il(Is|O,Oz?RavduRoti1B al}e$rGieL?LojT_0A^}~I#IvoLavaLep Ln L' N'aO[Ol Pa+cT@T,haTu^Ty/Voj 0Epl IskOpRh!Rl(RokRubyV<1A~ArEsLivn O%1Id1Do[:}!_Ci@tD*/H<-KtLan^L>LivoLu[Mf+tMls-N@#Ni#N&N|N$voNtof+Pri#Rke)RodieR)Ru#Ry[Se#Siv aSt_#T@tTro&V*kZnehtZ*r-3C#DagogJs-K]LotonNal)Ndr-NzeRiskopRoStr(Tar^T?Tro+jVn.Xeso3Ani$aHaJav?K+KnikL.Ln(Lul#Nze)Pe)S!_Sto+Tev&Vn?V'ar2A%n)Ak!Am@Ane)A$i#At Avid]AzE/Em@oEn)EsEtivoEv_Iv!N NoO/aOd.Om[OutUkYn2Bav Byt}odC Ctiv>D!D%n Deps!Dh+dDiv Dkl`Dman DnikDo[Dpo,D,zD$!aDvodDzimEzieHan#Hnut#H'<HromaHybIn)Ji$#Jm=Kaz K+sKojKrokKu)KynLedneLib-Lk~LohaLynomMaluMi~Ml#MocM$aMys+tNe/!N<#Nur(P`!P_Pis-Pla/Pros Ps!PudR`%R%RodRu/aRyvS` SedSilaSkokSlan>S*d SpoluS)vaSud-SypTahT#nT+skTom-T,vaTupaTvo,U#zUtoUzdroVahaVidlaVlakVozVr/V$!VykVzde/Zd,vZem-Zn!-Z<Zv!2Ac|Ah<yAkti#A+sAot>Ap<-AseAv^IncipKnoObud O%ntoOdejOfeseOh,Oj-tO]m Omi+Onik!Op`OrokOs[OtonOut-OvazS#v#St@Udk(UtV-Voh<y0An>OvodTruh0Actvo0Ber)}DlKav>Kl.Kr+LtMpaNcP@SaSin#St.T|Ty#3Rami^SkT_::C-}otDia%Dn?DonFtGbyKe)K'.M@oMp*/NdeRa/R aS'&StrTo+$Zan%Zid]3Ag|Ak%CeptDakt<Fer@tF+xJnokKlamaK<dKrutKt<Pu)%VizeVmaVolverZerva3Sk|Ziko5Boti#Dokm@H'#K+KokoMan{oP'odPu/aRejsSolStl.Tmi$rTopedTun^Ub@#U/oUpU,V.Vn?Zb<Z/odZd!Zezn!Zhod%Zin#ZjezdZ#zZ]haZmarZp`Zru/ZsahZtokZumZvod5Bri#}`]Kav?Kopis3BaBol'}l(D]P`]T.Z(:Di$aH!KoM>Mizd!Mo)N #Rdin#San#T_ Z[Z@?0Or0H|1B,n#CeseD`]Dim@tD]Hn!Jm=Ke,K)Kun^KvojeM@oNoRvisS` Sho,SkokSl!St,SuvSyp!T[T.Tk!T~Trv!VerZ&m2O^R~0FonLn?R#Rot-RupTua%1AfandrAliskoAnz@AutEptikIcaL`[L@?LoLuzO[O#nOroRip)RzUp.V(Vr&0Abi#Adid]An.A$Avn(Ed|Ep>EvaEz.IbI&Izn?OnOup-OvoU/UhaUn%Up#Za0A,gdE)&Il$voL*vaOgR`RkRt#Ut-Ysl0AdAhaOb0Bo)}aD'#KolP#TvaUbojUc Ud%UhlasUl`Um,kUp,vaUsedUtokUvis{0Al'&As _IsLavOd-Oj@>OluOnz<Orn(Ou$aR/aU$ 1An^AzD%NaN>Ovn!P@StUb1An?Ar(aAti#Av[EhnoEz#OdolaO+kOpaOrnoOup!Ra/ResRh~RomRu&Ud&Upn?VolYk0Bj-tBtropy}arD(KnoNd!N=Rik!aR'.0AhAl$voEtrAt[Az-Is+It-Obo^Odid]Or#Rab2Kav#KotN-N'>P!Pk(R'(S_T(:B+t#Bu+H*nJemnoJfunJgaJ Jn(Kti#Mh+MponNc|N>NkerPe)V@.Z!_3}ni#HdyKut.LefonMno)Nd@%Ni$aN<P])P&PrveRapieRmos#Xtil3}oSkopisTu+k1Ad+cAn.0Ap#Esk!UkotUpa0El1A+)Pin#PolRzoUhaU+c2Ad?Akt<AmpAsaAverzaEf E$Ez<Hav.Hl.O/uOj?Os#Ou[P%P _Pk(Ub>U/l Uhl?UsV!2DyH~H(Nd,Ri$aR&jZemsko0ArohOr[Rd(Rz2GrKev:0Oh(OzeR!R*s-RusYt'&0HoTiv(0Iv 3R` 1Edn!I$ M=0Az!_Lidn Lon Otv Roj 0I%I)Ov 0Yv`]0Av If<maIk~1Ad~L!n Ly~Out!Rav 1AnAz 0Ed~Il|Mrt N`n N=Oud Tl!Tr~0Ah|K!Lum O~Op@>R*s 1Al Oln Oz'#3D,v ElEn.L.N!:GonL/aL*nNaN^lNil#RanRhanyR|1ElkuHod0Ova0DroGe)%J%Lbl*dL{rhL _LmocLry[Nk'Ran^RzeS_#SkrzeSn?SpoduS)Ter.Ver#3B,%}rDeoh,D.D+LaN?S{Tal aZeZ #0Ezd0L`Us0Aj#AkAs>EvoHk(IvN'#Oup!1Uc|Uk0DaDiv(Doz&kD$voJ@skyJ&JskoLantL[L LnoSk'#Zid]Z'&0Ravo1Ab>A%tAhA)Ba}o+kH!StvaTu+0Ad T*p Tup0Ip4Bav Br!}|D!D,Fot H+d!H~Hod H,d Hub Jasn J{Jm=K]p Kon!L-!Maz!Mez Miz{Mys+tNe/!Nik!Nut P`!Pl! P,v Pu$ Raz R'n!Rv!Sl' SokoS)v Su~Syp!Tas Tes!Tr! Vi~Vol!Vrh_Zdob Zn!0AduBud }op D<Du/Dy/!E$upH+demKazLyk!NikOr-P*,TahT-::993Lofon::Br!Byd+t}|DarmoDus F*k!Hlt Hod H,^Hy~J!>J{Ji$ K+p!K*p Lep Mez Mot!Mys+tNe/!Nik!Pl! Poj Ps!Raz S)v Su~Taj Temn Tk~Ujm=Val Ve+tVin Vol!Vrt!Zvon 0Av RusuUd|Yt-1A+#ArmaAtn(IvoOb RojVihYm`]0L@.ManM.Pt!Z`uZdola2At Lt~Lubo#Ot' Ru[0MaMn?0Emn 0Lam!Oum!R!#Umav#0AtoEh#O[OmO$Ozvyk0Ap|ArAt-IjeIz{Ocn Odr!Rzl.Ut|0AkAl(Am@!Ovu0B,z Tav Ub-Ufa+0Lod Omal RavaR( Rud#Rvu1A^An C`]N (NoOv&Y/l Zav(1I/aR! 0B'.Br0Ed~EnkuEs_aOnR!Uk'odYk\";\nconst checksum = \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-cz]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangCz extends WordlistOwl {\n    /**\n     *  Creates a new instance of the Czech language Wordlist.\n     *\n     *  Using the constructor should be unnecessary, instead use the\n     *  [[wordlist]] singleton method.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"cz\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangCz``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangCz();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-cz.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nimport { decodeOwlA } from \"./decode-owla.js\";\n/**\n *  An OWL-A format Wordlist extends the OWL format to add an\n *  overlay onto an OWL format Wordlist to support diacritic\n *  marks.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on latin-1 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwlA extends WordlistOwl {\n    #accent;\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWLA %%data%%\n     *  and %%accent%% data and validated against the %%checksum%%.\n     */\n    constructor(locale, data, accent, checksum) {\n        super(locale, data, checksum);\n        this.#accent = accent;\n    }\n    /**\n     *  The OWLA-encoded accent data.\n     */\n    get _accent() { return this.#accent; }\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords() {\n        return decodeOwlA(this._data, this._accent);\n    }\n}\n//# sourceMappingURL=wordlist-owla.js.map","import { assertArgument } from \"../utils/index.js\";\nimport { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\n/**\n *  @_ignore\n */\nexport function decodeOwlA(data, accents) {\n    let words = decodeOwl(data).join(\",\");\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        assertArgument(match !== null, \"internal error parsing accents\", \"accents\", accents);\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${match[1]}])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n    return words.split(\",\");\n}\n//# sourceMappingURL=decode-owla.js.map","const Base64 = \")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\";\n/**\n *  @_ignore\n */\nexport function decodeBits(width, data) {\n    const maxValue = (1 << width) - 1;\n    const result = [];\n    let accum = 0, bits = 0, flood = 0;\n    for (let i = 0; i < data.length; i++) {\n        // Accumulate 6 bits of data\n        accum = ((accum << 6) | Base64.indexOf(data[i]));\n        bits += 6;\n        // While we have enough for a word...\n        while (bits >= width) {\n            // ...read the word\n            const value = (accum >> (bits - width));\n            accum &= (1 << (bits - width)) - 1;\n            bits -= width;\n            // A value of 0 indicates we exceeded maxValue, it\n            // floods over into the next value\n            if (value === 0) {\n                flood += maxValue;\n            }\n            else {\n                result.push(value + flood);\n                flood = 0;\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=bit-reader.js.map","import { WordlistOwlA } from \"./wordlist-owla.js\";\nconst words = \"0arertoiotadonoaRteirroenaNonaLsolocoiliaralaorrenadaChoN$n0A>Dom,EjaI!#Oga&O'Or#RazoR*Ue=U<0Ab Adem@Ce<C~Ei)ElgaEn#Ept I&L  NeOg!O<TivoToTrizTu Ud*U!&Us 0Ic#Mit*Opt Or'Ua`Ul#0Reo0Ect Ic~In Irm 0IlIt On@Os#Ot Reg R$UaU&U?aUja0OgoOr+0ReSl 0Ed_zE'Us)1Ac[nAmb_ArmaBaBumCaldeDeaEg_Ej Er%E%F?!GaGo&nIa&I,#Iv$MaMejaMib T TezaTivoToTu[Um'Z 0AbleAn)Apo]ArgoAs B Bi#E'IgoIs%dOrP oPl$0|oC@'C]D D,Em@Gu=Il=ImoIsOt T,aTiguoTojoUalUl Unc$Ad*EjoO1Ag A[#Eti#IoLic O&Or)OyoR,d!Rob Ues%U+1A&A`ArBit+BolBus#|ivoCoD!D?]DuoEaI&IesM.i-esOmaPaP.Reg=RozRugaTeTis%0AA&Al#C,<Egur EoE<rI,#I=Ist*NoOmb+P!oT?]T+Tu#Um*Un#0AjoAqueArEn#EoI>Le%OmoRa!RozUn0DazD$GeLaM,#S,)T^0AlAnceA+EEl]`E`EstruzI.I<2ErU{U'0Af[nArO)Uc Uf_Ul:BaB^|eH@IleJ Lanz/c.LdeMbuN>Nd-oRb(>RnizR+Scu]S#nSu[Tal]T!@T*Tu%UlZ 3BeBid/=S SoSt@3|oEnNgo2An>OqueUsa2ABi`BoCaCi`DaDegaIn//!oLsaMb-{dNi#N}saiRdeRr SqueTeTinVe{Zal2AvoAzoEchaEveIl=In>IsaOcaOmaOnceO)UjaUs>U#2CeoCleE'EyFan{F.HoIt_L#Rbuj(l(+Sc TacaZ.:Bal=BezaBi`B[CaoDav!D,aErFeI{ImanJaJ.LLam Lc$L&Li{dLleLm/^LvoMaMb$Mel=Mi'Mp}c!Nd?Nel-gu+Nic-#N-.ObaOsPazPi%nPo)Pt Puch((b.RcelRe%Rg(i'RneRpe%R+R%SaS>S!oSpaS#rT^ceT_U{lUsaZo3Bol]D!D+Ld/eb_Lo<Lu]M,#Niz-t+Rc(&Rez(oRr R)zaSpedT+2AcalAle>AmpuAnc]ApaAr]I>Is)IvoOqueOzaUle%Up 0Cl.EgoE=EnEr#F[G +M->NeN%P_sR>Rue]SneTaU{d2Am^AnA+AseAveI,)ImaInica2B_Cc~|i'Ci`CoDigoDoF_G!He)JinJoL/ch/eg$Lg Lin/l LmoLum`Mba)M!Mi{Mo&Mpr-deNej}g-oc!Nsej}t PaPi(az.Rba%RchoR&nR.(r!S!SmosS%2AneoAt!E Ec!Ei&EmaIaIm,Ip%IsisOmoOnicaOque%U&Uz2Ad+Ar#At+BoBr*| aEl=En#Er{Es%EvaId Lebr/p/#Mb_Mpl*N-e%O%P.Pul( R$<R<RvaTis:M-z(R&T?3B!B?Ca{C*DoF,saFin*J LfinLga&Li#M^-<N%lP^)RechoR+%Sayu'SeoSf?eSnu&Sti'Sv$TalleT,!U{3AAb=AdemaAman)A`Ar$BujoCt En)E%EzFic?G'Lem/u*N!oRec#Rig*S>Se'Sf[zVaVi'5BleCeL^Ming}N Ra&Rm*R<SSis2Ag.Oga2|aDaE=E'LceOQueR Rez(o:0A'R$0H OUa&r0AdIc~Ific$I#rUc 1Ec#Icaz3EEmp=1Efan)Eg*Em,#Ev IpseI)Ix*Og$Ud*0Bu&It*Oc~Pa)Pe'PleoP_sa0A'C go|ufeC@EmigoE+Fa&F!moGa'Igm/aceOrmeRe&SayoS, T!oTr VaseV$1Oca0Uipo0Izo0Ca]C,aCol Crib*Cu&Enc@F!aFu!zoPa{PejoP@PosaPumaQuiT TeTi=Tufa0ApaEr'Ic-@1Ad*Alu En#It 1Ac#Am,Ce<CusaEn#Ig*Il$Ist*I#P!#Plic P.!T_mo:BricaBu]|a{C?C#rE`J/d/=L<Lt MaM?@Mo<Ra.Rmaci(olRsaSeTigaU`V^X3Br!o|/izORi(ozRt?Rv^Stin3AbleAnzaArB[Cc~|aDeoEb_ElE[Es%Gu[J JoL/e)L@lLt+NNc-g*Ni#Rma2A>Au%EchaOrO%U*UjoU^2B@CaGa%G.L$Lle#N&Rm(+Rtun(z SaTo2Aca<Ag?AnjaAseAudeE*E'EsaIoI#U%2EgoEn)ErzaGaM Nc~Nd(g.R@S?TbolTu+:Ce]FasI%JoL/!i/=Mb- Nch}g-<RajeRzaSoli`St ToV?an3Me=M*NN!}$N)Ran$R,)Rm,S#3Gan)M`s$R Ro2Aci OboOr@2LLfoLo<LpeM(&R?([TaTeoZ 2A{Afi>A'AsaAtisAveIe%Il=IpeIsI#O<rUaUe<UmoUpo2An)ApoArd@Er[IaI'I.I<It [Sa'St :B!B?Bl C!|aD/l Mac(i`ZZa`3B?]B[|oLa&L$Mbr(*Rma'RoeRv*3E=Er+Ga&Gi,eJoM'S#r@5Ci>G Gu!aJaMb_Ng}^Nr((mig('St?Yo5E>ElgaEr%E<EvoI{IrMa'Me&M?deM}d*RacanR#:1O'0EalIomaO=2Lesi/uUal4EgalUs~0Ag,AnIt P P!$P.!Pul<0CapazDiceEr)FielF^meG,$Ic$M,<MuneNa#Sec#S%n)T!esTimoTu*Ut?Vi!'3AIsOn@0L/o):BaliB.M.RabeRdinR[U]Zmin3FeRinga3Ne)5R`d(obaV,Ya5ErgaEvesEzGa&rGoGue)Ic$N>Ngl-$Nt Pit!R S#V,?Zg :7Lo5A]:B$C$C[DoD+nG #GrimaGu`I>M!Mi`Mp --ch-gos%NzaPizRgoRvaStimaTaTexT*U_lV Zo3AlCc~|eC#rErG~Gumb_Ja'Ngu-#NaOnOp &S~TalT[VeY,{3B!%dB+C^D!Di EnzoGaG!oMaMi)M.Mp$NceN&Ne-go)N}t!`Qui&SoS%T!aT$T+2AgaAmaAn#AveEg En Ev Or Ov!Uv@2BoC~CoCu[GicaG+MbrizM}jaTe5|aC*G J}-esPaSt+ToZ:Ce%|oD!aD_Du+Est+F@G@GoIzL{dLe%Ll/oMaMboMutN>N&Nej Ng-iquiNj N}<N%Na`PaQuin(R>Re(f?Rg,Ri&RmolR+nR)sRzoSaSc aSivoT T!@TizTrizXimoY^Z^ca3|aDal]D$Du]J?]J^L,/.M^i-^NsajeN)NuRca&R,gueRi#SS.TaT!To&T+Zc]3E&ElEmb+G/Lag+Lit Ll.M}-!}im}u#OpeR SaS!@S?SmoTadTo5|?aC~DaDe=HoJ LdeL!Li'M,#Mi- c-ed-j-#NoRad(d!Re'R*R+Rs(%lScaStr TivoV!V?Zo5|oD EbleE]Er)Est[G_J!L/e%L%N&Nec(alRoScu=SeoSgoSicaS=:C C~D IpeRanj(izRr SalTalTivoTu[lUseaValVeVi{d3C$Ct G Goc$G+OnRv$ToUt+V V!a3|oDoEb]E#NezNoTi&Vel5Bleza|eMin(i(m()TaTic@Va#Ve]V$5BeCaCleoD?=DoE[EveEzLoM!oTr@:Sis0E<IspoJe#R(!oS!v T,!V$0AA<Ea'H,%HoIoReTavoTub_Ul#Up Urr*0I IoIsea0S)0EnsaEr%Ic$Rec!0Ro1DoR0O1AEa{Fa#IvoLaMoOrVi&0Bligo0DaZa1A>C~E[In On!T TicaUes#1Ac~A&rAlBi%CaD,EjaGa'G@Gul=I,)Ig,Il]OQues%Uga0Ad@Cu+Ez'OT[0O'Ro1EjaU=1I&Ige'0En)0O':C#D_El]Gi`GoIsJ oLabr/>Le%Li&Lm/om/p NNalNi>Nt!-ue=PaPelP?]Que)R Rcel(edR*RoRpa&RqueR[foR)S SeoS~SoS%TaT$Tr@UsaU%VoYa<3A#nCa&C!a|oDalD*G IneL L{'Le/ig+LlejoLoLuc--s N.OnOrPi'Que'R(ch(d!Rez(f?Ri>Rl(mi<R+Rs.aSaScaSimoS%`Ta=T+leoZZu`3C |.EEd[Er`EzaJam/ Lo#Mi,%N}#rNz-aOjoP(a%S Sci`SoS%T.Zca2AcaAnA%AyaAzaEi#E'OmoUmaU[l2B_CoD!D$EmaEs@E%L,Lici/=LvoMa{Me=MoMp-!Rc~R%lSa{Se!SibleS)T,c@T+Zo2A&E>zEgun%Em$EnsaE<Ev$ImoIncipeIs~Iv OaOb Oce<Oduc#OezaOfe<rOg[maOleOmesaOn#Op$OximoUeba2Bli>|!oD^Eb=Er%Es#Lg/*Lm.LpoL<M-#NalNoPaP?(e:99Ed EjaEm Er!E<Ie#ImicaInceIt :Ba'B@BoC~DicalIzMaMp-ch}goPazPi&P#SgoSpaToYoZaZ.3Acc~Ali{dBa'Bo)Ca!Ce%|azoCog!C_oC#Cur<DD.&Duc*FlejoF^maF[nFug$Ga=G*G]G_<H,I'IrJ/a#LevoLieveLle'LojM Med$M}>rNd*N%P #Pet*Po<Pt?SSca)Si`Spe#S#Sum,T*oT^'T[#Un*VesVis%YZ 3CoEgoEn{EsgoFaGi&G^Nc.N.OQuezaSaTmoToZo5BleCeCi D DeoD?]ErJizoJoM!oMp!NN>N{PaP!oSaScaSt+T 5BiB^DoE{G*I&In/e%LoMboM^Ptu[TaTi`:Ba&B!B$BleC GazG[&L/&L!oL*Lm.L.Ls/#LudLv Mb-c~Ndi-e Ng_Ni{dN}#PoQueRdin()nSt_TanU`Xof.3Cc~CoC_#C%DGu*IsL=LvaMa`M?l-d-<rNalN^P  P@Qui(RieRm.Rv*S,%S~TaT,%V!oXoX#3D[Es%E)G=G'Lab/b L,c$L]Mbo=M$R,aS)maT$Tu 5B_C$D$LLap/{&Le{dLi&Lt Luc~Mbr-de}i&No+NrisaPaPl P^)R&Rp_s()oS)nTa'5AveB*Ce<D^Eg[E=E'Er)Fr*Je#L%nM P! Pl*P.!P_moRR>Re'Rg*S#T?:Ba>BiqueB]BuCoC#JoL L>L,#Ll/.Ma'Mb^Ng}quePaPe)P@P.Qu?l(deRe(if(je%RotR+R%TuajeU+ZaZ.3At+|oC]CnicaJa&J!Ji&L/efo'MaM^Mp=NazNd!N!NisN<Ori(api(>Rmi'Rnur(+rSisSo+StigoT!aX#Z3B$Bu+nEmpoEn{Er[E<G_J!/deMb_Mi&M}%OPi>PoR(.TanT!eTu=Za5Al]B?=C Ci'DoG/&M N}#P PeQueRaxR!oRm,%RneoRoRpe&R_R<RtugaSS>S!Xi>2AbajoAc#rA!Afi>AgoAjeAmoAnceA#AumaAz EbolEguaEin%EnEp EsIbuIgoIpaIs)IunfoOfeoOmpaOn>OpaO)OzoU>Ue'Ufa2B!@BoEr#MbaM^NelNic(bin(ismoR'T^:0Ic 9C!a0B[l0I{dIrIv!<OT A3Ba'BeG,)Na0ArU $0IlOp@1A:CaC$Cu`G GoI`J?l/eLi&LleL^Lvu]Mp*oR(i R.So3Ci'C#rHicu=In)JezL/!oLozN-c!Nd-e'Ng N*N%NusRRa'RboRdeRed(j(<Rt!3AAjeBr C$CtimaDaDeoDr$EjoErnesG^LLl-ag_N}e&OlinRalRgoRtudS^Sp!aS%Tami`U&VazV!oV*Vo5LcanLum,Lv!RazT ToZ5E=Lg :::C!Te3GuaM('So9DoGaGur:F*}jaPa#Rza93N(+5MoR&\";\nconst accents = \"aeiou7695@@BZWWavwUJkO@Y-Kn))YEGq#E@O)cI@#ZkMHv$e*))M!!)D**$GW!oKm*Acoh^k&It-pi^SYW)$^n!G)bO!Wkzam(jS#X)Og*^l^RW!bQ#QygBKXfzE))hti!Qm)Cng%%c)mJiI*HJWbmYniCLwNdYyY%WKO^bnT$PuGOr!IvHu&G(GKbtBuhiW&!eO@XMeoYQeCa#!MrTJCq!OW&CHG(WCcW%%)$rfrIegu$)w!G)JGmWWw)MnD%SXXWIT^LWAZuVWB^W)eTL^x&$WGHW(nKWEMA)#$F$x$Waekqs,n7715)W*HM-$WAcCiu(a))VCZ)GG%(*CWWdW%$D!UCO$M\";\nconst checksum = \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-es]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEs extends WordlistOwlA {\n    /**\n     *  Creates a new instance of the Spanish language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEs]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"es\", words, accents, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangEs``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangEs();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-es.js.map","import { WordlistOwlA } from \"./wordlist-owla.js\";\nconst words = \"0erreleontiteurinueiriet cegeanseali medenel q)eniluxaus ch0Ais}And$Diqu E`#Ol*Ord Ou%rOy RasifReuv Ri,Rog RuptS_-SoluS'@UsifYss=0A@m+AjouAr+nCab]Cep,Clam Cola@Cro~eCu}ErbeHatHe,Idu]I Omp&Qu *R$y?Te'TifT)l0Ep&EquatHesifJec%fJug Mett!M* Op,Or Ouc*Res<RoitUl&V be0R R$ef0Fai!Fec,Fi~eF!{Fub]0Ac Enc I#I,Raf Reab#Ru?1D Gu`#L>Mab#S/-0Ou,Us,1Arm Chim+Er&Geb!G)I_ I?ntLeg Lia.Lou Lum O'd*PagaTes<Veo#0A&'BiguB!Enag Ertu?Id$Ir=Orc O'Ovib#Phib+P#'Us/t0Aly<Apho!Ar~+Atom+C+nE/%rG#Gois<Gu#{Im=Nex N$-N)lOd(Om=+Ony?Orm=T_[Tido&X+{1Ai}Eri%fL/*Olog+Pa!`Pe]Por,Puy 0UariumUeduc0Bit!Bus&De'Doi<G_tLequ(Matu!Me?ntMoi!Mu!P_,Ra~ Riv Ro}S_icT +lTic#0PectPh=&P* S|tS v*S+t&Soc>S' TicotT!Tu-0El>O?RiumRo-Ta^T_%fT* Trap 0Ba(eB .Da-Dib#G' Ro!Tom[Tru~e0A]Anc Ari-En*Er<Eug#Ia&'I@I$I}O(eOu R`1I=Io?:D.Fou Ga.G)t&Igna@L/c Lc$Le(eLisa.Mb(Ncai!Nda.Nl+)Nn>eNqu>Rb>R`R$R^Rra.Ss(S%$Ta`#Te|T,+Udr>Vard 3Let&L>Lo&Nefi-R-|Rg Rl(eRmudaSa-Sog[Ta`Ur!3B $Cyc#Du#JouL/L(g)LlardNai!Olog+Ops+OtypeScuitS$Sto'iTu?Zar!2AfardAg)An~*Ess/tInd OndOqu Ous$2BardB(eI!I}Li@Nb$Nd*Nhe'Nif>NusRdu!R[T&Uc#Ue{Ug+Ul$Uqu(Ur<Usso#U%^Xe'2An~eAs>AveEbisE~eEuva.Ico]Iga@Ill/tIo~eI^O~u!Od Onz Ous<Oye'U?Us^Ut=Uy/t2Ff#Iss$L#%nRe|R(S% T( To*Vab#Vet&:B/$B(eChet&De|D!Fe(eIllouIss$Lcu]Lep(Lib!Lm Lomn+Lvai!Mara@M aMi$Mpag[N=Net$N$N%[NularPab#Por=Pri-Psu#P,Pu~eRab(eRb$eRes}RibouRna.Rot&R!|Rt$Sca@S>S^Ssu!U}U%$V=>V [Viar3D`#Intu!Les&Llu#Ndr>Ns' Ntr=Rc#Rebr=Ri<Rn Rve|S}2Agr(Ai<A#'Amb!An-Apit!Arb$As<'At$Auss$Av* Emi<En`#Equ>Er~ Ev=I_Iff!Ign$Im eIotLoru!OcolatOis*O<O)t&Ro?U&0Ga!Gog[M_,NemaNtr Rcu]R R^T [Toy_Tr$V`2A*$A?'Aqu As<Av>I_tIgn ImatIva.O~eOna.Opor&2B=tBraCas<Co% D Dif>Ff!Gn Hesi$Iff Inc L eLibriLl(eLma,L$elMbatMed+Mm/@MpactNc tNdui!Nf>N.]Nno,Ns$[NtactNvexePa(P+Ra`Rbe|Rda.Rni~eRpusR!ctR&.Smi^Stu?T$U@Upu!Ura.U&|Uvr*Yo&2AbeA(&Ava&Ay$Eatu!Edi,E?{Eu}Evet&Ib]I Ist=I,eOi!Oqu Ota#Uci=UelYp,2Bi^E`l*Il]eIs(eIv!Lm( L%v Mu]Pi@Ra%fR<'3Anu!C#L(d!Ni^:Ign M>Ng N<'Uph(3Batt!Bi,Bord Brid But/tC= Cemb!Ch* Cid Clar Cor Cri!Cup]Da#Duc%fEs<F_sifFi]Fray Gag Givr Glu%rGraf Jeun Li-Log M/d Me' Mol*Ni~ Nou N&l#Nud PartP_}Pha}Plac Po}R/g Rob Sast!S-n&S tSign Sobe*Ss( Str>Ta~ Tes,To' T!s<V/c V_*V( Vo*3Ab#Alog)Am/tC,Ff  G  Git=G[Lu M/~eM(u Oxy@Rec%fRig Scu,Spo}Ssip St/-V %rVi}5Ci#C&'G?IgtMa(eMici#Mp,Na&'Nj$Nn Pam(eRto*Ru!Sa.Se'Ss>Ta%$U/>Ub#U-'U,Y_2Ag$Ap Es}Ibb]Oitu!2P +P#xeRab#Rc*3Nas%e:0Lou*0Ar,HarpeHel#La* Lip<Lo!Lu<O#Onom+Or-Ou,Ra}Rem Riva(RouU?U!u`0If>Uqu 1Fac Fec%fFig+FortFray Fusi$0Ali}Ar 2Ec,1Abor Arg*Ectr$Eg/tEph/tEveIgib#I%s?O.Ucid Ud 0B=]Bell*Bry$Er|@Issi$M_ O%$Ouvo*P e'Ploy Por,Pri<Ulsi$0Cadr Ch eClaveCo~eDigu Dos}DroitDui!Erg+F/-F m Fou*Gag G(Glob Ig?Jamb JeuLev NemiNuye{Ri~*Roba.Seig[Tas}T_d!T>To' Trav Um  Vah*Viab#Voy Zy?0L+n0Aiss*Arg[At/tAu#Ic +I@m+I Ilog)I[Iso@ItapheO^ReuveRouv Uis/t0U !Uipe0Ig Osi$Re'Up%$0C=>Pad$Pe-P+g#Po*PritQuiv Say S_-S+uSor Ti?TomacTra@0Ag eA]An~eA%^E(d!Endo*Er[lH/olHi^Hn+Ir Off Oi#Onn/tO'd*R/.RoitU@0Phor+0Alu Asi$Enta`I@n-I,Olu%fOqu 1ActAg  Auc Cel]Cit/tClusifCu<Ecu,Emp#Erc H= Hor,I.n-I]Is,O%^Ped>Plor Po}Prim QuisT_sifTrai!Ul,:B#Bu#{Cet&Ci#Ctu!Ibl*Lai<Me{M`#R-'RfeluR(eRou~eSc( T=Tig)Uc$U%fVe'Vori3Bri#C$d D  L(M?M'Ndo*Od=Rm Ro-Rve'S%v=U`#Ut!Vr>3AscoCe]C%fDe#Gu!Latu!Leta.L>eL#ulLm LouLtr N/c N*O#R?Ssu!X 2A* Am?As^At&'E|E~eE'Exi$Oc$O!Uctu Ui@Uvi=2L+Nd +Ngib#Nta(eRc Rg $Rmu]Rtu[Ssi#Ud!Ug eU`]Ulu!Urmi2Agi#Ai<An~*App Aye'Ega&E( El$Em*E[s+E!Iab#Ic%$Iss$Ivo#OidOma.Ont=Ot,Uit2Gi%fI&Re'R+{R%fSi$T':Gn Lax+L +Mbad R/%rRd+nRn*Rrig)Zel#Z$3AntLa%[Lu#Ndar?N =N+NouN%lOlog+O?t!R/iumR?St)lY}3B>C]RafeV!2A-AiveIs}ObeOi!Or+{2Lfe'M?Nf]R.R`#Udr$Uff!UlotUp`#Urm/dUt&2Ad)lAffi%A(eAndApp(AtuitAv*EnatIffu!Il]Imp Ogn Ond Ot&OupeUg U% Uy e2EpardErr>I@Im|veIta!Sta%f3Mnas&Rostat:Bitu@Cho*L&Me|NgarN[t$RicotRm$+Rp$Sard3LiumMato?RbeRiss$Rm(eR$Si,U!{3B n BouLar/tStoi!V 5MardMma.Mo.[N['Nor N&{R@Riz$Rlo.Rm$eRrib#U#{Us<5BlotI#{Ma(Mb#Mi@Mo'R]3Dro?lG+[M[Pno<:2Yl#2Nor U/e4Lici&Lusi$0A.Bib I,M_<Mobi#Muab#PactP i=Plor Po}Prim Pu,0Carn C_d+Ci@ntCl( Colo!Dex Di-Duc%fEditEp%eExactF(iFlig Form Fusi$G  H= Hib Jec,Ju!No-ntOcu]Ond Scri!Sec&Sig[Soli&Sp* S%nctSul,TactT_<Ti?Trig)Tui%fU%#Vasi$V_,Vi,Voqu 3Oni^Rad>ReelRi,0O]2Oi!Res<:GuarIll*MbeNv>Rd(Ug U[Velot3Tab#T$UdiU[s<9Ind!N~ Ng]Ue'UissifUrn=Vi=Y|Ye{5Bi]Ge?ntNiorP$Ris&S%-Te{V_i#:Yak7M$oOs^:BelBi=Bo' C  Cto<Gu[I[Is}I% Mbe|Mel#MpeN-'Nga.N,[P(R.'R?Ur>VaboVo*3Ctu!G=G Gu?SsiveTt!V>Xi^Zard3As<B  B!C_-Cor[E.Ev!Gatu!Go,G)M Mi&M$a@Mpi@Neai!NgotOn-|Qui@S>eS,ThiumTi.Ttor=V!'5Gi^Inta(Is*MbricT +U UrdUt!UveY=5B+Ci@Cra%fE'Gub!Is/tM>eNai!NdiR$T,X){:Ch(eGas(G_taGi^Ig!Ill$In%_Ir+Is$Jor Lax Lefi-Lhe'Li-L#t&MmouthNda,Niab#Nqu/tN&|N)lRath$Rb!R~/dRdiRi%?R^'Rr$R&]Scot&SsifT +lT>eTra^Udi!Ussa@UveXim=3Ch/tC$nuDa`#Dec(Di,Du<Il#'L/.Lod+Mb!Moi!Nac N Nh*Ns$.NtorRc!diRi&R#Ssag Su!T=Teo!Tho@T>Ub#3Au]CrobeEt&Gn$Gr L+uLli$Mi^N-N =Nim=Nor Nu&Rac#Roi,Ssi#X&5Bi#D [El#{Ndi=Ni&'Nna+Not$eNst!Ntag[Nu?ntQ)'R-|Rsu!R% Te'TifU~eUf#Ul(Uss$Ut$Uv/t5L%p#Ni%$Ra`#Re[Rmu!Sc#SeumSic+nTa%$T T)l3Ria@R%l#S,eThi^:Ge'PpeRquoisRr Ta%$Ti$Tu!Ufra.U%^Vi!3Bu#{CtarFas&Ga%$Glig Goc>I.Rve{Ttoy Ur$eUtr$Veu3CheCkelTra&Ve|5B#CifCt'[Ir-'I<t&Ma@Mb!{Mm Rma%fTab#Tif>Toi!Urr*Uve|Va&'Vemb!Vi-5A.Anc I!Isib#M oP%=Q)Tri%f:0E*Jec%fLig Sc'S v Stac#T_*T' 0Casi$Cup E/Tob!Troy Tup]Ulai!0E'Or/t1F_}Fic>Fr*0Ive1Se|S`l$2Fac%fIv>0Bra.Ett!0Ct){Du]E!{Iri^1A#A^Er Ini$PortunPrim T Ti^1A.{An.Bi&D$n E`#G/eG)`Ifi-Ne?ntQ)T+0C`]Mo<Satu!0Ar+0Rag/Rs$T`Trag Vra.0A%$1Y@Y.[1O[:Isib#La-Lma!sLo'@Lp Na~eNdaNgol(Niqu N[|NoramaNt=$PayeP>Po,PyrusRadoxeR-l#Res<Rfum R]Ro#Rra(R<m Rtag Ru!Rv_*Ssi$S&^T [lT+n-Tr$V`l$Voi}Y Ysa.3Ig[Int!La.Lic/L#Lou<Lu~eNdu#Netr Nib#NsifN'+Pi&PlumRdrixRfor Rio@Rmu,Rp#xeRs`R&S Ta#TitTr*Up#2Ara$Ob+O^Ot$Ra<Ysi^0AnoCt'=E-Er!Euv!Lo&N-|Pet&Qu Rog)Sc(eSt$Vo,XelZza2AcardAf$dAis*An A^Astr$A&|E' ExusIa.OmbOng U+Uma.2Chet&Es+E&In&Ir>Iss$Iv!Lai!Lic>L#nLyg$eMma@Mp>Nct)lNd  NeyR%^Si%$S<d Stu!Tag Te|Ti$U-Ula(Um$Urp!Uss(Uvo*2A*+A%^Ec+{Edi!EfixeElu@EnomE<n-E&x&Evo*Imi%fIn-Is$Iv Ob#?O-d Odi.Of$dOg!sO+Oje,Olog)O?n Op!Osp eO&g O)s<Ov beU@n-U[|0Y~o<1BlicC $I}LpeLsarNai<Ni%fPit!Rif>Zz#3Rami@:99AsarE!l#Es%$Ietu@It,O%_t:C(eC$,D+{G$d(I@'Is(L_%rLl$.Mas}Pi@Sa.Tis}Vag V(Y$n 3Ac%fAg*Ali}Anim Cevo*Ci,Clam Col,Cru,Cu]Cyc]Dig Dou,Fai!F#xeForm Fra(Fu.G=+nGi$Gla.Gul>I, Je,Jou La%fLev L+fMar^Me@Mi<M$,Mpl*Mu NardNfortNif]N$c Ntr NvoiPl>Por,Pri<P%#Qu(S veS(e{Soud!SpectS,SultatTabl*T_*Ticu#Tomb Trac Uni$Uss*V/~eViv!Vol&Vulsif3Ches<De|E'Gi@Go]Nc Pos,Sib#S^T)lV=V>e5Che{M/-Mp!N-Nd(Se|S>Ta%fTorTu#U.U`#U#|U%[Y|?5B/BisCheEl#G){In Is<|S S%^3Th?:B]Bo,B!Co~eFariGes<Is*La@LiveL$Lu MediNc%$Ngl>Rcas?Rd(eT' Ug!nuUm$U,Uva.V/tV$n 1AlpelAnda#E]atEnarioEpt!HemaI_-Ind O!Ru%nUlp,1An-Cab#Ch Cou C!,Da%fDui!Ig['Jo'Lec%fMa(eMb]M_-M(=Na&'Nsib#N&n-Par Q)n-Re(R.ntR+{Rru!RumRvi-Sa?V*Vra.Xtup#3D =Ec#Eg Ff]G#Gn=L_-LiciumMp#Nc eNist!Ph$RopSmi^Tu 1I 3Ci=C#DiumIg[{LdatLe`Litu@Lub#Mb!M?`Mno]N@N.'N[t&No!Rc>R%rS+T%<Uc+{Udu!Uff#U#v UpapeUr-U%r Uv_*0Ac+{A%=Eci=H eIr=3Ab#A%$ErnumImulusIpu]RictUd+{Upe'Ylis&0Bli?BstratB%lBv_*C-sC!FfixeGg  Ive'Lfa&P bePpl>Rfa-Rica&R?n Rpri<Rs|tRv+Spect3LlabeMbo#Metr+Nap<NtaxeS&?:BacBl>C%#Il]L_tLism/L$n Mbo'Mi}Ngib#PisQu( Rd RifR%[S<TamiToua.UpeU!|X 3Mo(Mpo!lNa`#Nd!Ne'N*Nsi$Rm( R[Rrib#T(eX&2E?Eor+Erap+Orax0BiaE@Mi@Reli!Ro*SsuT/eT!Tub 5Bogg/L /tMa&Ni^N[|P$y?R~eRd!Rna@Rp`#R!ntR<Rt)TemU~ Urna.Us}X(e2Ac%$AficAgi^Ah*A(An~ Ava`Ef#Emp EsorEu`Ia.Ibun=Ico,Ilog+IompheIp]It' Ivi=Omb$eOncOpic=Oupe|2I#LipeMul&N[lRb(eTe'Toy Y|3Mp/Ph$Pi^R/:0Ues^9Ti?Tras$1Ani?If>I$I^Itai!Iv s3AniumBa(Tic/t0A.I[UelU!0I#Op+:Car?Cc(Gab$dG)Ill/tInc!Is<|Lab#Li<Ll$LveMpi!N`#Pe'R>Se{Ss=S&3C&'Det&Get=Hicu#InardLo-Nd!diN  Ng Ni?{Ntou<Rdu!R(Rn*RrouR}RtuSt$T /Tus&X/tX 3AducAn@Ctoi!D/.DeoG[t&G)'La(Lla.Naig!Ol$P eRe?ntRtuo<RusSa.Se'Si$S^{S)lT=Tes<Tico#Tr(eVa-Vipa!5Ca%$Gu I#Is(Itu!La`#Lc/L%g Lu?Ra-R&xT Ulo*Ya.Yel#:G$:3N$:Cht:3B!NithS&9Olog+\";\nconst accents = \"e7693&)U*o&)Ry^)*)W))))#X^))))@@)#Wf)m%)#!))AG)&IIAQIIIBIIHJNAgBIILIDJGo)))HIQIIIIA(IGgJHH(BIIxX#)Ou)@*IAAPIIIJHQJ)&QIQPYI(HYAQC%)!))QHJJ@)#)^f*^AXCJ))$%CP))%&m)u)@e^A#G#))W@!(IKK%!(I%))O@QA))@GG#e))))WHJIWh))my@IIBT^)!)HAYGETHI*))!QnUDG)))nBoKAC*HwyQh))$&)G&)UGO)G)))(BX#v**)%O,e7686)I))@)&)gdMP()))ud)p#L))I^FIHYdWG))D@DFV)QA)o%MyTh%*)Z)%)n(XANc^R)YS\";\nconst checksum = \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-fr]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangFr extends WordlistOwlA {\n    /**\n     *  Creates a new instance of the French language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langFr]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"fr\", words, accents, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangFr``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangFr();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-fr.js.map","import { id } from \"../hash/index.js\";\nimport { hexlify, assertArgument, toUtf8Bytes, toUtf8String } from \"../utils/index.js\";\nimport { Wordlist } from \"./wordlist.js\";\nconst data = [\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\";\nlet _wordlist = null;\nfunction hex(word) {\n    return hexlify(toUtf8Bytes(word));\n}\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\";\nfunction toString(data) {\n    return toUtf8String(new Uint8Array(data));\n}\nfunction loadWords() {\n    if (_wordlist !== null) {\n        return _wordlist;\n    }\n    const wordlist = [];\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform = {};\n    // Delete the diacritic marks\n    transform[toString([227, 130, 154])] = false;\n    transform[toString([227, 130, 153])] = false;\n    // Some simple transforms that sort out most of the order\n    transform[toString([227, 130, 133])] = toString([227, 130, 134]);\n    transform[toString([227, 129, 163])] = toString([227, 129, 164]);\n    transform[toString([227, 130, 131])] = toString([227, 130, 132]);\n    transform[toString([227, 130, 135])] = toString([227, 130, 136]);\n    // Normalize words using the transform\n    function normalize(word) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) {\n                continue;\n            }\n            if (target) {\n                kana = target;\n            }\n            result += kana;\n        }\n        return result;\n    }\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a, b) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word = [];\n            for (let i = 0; i < length; i++) {\n                const k = mapping.indexOf(d[offset + i]);\n                word.push(227);\n                word.push((k & 0x40) ? 130 : 129);\n                word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toString(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n    // This should ignore \"if\", but that doesn't work here??\n    /* c8 ignore start */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    /* c8 ignore stop */\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n    /* c8 ignore stop */\n    _wordlist = wordlist;\n    return wordlist;\n}\nlet wordlist = null;\n/**\n *  The [[link-bip39-ja]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangJa extends Wordlist {\n    /**\n     *  Creates a new instance of the Japanese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langJa]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"ja\"); }\n    getWord(index) {\n        const words = loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords().indexOf(word);\n    }\n    split(phrase) {\n        //logger.assertNormalize();\n        return phrase.split(/(?:\\u3000| )+/g);\n    }\n    join(words) {\n        return words.join(\"\\u3000\");\n    }\n    /**\n     *  Returns a singleton instance of a ``LangJa``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangJa();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-ja.js.map","import { id } from \"../hash/index.js\";\nimport { assertArgument, toUtf8String } from \"../utils/index.js\";\nimport { Wordlist } from \"./wordlist.js\";\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n];\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\nfunction getHangul(code) {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    }\n    else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n    return toUtf8String(new Uint8Array([225, (code >> 6) + 132, (code & 0x3f) + 128]));\n}\nlet _wordlist = null;\nfunction loadWords() {\n    if (_wordlist != null) {\n        return _wordlist;\n    }\n    const wordlist = [];\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word);\n        }\n    });\n    wordlist.sort();\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n    /* c8 ignore stop */\n    _wordlist = wordlist;\n    return wordlist;\n}\nlet wordlist = null;\n/**\n *  The [[link-bip39-ko]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangKo extends Wordlist {\n    /**\n     *  Creates a new instance of the Korean language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langKo]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() {\n        super(\"ko\");\n    }\n    getWord(index) {\n        const words = loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords().indexOf(word);\n    }\n    /**\n     *  Returns a singleton instance of a ``LangKo``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangKo();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-ko.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0torea noica!iosorolotaleratelanena%oiadoencotivomai t ca%a0A]Bagl'Bin#E.Is(Oli!Rasi_Rog#0Cade!C[$Cus#E <Hil,I@QuaReRil>Roba+U 0Ag'Deb{DomeEgu#Eri!IpeOtt&Ul&1Fabi,Fe|Fis(F-n Oris`O(R~$0AveEn.E_,Ganc'I!It&OnismoR>*Rume Uzzo4AbardaA Bat)Ber#BoBumeCeCol>E|<FaGeb-Ian.IbiIm[ Lag#Leg)Lie_Lo@/Lusi_Me$Oge$Pa}Pest!Ta,=Ter$T%c'T)veUn$Veo*Z&0Alga`Ani+A!=B{Br#EbaEr~E^s+I]Mas(M[daMir&Mon{O!P'Pli&U, 0A}r@Ag-feAlis+Arch?At-CaCel/Co-D&D!aEl*Ge*Gol&Gus I`Neg&Nid#NoNunc'OnimoT%ipoZi1At>Ertu-OdePari!Pe^ Pogg'P)@Pun Ri,1Ab~AchideAgos+Ald~Anc'Atu-AzzoBit)Chiv'D{Eni,G[ Gi<Gu IaMon?NeseRed#RingaRos S[>SoTef%eZil*0Ciu|Col EpsiEtt>Fal I$O/Pir#P)Sagg'SeSolu Sur@TaT[u T%eT-|0Av>EismoOm>O$TesaTiv&Tor$Tr{Tua,0Sil'Str?Tis+To$moTun$0Anz#E!V[i!Vi(Volge!3Io<O ZimoZur):Be,C}$Ci$CoDessaDi/+Gn#I+L]<L@Le=L/+Lza$Mbi$Ndi!RaondaRba)R}R{$RlumeRoc]Sil>S(Tos+Ttu U,VaVosa3C]FfaLg'LvaNdaNe_,Nig$Nzi=ReRli=Ta3Bi+CiDo<Fi@GaLanc?MboNo]*O*goPedePol&Rban.R-S]|Ses S$n$Son.SturiZzar)2An@At+2Ll{Nif>R@S]Tan>T^$Zzo*2Acc'AdipoA`An}Avu-E.l/Eve|EzzaIgl?Il/n.Ind&Oc]*O@Onzi=Ul*U$2Bbo<CaDi$Ffo<IoLboO$R*<R-s}S(/S+:De|Du]La`)L]*LesseLib)LmoLor?MbusaMe-+M%?Mmi$Mo/Mpa,NapaNde/NeNi$No|N^=PacePel*P{*Pogi)Ppe)P-Psu/RapaceR}ssaR@Ris`Rova=R!|R li=Sacc'S}+Ser`SoS(<S.l*Sua,Tas+Te=T-meU Vil*3Dibi,D-+Fa*Leb!Llul&NaNo<N.simoRam~Rc&R RumeRvel*So?SpoTo2E/Ia)Ic}Iede!Ime-I=IrurgoI+r-0AoClismoFr&G$Lind)O|*R}R)siTr>T+di$UffoVet+Vi,2Ass>In~O)2C]Dar@D%eE!n.G$meLl&Lm#Lo!Lpo(L^v#LzaMaMe+M`n@Mo@Mpu.rMu<Nci(Ndur!Nfer`Ngel&NiugeN<s(Nosce!NsumoN^nuoNveg$Per P'<Pp?Pr~poRazzaRda+R%#Rn%eRol/RpoR!@Rs?R.seSm>S+n.Ttu-V#2A.!Avat+E#Ede!Emo(Esci+E+Ice I=,IsiIt>OceO=}Os++Uc?,Us}2Ci!Cu*Gi$Ll#Po/R#!R(!R_Sci$S de:DoI$L`+Meri$Nie/N$(Nz&T#Van^Vve)3Bu|C[n'Ci(Cli$Col*C! D%#Fin{FormeG$Leg&Lfi$Lir'L+M[zaNot#Nt)Pos{Rapa+Riv&RogaScri|Ser Sider'Sume!Tersi_Vo 3Amet)Cemb!Ed)Fe(Ffu(Geri!Gi+,Luv'Nam>N=nziPin P*`Po*Rad&ReRo|RupoSag'Sc! Sf&Sge*Spos S+nzaSu`$ToVa$Vel Vide!Vor#5B*<C[.Ga=,G`LceM#M[~Min&N@*NoRmi!TeT !Vu Zzi=2AgoUi@2Bb'Bit&Ca,NaOmoPl%eRatu):0A$0Ces(CoLissiO$m?0E-I]/I,I r?Uc&2Emon?LiOismoReg'4Abor#Argi!Egan.Enc#E|Ev&F>I}MoSaU(0An#B,`Es(I)O^_Oz'<Pir>U*0Dem>Du)Erg?FasiO.}Tr&Zi`1A^.I*goI(d'O},Pu!0U#!0Ar'BaBo(EdeEmi+Ige!Met>OeOsi_Ran.0Ago$AmeAnimeAudi!CaEmp'Erc{Ib{Ig[.Is.!I OfagoOrt#O(Pan(P!s(S[zaSoTe(Tim&Ton?T)(Ult&0Il>N>Rus]To0ClideoRopa0A(Id[zaIt#Olu Viva:Bbr~Cc[daChi)L]Migl?Na,Nfa-NgoN+s`ReRfal/Ri$(R`]Sc?S (Sul*T%&ToVo*(3Bb!Co/DeG#LpaLt)Mmi=Nde!Nome$Rm[ R)R^,Ssu-S^_T+U@3AbaDuc?FaGur#LoNanzaNest-Ni!O!S},S>Ume2A]<Am[]EboEm`Ori@U[.Uo)2B>Cacc?Co(Der#Gl'La+Lc*!Lgo!Nd[.Net>N?N+=Rb{Rchet+Res+Rm~R='RoR.zzaRz&Sf#S(2A}s(A=Assi$A.l*Eccet+E=+Es]IgoOlli$OndeUga,Ut+2Ci/+Cs?Gg[.Lmi<L_Man.Me|Mo(NeNz'<O]RboRgo<Ro!SoTi,:Bb?$FfeLa.oLli=LoppoMbe)M`Ranz?RboRofa$Rzo<S@|Sol'Str>T Ud'ZeboZzel/3CoLa^=L(Mel*Mm#NeN{!N='No^poRgo2Epar@Iacc'Isa0Al*LdaNep)Oc&Oiel*Or$OveR#Ro<T++Udiz'Ur#Us 2Obu*U^<1Omo0BbaLfM{Mmo<Nf'N=Ver$2Aci,A@Af>AmmoAndeAtt&A_(Az?E}EggeIfo<Ig'InzaOt+Uppo2Adag$A'An Ard&FoId&::0Ern#0O=0Ent>Ill'O*RaR>Roge$2Ie<Na)Nor#4A!Le(Log>Lude!0Bal*Bevu Boc]Bu Ma<Mer(Mol#Pac]Pe PiegoPor P)n+0Al&Arc&At^_Can C[d'Chi$Cisi_Clu(Cont)C)c'CuboDagi<D?Do,Ed{Fat^Fil&Fli|Gagg'Geg$G,seGor@G)s(Nes]O@!Oltr&Ond#Sa$Se|SiemeSonn?Suli=Tas#Te)To=]Tu{Umidi!Vali@VeceV{1Erbo,Not>O.siP~1IdeLandaOn>Rig#Ror&0Ol#O poTer>Titu Tr%e0Al?Er&:::Bb)Birin C}Cer#Cri`Cu=D@veGoMpoNcet+N.r=R@(RgaRingeSt-T[zaTi$TtugaVag=Vo)3Ga,Gge)MboN.zzaNzaO<P!Si_Ss#S T.-,VaVig#3Be)DoEv{L/Matu-Mit&Mpi@Ne&NguaQui@RaR~S}TeTig'V!a5CandaDeG~Mb&Nd-Nge_QuaceR[zoToT.r?5CeCid#Ma}Mi$(NgoPoPpo*SingaS(T :Cab)Cchi=Ce)Cin#Da`G>Gl?G<.G)Iol~LafedeLg-@Lin.(Lsa$L Lumo!NaNc?N@r/Ngi&Nifes N=)Nov-NsardaN^deNubr'PpaR#=Rci!Ret+RmoRsup'Sche-Ssa?S^$Te-s(Tr>/T <Tu)Zur}3And)C}n>Ce=.DesimoDit&GaLassaLisLod?NingeNoN(/Rcur'R[daR*Schi$SeSse!S *Tal*To@T.!3Agol&CaCel'Che,C)boDol*E,Gl'!La$Li.MosaNe-,NiNo!Ri$R^l*Sce/SsivaS Sur&TezzaTig&T-T.n.4Emon>0Del*Dif~Du*Ga$G'LeLos(Nas.)N]Ndi=Ne+r'Ni,No $N(<Nt#Nvi(RaRde!Rs%#St)Tiv#TosegaT V[zaVim[ Zzo5C}CosaFfaGhe|G='La|Li<l*L^p*Mm?N Ove!Ra,SaS]*S~Te_,To:BabboF+Nomet)Rci(R%eRr#Sce!Str&Tu-,Ut~Vigl'3Bu*saC)siGa^_Goz'Mme$Ofi+Re|R_Ssu$Ttu$Ut-,VeV)t>3Cch?NfaTi@5Bi,Ci_DoMeMi=Rd>R`,RvegeseSt-$T&Tiz?Ttur$Vel/5C,oL/Me)O_Tri!Vo/Z?,:Si0Bedi!BligoElis]L'O*So, 0Cas'<Ch'Cid[.Cor!!Cult&RaUl#0Ier$Or&1Fer+Fri!Fusc#0Ge|GiNu$4AndeseFa|I#IvaOg-m`T!0Agg'Bel>B-EgaIss'<0Do(E!IceNi_)O!_,Ta1Er#In'<Pos 1A]*AfoDi<Ecchi$Ef%eFa$Gan>Igi<Izzon.MaMegg'Na^_O*g'R[@Ribi,T[s?T~Za+Zo0A!Cur&MosiPeda,Pi.SaSid&Ta]*Te0I.ReTago$TimoTob!1A,EstI$Ipa)Oc{UnqueVi&3Io:Cche|CeCif>Del/D)<EseGaGi=Lazzi=Les&Lli@LoLudeN@)N<l*O*O=zzoPr~Rabo/Rcel/Re!Rgo*RiRl#Ro/R^!Rv[zaRz?,Ssi_St%}Tac}To*g?TtumeVo<3Cc#Dal&Do=,Gg'Lo(N&Nd%eNi(/Nnu Nomb-Ns&N /PePi+Rbe<R]r(R@n#Rfor&Rgame=R'@Rmes(R$Rp,s(Rsua(Rtug'Rva(S#!Sis+SoS^fe)Ta*T^<Tu/n.Zzo3Ace!An+At^$Cci$CozzaEgaEt-Ffe)G?`Gol'G)LaLife)L*/Lo+Mpan.Ne+N=No*Ogg?OmboRamideRet>Ri.RolisiTo<Zz>2AceboAn&As`A+$E=r'2ChezzaDe)(DismoEs?Ggi&L[+Ligo$Ll%eLmoni.Lpet+L(Lt)=Lve!M%eMo@)N.Po*(Rfi@Ro(Rpo-R!R++SaSi^_Sses(Stul#Tass'Te!2AnzoAssiAt~Eclu(Ed~Efis(Egi#Elie_Eme!E$t&Epar#Es[zaE.s Eval(I`IncipeIv#Ob,`Ocu-Odur!OfumoOge|OlungaOmessaO$meOpos+O)gaO.(OvaUd[.Ug=Ur{0Iche1Bbl>D~Gil#G$LceL{Lsan.Nt&PazzoPil/Ro:99Ad)Al]saAsiE!/O+:C]l D@pp'D~,Dun#Ff~GazzoG'<G$Mar)MingoMoNdag'N l&P#Pi=Pp!(Satu-Schi#S[.Sseg=St!l*TaVvedu 3A,Cepi!Cin Clu+Cond{Cupe)Dd{Dime!Gal#Gist)Go/G!s(Laz'<M&Mo N=Pl~Prime!Put&SaSid[.Spon(S+u)TeTi=Tor~T^f~Voc#3Assun Badi!Bel,B!zzoCar~C]Ceve!C%l#Cor@C!du D>*Dur!Fas&F,s(For`Fug'G&Gett#Ghel*Lass#Lev#Ma<!MbalzoMed'Morch'Nasci+N})NforzoN$_Nom#Nsav{N c]Nunc?Nv[i!Par#Petu Pie$Port&P!saPuli!Sa+Sch'ServaSibi,SoSpe|S )Sult#S_l Tar@Teg$Tm>T)_Un'<VaVer(Vinci+Vol Zo`5BaBot>Bus Cc?CoDagg'De!D{!G{Ll'Mant>Mpe!Nz'Sol&SpoTan.Ton@Tu/Vesc'5BizzoBr~GaLli$Mi<Mo)(O*PeSs&St>:B#Bbi&Bot#Go`Las(Ldatu-Lgem`Liv&Lmo<Lo<Lt&Lu L_Pe!Pi@Por{Race$R}smoR S((Telli.Ti-Tol*Tur$Va=V'Zi#0Adigl'AlzoAnc#Ar-At.!Av&End&Irci&Locc#Occi#Rin&Ruffo<Uff&0Ab)(Ad[zaA/Ambi&Anda*Apo/Ar(A.n&Av#El En>Ett)HedaHie=IarpaI[zaInde!IppoI)ppoI_*Ler&Odel/Olp{Ompar Onfor Opri!Or+Os(<OzzeseRibaRoll&Ru^n'Uder?Ul !Uo/U)Us&0Ebit&Ogan&0C}tu-Con@Da$Gg'/G=l#G!g#Gu{Lci#Let^_L/Lvagg'Mafo)Mbr&MeMin#Mp!N(N^!Pol Qu[zaRa+Rb#Re$R'Rp[.R-gl'Rvi!S^=To/T^`=0Ace*Ald&Am#Arzo(At%#E-IdaIl#IngeOc#Oder&OgoOl^!Orz#Ra|Rutt#Ugg{Um&U(0Abel*Arb#Onfi&Orb'Rass#Uar@1Bi*C]meEr-G/G$!L[z'L/baMbo*Mpat>Mul#Nfon?Ngo*Nist)NoN.siNu(idePar'S`S ,Tu#2It+Ogatu-Ove$0Arr{Emor#En^ E-l@IlzoOnt&Ott#Uss#0Elli!Erv#O@0BbalzoBr'C]r(C?,Da,Ffi|G$Ld#L[<Li@L/zzoLoLubi,Lv[.Mat>M`NdaNe|Nnife)Pi!Ppe(P-Rge!Rpas(Rri(R(R.gg'R_l#Spi)S+T^,0AdaAl/Arge!A /Av[ Azzo/EcieEdi!Eg<!E/tu-E-nzaEs(!Ett-,Ezz#IaIgo*(Ill#I$(I-,L[di@Or^_O(RangaRec&Ron#RuzzoUn^$0Uil*0Ad%&O l#1Abi,Ac]AffaAgn&Amp#Ant'Arnu Ase-Atu E*EppaErzoI,|I`IrpeIva,Izzo(On#Or>RappoReg#Ridu*Rozz&Ru|Ucc&UfoUp[@0B[t)C](Do!Gger{GoL+$On&PerboPpor Rgel#R)g#Ssur)Tu-0Ag&EdeseEgl'El&Enu Ez?IluppoIs+Izze-Ol+Uot&:Bac]Bul#Cci&Citur$LeLis`$Mpo<Nni$RaRdi_Rg#RiffaRp&R+rugaS Tt>Ver=Vo/+Zza3CaCn>Lefo$Me-r'MpoMu N@<Ne)Ns'<N+]*O!`RmeR-zzoRze|SiSser#St#T)T ?3F&Gel/Mb)N P>Pog-foRagg'RoTan'To*Tuban.Z'Zzo<5Cc&L,r&L Mbo/MoNfoNsil/Paz'Po*g?PpaRbaRn&R)<R -S}$Ssi!S+tu-Ta$2Aboc]AcheaAfi/Aged?Alc'Amon Ans{Apa$Ar!As*]Att#AveEcc?Emol'Espo*Ibu Iche]Ifogl'Il*InceaIoIs.zzaItur#Ivel/OmbaO$OppoO|/Ov&Ucc#2Batu-Ff#Lipa$Mul Nis?Rb&Rchi$TaTe/:0Ic#0Cel*Ci(!0I!I^_1FaF%'0Ua,4IsseTim#0A$I,Orismo0Ci<|Ge!Ghe!seI]r$If%#I($I+r'Te0Vo0Upa1Aga$G[zaLo0AnzaA C{Ig$*U-'0Ensi,IlizzoOp?:Can.Ccin#Gabon@Gli#LangaLgoL>L,t+Lo)(Lut&L_/Mpa+Ng&N{(NoN+gg'Nve-Po!Ra$Rc#R?n.S}3Det+DovaDu Ge+,I]*Lc)Li=Llu LoceN#Ndemm?N RaceRba,Rgog=Rif~RoRru}Rt~,Sc~Ssil*S+,Te-$Tri=Tus 3Andan.B-n.C[daChingoCi=nzaDim&Gil?G< Go!LeL/$MiniNc{!O/Pe-Rgo/Ro*goRu,n S](S'<SpoSsu Su-TaTel*T^`VandaVi@Zi&5CeGaLa^,Le!LpeRagi<5L}$::::Mpog=N=Pp#T.-Vor-3Fi)Lan.LoNze)Rbi$3Be|N]R]<T 5L/T>5Cche)Fo*LuPpa\";\nconst checksum = \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-it]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangIt extends WordlistOwl {\n    /**\n     *  Creates a new instance of the Italian language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langIt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"it\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangIt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangIt();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-it.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0arad!ototealirertainrasoent hoandoaR#riareha!aroele'oronul0Aca%AixoAl A%rDuz'El]Er$IsmoO$ R<g(Revi Rig Rup$S*$Solu$Sur=Ut[0Ab#Alm Amp Anh A,Ei.El( En ErvoEss E$naHa.IdezImaI}#Irr Lam LiveOlhidaOmod Opl Ord Um~ Us?0Ap.EgaEnt_Ep$Equ Er-%EsivoEusI<%ItivoJetivoJun$M' Or Qu''UboV(,Vog#0R}ave0As.Er'EtivoIn?Iv` Li$Lu-%R}.0Ach Arr As&/Enci Iliz Io)It#O+R! Res%Rup U d Ul]2O`h Ud Us.1AmedaArmeAstr Av<caB(gueB*oCat+De@EcrimEgr@Er.FaceF*e%GumHeioI Ica%I- Inh Ivi Mof^Oc Pis%T( TitudeUc* Ug UnoUsivoVo0Aci A=rA[loAss BasBi-%EixaEniz I=Is$,Iz!eOl?On$ O_,Ost+P  Pli Pola0Ag+maAlis Arqu@A$m@DaimeElExoG~ Im JoOm&@Ot#Sio,T(i|Uid!eUnci Zol1Ag?Alp Anh#EgoEli=Ert^Es Eti%I$Lau,Lic^OioOn.Os)R-dizRov 0Uec(0AmeAn]A+C^D-%E@Ej Eni$Es)Gilo,GolaMaQuivoRai&Reba%Risc Rob>um S-&T(i&TigoVo[=0F&.Il#P' S?S* So&/Sun$Tr&0Ac#Adu+Al/A[f E End(Er_EuIng'Ir?IvoOl{oRac Revi=RizU&Um0Di$rM-.R>o+TismoT|@Tu 0Ali An%Ar@Ent&Es,I?Is Ul,1Ila1Ar E=Ei%Ulejo:B BosaC&]uCh `C@GagemI<oIl I}e)Ir_Ixis)J~ Le@LizaLsaN&Nd{aN/N'Nque%Ra$Rb#R}es>+c>~/Se#S)n%Ta)Te=rTidaTomTuc Unil]3B(IjoIr^IsebolLd!eLezaLgaLisc Ndi$Ng&aNz(RimbauRl*d>_Sou_XigaZ(_3CoCu=En&Foc&Furc G|naLhe%Mest[Mo$rOlog@OmboOsf(aPol Rr-$Scoi$Sne$SpoSsex$TolaZ _2Ind#OcoOque 2A$BagemC#CejoChec]Ico.L^LetimL]LoMb{oNdeNecoNi)Rb~h>d>e&R+c]V*oXe?2AncoAsaAvezaEuIgaIl/Inc OaOchu+Onze O$Uxo2C]DismoF LeRacoScaS$Z*a:B<aB`oBideBoBri$CauCet^C/r_CiqueDast_De#Fez&IaqueIp'aIxo%J#JuLafrioLc~ Ld{aLibr Lm<%Lo)M^Mbis)MisaMomilaMp<]Mufl Navi&Nc` Ne)NguruN/$Nive%NoaNs#N.Nu=Pac/P`aP* Po.Pric/Pt?PuzRacolRb}oRde&Rec>imb Rn{oRpe%R['>)zRv&/SacoScaSeb[S%loS~oT a)Tiv UleUs?U%l V&oV(na3BolaDil]G}]Lebr L~ Nou+N,N%ioRc Rr#R%'oRvejaTimV^2Aco)Al{aAm#Ap^ArmeAticeAveEfeEg^E'oEqueIco%If[In`oOc&/Ov(UmboU.Uva0CatrizCl}eD!eD['aEn%G<aM-$N$Nz><d>cui$Rurg@T 2A[zaE_Ic OneUbe2A=Ag'Ba@B($rBr C^El/Ent_E,Gum`oIb'IfaIo%L L{aLh(Lid'Lme@L}oLunaM<=Mb* M-.MitivaMov(MplexoMumNc]N=rNec.Nfu,Ng` Nhec(Njug Nsum'Nt+$Nvi%Op( P{oPi?PoQue%lRagemRdi&Rne)R}h>p|&R[ioR%joRuj>voSs-oS%laT}e%U_UveVilZ*]2A%+AvoEcheE=rEmeErEspoI^Im*&Io~oIseItic Os)UaUz{o2B<oEcaId#JoLat+Lm* Lp Ltu+Mpr'Nh#Pi=RativoRr&Rs R$Sp'S% T`o:MascoT 3Ba%rBi.BocheB~h C&queCim&CliveCo%C[.D&Dic#Duz'FesaFum G`oG+uGus.It#Ix La$rLeg#L*e L}gaM<daMit'Moli=Ntis)P-#Pil PoisP[ssaPur Riv>+m SafioSbo.Sc<,S-/Sfi#Sgas%Sigu&SlizeSmam SovaSpesaS)queSvi T&h T-$rT} Tri$UsaV(Vi=Vot#Z-a3Ag+maAle$Da)Fu,Gi.Lat#Lu-%M*u'Nast@Nh{oOceseRe$Sc[)Sf ceSp oSque%Ssip S)n%T?UrnoV(,Vi,rV~g Z(5Br?L|i=M?M*#NativoNz`>m-%Rs&SagemUr#U$r2EnagemIbleOg @2El EndeE$PloQues><%Vi=,:1Lod'O Olog@0Ific It&Uc#1Ei$Etiv 3E.1Ab| Eg(Ei$rEncoEv?Im* Ogi 0B goBol#Br~/Buti=EndaErg'Is,rPat@P-/P*#Polg P[goPurr Ul?0CaixeC-#Ch-%C}t_Deus Doss Faix Fei%FimGaj#G-/Glob Gom#G+x Gu@Jo La.Qu<$Raiz Rol#Rug SaioSe^S*oSop#T<$Te#Tid!eT|.Tr^T~/V(g Vi#Volv(XameX($Xof[Xu$1Id(me0Uip 0E$Gui=Ra)VaVil]0B<j B`$CamaColaCri)Cu)F*geFol F[g Fum#GrimaM&%P<$P`/PigaP}jaP[i)Pum Qu(daTacaT{aTic Tof#T[laTu=Vazi 0AnolIque)0F|i>opeu0Acu Ap| AsivoEntu&Id-%Olu'1Ag(oAl Am* A$Aus$Ces,Ci.Clam Ecu.EmploIb'Ig-%On( P<d'P`'P' Pl< Pos$P[s,P~s T(noT*$T+$:Bric B~o,Ce)Ci&DaDigaIxaL L)Mili Nd<goNf +N$cheRd#R`oR*h>of>p>tu+T@T|V|i)X*aZ-da3Ch#Ijo^I+n%L*oM**oNdaNoR>i#RrugemRv(S%j T&Ud&3ApoB_seC Ch{oGur#L{aL/LmeLtr RmezaSg^Ssu+TaV`aX?Xo2AcidezAm*goAn`aEch^O+Utu Uxo2C&C*/Foc GoGue%IceLg#Lhe$Rj Rmig>noR%ScoSsa2Aga)AldaAngoAscoA%rnoE'aEn%E.IezaI,Itu+On]Ustr U%'a2G'L<oLigemNd NgoNilR?Rio,Tebol:B i$B*e%DoIa$IolaIvo)LegaL/L*]Loc]Nh RagemRfoRg&oRimpoRoup>+faSodu$S$TaTil/Ve)Z`a3L#Le@LoM^M(Mi=N(o,NgivaNi&NomaN_Ologi>?Rm* S,S$r3Nas)Nc<aNg#Raf>*o2Aci&IcoseOb&Orio,2ElaIabaLfeLpe Rdu+Rje)R_S$,T{aV(n 2AcejoAdu&Afi%Al]AmpoAn^Atui$Ave$AxaEgoElh EveIloIs&/I.@Os,O%scoUd#Unhi=U)2AcheA+niAx*imEr[ I Inc/Is#LaLo,Ru:Bi.Rm}@S%V(3C.eRd Res@Si.3A$B(n D+.EnaNoPismoPnosePo%ca5JeLofo%MemNes$Nr#Rm}&Sped 5M|#:Te2E@O,2N|#RejaU<a4E,HaUdi=Um* Ustr 0AgemEd@$En,ErsivoIn-%It?Ort&Pac$Ped'Pl<%P|Pr-saPuneUniz 0Al?Ap$AtivoC-,Ch Cid'Clu'Col|Deci,D'e$Du$rEficazEr-%F<tilFes.F*i$Flam F|m&F+$rG('Ibi=Ici&ImigoJe.Oc-%O=_Ov?OxQuie$Scri$Se$Sist'Spe$rSt& S~$Tac$Tegr&Tim Toc#TrigaVa,rV(noVic$Voc 0Gur%2Ani<oOniz Re&Rit#0CaEn$Ol#Qu{o0Ali<o:N{oNg^N)R ac>dimR_SmimToV&iZida3Jum9An*]Elh^G?I>n&Rr Vem5BaDeuDocaIzLg?L/R#Ris)RoS)::B edaB|&C[C)n%Dril/G )GoaJeMb(M-.M* MpejoNchePid P,R<j>{>gu+S<]St_T(&Ti=V<daVou+Vr?X<%Z(3Ald!eB[G#G-d Gis)IgoIlo Itu+Mb[%MeNh?Ntil]OaSmaS%TivoT['oV VezaVi.3B(&Bi=D( G G{oMi.Mo{oMp?NdaNe N]gemQuidezS)gemSu+T|&V_XaX{a5C?Cu$rJis)MboNaNgeNt+RdeT#T(@Ucu+UsaUv 5ArCidezC_Ne)St[T?Va:CacoCe%Ch#CioD{aDr*]Gna)G[zaI|IsL<d_L]Lo%LucoMiloMo{oMu%N^Nc]Nda$NequimN/,Niv`aNobr NsaN%rNuse Pe#Qu* Rc?Resi>fimRgemR*/Rmi)Ro$RquiseR[coR%loRujoSco%Sm|+SsagemStig Tag&T(noT*&Tu.Xil 3D&]DidaDusaGaf}eIgaL<c@L/rMb_M|i&N*oNosNsagemNt&Rec(Rg~/S^Scl SmoSqui)St[T!eTeo_T+gemX(Xic<o3C_G&]Gr Lag[L- Lh M#N( N/caNist_N|@OloR<%RtiloStur 5Cid!eD(noD~ EdaErIn/I)Ldu+LezaL/L*e%LuscoN)n]Quec><goRcegoR=moR-aSaicoSque%S.daT`TimToTriz5DaI$La)Lh(L.Ndi&Ni=R&h>c/Sc~ SeuSic&:Ci}&D?JaMo_R*>r#Sc(TivaTu[zaV&]Veg Vio3Bl*aB~o,GativaGoci Gri$Rvo,TaUr&VascaVo{o3N N/TidezV` 5B[zaI%IvaMe M*&Rdes%R% T Tici TurnoV`oVil/Vo5Bl#DezM(&Pci&Tr'Vem:0Cec#Edec(JetivoRig#Scu_S%t+T(Tur 0Id-%Io,Orr(Ulis)Up#2Eg<%EnsivaEr-daIc*aUsc#0Iva4Ar@Eo,H Iv{a0B_Ele%Is,It'0D~#E_,Tem1Ci}&Er?On-%OrtunoOs$1ArBi.DemD*&F<a$GasmoG~/I-t&IgemIun=LaTo=xoV&/0Cil S^SoT-.0Imismo0S!@T}oTub_Vi=0El]Ul 1Id Ig- :Ca$Ci-%Co%Ctu D @Dr*/G GodeIn`Ir IsagemLav+Lest+Lhe)Li$Lm^Lpi.Nc^N`aNfle$NquecaN)n&PagaioP`^P'oRaf*>ci&Rd&RedeRtidaSmoSs#S%lTam T-%T* T_noUl^Us 3C~i D& Dest[D@t+D+G^I$r&IxeLeLic<oNcaNdur N{aN]scoNs?N%Rceb(Rfei$Rgun)Ri$Rmit'Rn>plexoRsi<>%nceRucaSc#SquisaS,aTisc 3AdaC#Ed!eGm-$Last+Lh#Lo.M-)Nc`NguimN]No%N.On{oPocaQue%R<h>esRue)Sc S$laT<gaVe%2An)Aque)At*aEbeuUmagemUvi&1Eu0DaE'aEtisaLeg^Lici Lu-%Lvil/M MbaNd( N.@P~o,R)Ssu'St&TeUp U,Vo 2A@Anc]A$AxeEceEd?Efei$Emi Ens Ep  Esil]E%x$Ev-'Ez Ima)IncesaIsmaIv#Oces,Odu$Ofe)Oibi=Oje$Ome%rOpag OsaO%$rOv?2Blic DimL Lm} Ls{aNh&N'PiloRezaX?:99Ad+Ant@Ar$AseEbr EdaEijoEn%Eri=Im}oInaIosque:B<^BiscoCh Ci} Di&I In]IoIvaJ^L#M&Ng(Nhu+P!u+P`PidezPosaQue%Rid!eS<%Scun/Sg Sp?S%'aSur Taz<aTo{a3AlezaAnim Av(Baix B`deBol C#C-%CheioCiboC|d Cru.Cu DeDim'D}daDuzidaEnvioF* Flet'Fog F[scoFugi G&@GimeG+In#I$rJei.LativoM?M-=M|,Nov#P oP`'Ple$Pol/P[saPudi Qu((S-]Sfri Sga.Sid'Solv(Spei$SsacaS)n%Sum'T&/T(T' Tom^T+.V` Vi,rVol)3Ac/CaGidezGo_,M NgueS^ScoS}/5B&oChe=D^DeioDov@E=rLe)M<oNc S#S{aS$TaT{oT*aT~ UcoUpaXo5B_Gi=Go,IvoMoPest[S,:B|Ci ColaCud'DioF'aGaGr^Ib_L^L{oLg#LivaLpic Lsic]L.Lv?Mb Mu+iN Nf}aNgueNid!ePa$Rd>g-$Rje)Tur Ud!eXof}eZ}&3C C~ DaD-$Di#Do,Du$rGm-$G[=Gun=IvaLe$LvagemM<&M-%N?N/rNsu&Nt#P #Rei>*g>+RvoTemb_T|3GiloLhue)Lic}eMetr@Mpat@M~ N&Nc(oNg~ NopseN$ni>-eRiTu#5B(<oB+C|_G_JaLdaLetr L%'oMbrioNa)Nd Neg Nh?NoP+noQue%Rr'R%ioSsegoTaqueT(r V#Z*/5Aviz BidaBm(,B,loBt+'Ca)Ces,CoDes%FixoG?G('Jei$Lfa$M'OrP(i|Plic Pos$Prim'Rd*>fis)Rp[s>[&Rt'Sp'oS%n$:B`aBle%Bu^C/G `aLh(LoLvezM</Mb|imMpaNg-%N$P Pioc>dioRef>j>+xaTuagemUr*oXativoXis)3Atr&C(Ci=Cl#Dio,IaIm Lef}eLh#Mp(oN-%N,rN.Rm&RnoRr-oSeSou+St#ToXtu+Xugo3A+G`aJoloMbr MidezNgi=N%'oRagemT~ 5Al]C]L( LiceM^Mil/N`Ntu+Pe%R>ci=RneioRqueRr!>$S.UcaUp{aX*a2Ab&/Acej Adu$rAfeg Aje$AmaAnc ApoAs{oAt?Av E*oEm(Epid EvoIagemIboIcicloId-%Ilog@Ind!eIploItur Iunf&Oc Ombe)OvaUnfoUque2B~ C<oDoLipaPiRboRm>quesaT` T|i&:7V 3Bigo0HaId!eIf|me3Olog@SoTigaUbu0A=InaUfru':C*aDi G o,I=,LaL-%Lid!eLo[sN)gemQu{oR<d>e)Rr(Sc~ Sil]S,u+Z Zio3A=D Ge.Ic~ L{oLhiceLu=Nce=rNdav&N( Nt[Rb&Rd!eRe?Rg}h>m`/RnizRs R%n%SpaSti=T|i&3Adu$AgemAj Atu+Br?D{aDr @ElaGaG-%Gi G| L ejoNcoNhe)NilOle)R!>tudeSi.S$Tr&V{oZ*/5A=rArG&L<%LeibolL)gemLumo,Nt!e5L$Vuz`a::D[zRope3QueRe.Rife3Ng ::Ng#Rp 3BuL?9Mb Olog@5Mbi=\";\nconst checksum = \"0x2219000926df7b50d8aa0a3d495826b988287df4657fbd100e6fe596c8f737ac\";\nlet wordlist = null;\n/**\n *  The [[link-bip39-pt]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangPt extends WordlistOwl {\n    /**\n     *  Creates a new instance of the Portuguese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langPt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"pt\", words, checksum); }\n    /**\n     *  Returns a singleton instance of a ``LangPt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist() {\n        if (wordlist == null) {\n            wordlist = new LangPt();\n        }\n        return wordlist;\n    }\n}\n//# sourceMappingURL=lang-pt.js.map","import { id } from \"../hash/index.js\";\nimport { assertArgument, toUtf8String } from \"../utils/index.js\";\nimport { Wordlist } from \"./wordlist.js\";\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\nconst _wordlist = {\n    zh_cn: null,\n    zh_tw: null\n};\nconst Checks = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n};\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\";\nfunction loadWords(locale) {\n    if (_wordlist[locale] != null) {\n        return _wordlist[locale];\n    }\n    const wordlist = [];\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n        if (locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228 : 128);\n            }\n        }\n        wordlist.push(toUtf8String(new Uint8Array(bytes)));\n    }\n    // Verify the computed list matches the official list\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== Checks[locale]) {\n        throw new Error(`BIP39 Wordlist for ${locale} (Chinese) FAILED`);\n    }\n    /* c8 ignore stop */\n    _wordlist[locale] = wordlist;\n    return wordlist;\n}\nconst wordlists = {};\n/**\n *  The [[link-bip39-zh_cn]] and [[link-bip39-zh_tw]] for\n *  [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangZh extends Wordlist {\n    /**\n     *  Creates a new instance of the Chinese language Wordlist for\n     *  the %%dialect%%, either ``\"cn\"`` or ``\"tw\"`` for simplified\n     *  or traditional, respectively.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langZhCn]] and [[langZhTw]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor(dialect) { super(\"zh_\" + dialect); }\n    getWord(index) {\n        const words = loadWords(this.locale);\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${index}`, \"index\", index);\n        return words[index];\n    }\n    getWordIndex(word) {\n        return loadWords(this.locale).indexOf(word);\n    }\n    split(phrase) {\n        phrase = phrase.replace(/(?:\\u3000| )+/g, \"\");\n        return phrase.split(\"\");\n    }\n    /**\n     *  Returns a singleton instance of a ``LangZh`` for %%dialect%%,\n     *  creating it if this is the first time being called.\n     *\n     *  Use the %%dialect%% ``\"cn\"`` or ``\"tw\"`` for simplified or\n     *  traditional, respectively.\n     */\n    static wordlist(dialect) {\n        if (wordlists[dialect] == null) {\n            wordlists[dialect] = new LangZh(dialect);\n        }\n        return wordlists[dialect];\n    }\n}\n//# sourceMappingURL=lang-zh.js.map","import { LangCz } from \"./lang-cz.js\";\nimport { LangEn } from \"./lang-en.js\";\nimport { LangEs } from \"./lang-es.js\";\nimport { LangFr } from \"./lang-fr.js\";\nimport { LangJa } from \"./lang-ja.js\";\nimport { LangKo } from \"./lang-ko.js\";\nimport { LangIt } from \"./lang-it.js\";\nimport { LangPt } from \"./lang-pt.js\";\nimport { LangZh } from \"./lang-zh.js\";\n/**\n *  The available Wordlists by their\n *  [ISO 639-1 Language Code](link-wiki-iso639).\n *\n *  (**i.e.** [cz](LangCz), [en](LangEn), [es](LangEs), [fr](LangFr),\n *  [ja](LangJa), [ko](LangKo), [it](LangIt), [pt](LangPt),\n *  [zh_cn](LangZh), [zh_tw](LangZh))\n *\n *  The dist files (in the ``/dist`` folder) have had all languages\n *  except English stripped out, which reduces the library size by\n *  about 80kb. If required, they are available by importing the\n *  included ``wordlists-extra.min.js`` file.\n */\nexport const wordlists = {\n    cz: LangCz.wordlist(),\n    en: LangEn.wordlist(),\n    es: LangEs.wordlist(),\n    fr: LangFr.wordlist(),\n    it: LangIt.wordlist(),\n    pt: LangPt.wordlist(),\n    ja: LangJa.wordlist(),\n    ko: LangKo.wordlist(),\n    zh_cn: LangZh.wordlist(\"cn\"),\n    zh_tw: LangZh.wordlist(\"tw\"),\n};\n//# sourceMappingURL=wordlists.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/slicedToArray\");","/**\n *  About frgaments...\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\nimport { defineProperties, getBigInt, getNumber, assert, assertPrivate, assertArgument } from \"ethers\";\nimport { id } from \"ethers\";\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(trcToken|address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\nclass TokenString {\n    #offset;\n    #tokens;\n    get offset() { return this.#offset; }\n    get length() { return this.#tokens.length - this.#offset; }\n    constructor(tokens) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n    clone() { return new TokenString(this.#tokens); }\n    reset() { this.#offset = 0; }\n    #subTokenString(from = 0, to = 0) {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({}, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n            return t;\n        }));\n    }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n        this.#offset = top.match + 1;\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\nfunction lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n/**\n *  Each input and output of a [[Fragment]] is an Array of **PAramType**.\n */\nexport class ParamType {\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    name;\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    type;\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    baseType;\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    indexed;\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    components;\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayLength;\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    arrayChildren;\n    /**\n     *  @private\n     */\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                // throw new Error(\"\");\n                components = Object.freeze([]);\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                if (format !== \"sighash\") {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== \"sighash\") {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    /*\n     *  Returns true if %%value%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that the\n     *  [[arrayChildren]] and [[arrayLength]] are non-null.\n     */\n    //static isArray(value: any): value is { arrayChildren: ParamType, arrayLength: number } {\n    //    return value && (value.baseType === \"array\")\n    //}\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    #walkAsync(promises, value, process, setValue) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invalid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        if (this.isTuple()) {\n            const components = this.components;\n            // Convert the object into an array\n            let result;\n            if (Array.isArray(value)) {\n                result = value.slice();\n            }\n            else {\n                if (value == null || typeof (value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n                result = components.map((param) => {\n                    if (!param.name) {\n                        throw new Error(\"cannot use object value with unnamed components\");\n                    }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${param.name}`);\n                    }\n                    return value[param.name];\n                });\n            }\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function () { setValue(await result); })());\n        }\n        else {\n            setValue(result);\n        }\n    }\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS naes by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        this.#walkAsync(promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ParamType.from(lex(obj), allowIndexed);\n        }\n        else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps = null;\n            if (consumeKeywords(obj, setify([\"tuple\"])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n            }\n            else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n            // Check for Array\n            let arrayChildren = null;\n            let arrayLength = null;\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n            let indexed = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) {\n                    throw new Error(\"\");\n                }\n                indexed = true;\n            }\n            const name = (obj.peekType(\"ID\") ? obj.pop().text : \"\");\n            if (obj.length) {\n                throw new Error(\"leftover tokens\");\n            }\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n        const name = obj.name;\n        assertArgument(!name || (typeof (name) === \"string\" && name.match(regexId)), \"invalid name\", \"obj.name\", name);\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type === \"tuple\" || type.startsWith(\"tuple(\" /* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    type;\n    /**\n     *  The inputs for the fragment.\n     */\n    inputs;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            }\n            catch (e) { }\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n            const type = obj.peekKeyword(KwTypes);\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n        }\n        else if (typeof (obj) === \"object\") {\n            // JSON ABI\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\":\n                case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n            assert(false, `unsupported type: ${obj.type}`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value) {\n        return ConstructorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value) {\n        return ErrorFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value) {\n        return EventFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value) {\n        return FunctionFragment.isFragment(value);\n    }\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value) {\n        return StructFragment.isFragment(value);\n    }\n}\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    name;\n    /**\n     *  @private\n     */\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        assertArgument(typeof (name) === \"string\" && name.match(regexId), \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \" : \",\") + \")\";\n}\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n    /**\n     *  The Custom Error selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ErrorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new ErrorFragment(_guard, name, inputs);\n        }\n        return new ErrorFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    anonymous;\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties(this, { anonymous });\n    }\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash() {\n        return id(this.format(\"sighash\"));\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    static getTopicHash(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n    static from(obj) {\n        if (EventFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return EventFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([\"anonymous\"])).has(\"anonymous\");\n            consumeEoi(obj);\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n        return new EventFragment(_guard, obj.name, obj.inputs ? obj.inputs.map((p) => ParamType.from(p, true)) : [], !!obj.anonymous);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n    payable;\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties(this, { payable, gas });\n    }\n    format(format) {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        result.push((this.payable) ? \"payable\" : \"nonpayable\");\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    static from(obj) {\n        if (ConstructorFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ConstructorFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([\"constructor\"]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, setify([\"payable\"])).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n        return new ConstructorFragment(_guard, \"constructor\", obj.inputs ? obj.inputs.map(ParamType.from) : [], !!obj.payable, (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    constructor(guard, inputs, payable) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties(this, { payable });\n    }\n    format(format) {\n        const type = ((this.inputs.length === 0) ? \"receive\" : \"fallback\");\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\" : \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n        return `${type}()${this.payable ? \" payable\" : \"\"}`;\n    }\n    static from(obj) {\n        if (FallbackFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FallbackFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n            const topIsValid = obj.peekKeyword(setify([\"fallback\", \"receive\"]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n            const type = obj.popKeyword(setify([\"fallback\", \"receive\"]));\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([\"payable\"]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [], true);\n            }\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\", \"invalid fallback inputs\", \"obj.inputs\", inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            else {\n                inputs = [ParamType.from(\"bytes\")];\n            }\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\", \"invalid fallback outputs\", \"obj.outputs\", outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n            consumeEoi(obj);\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [], true);\n        }\n        if (obj.type === \"fallback\") {\n            const inputs = [ParamType.from(\"bytes\")];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    constant;\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    outputs;\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    stateMutability;\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    payable;\n    /**\n     *  The amount of gas to send when calling this function\n     */\n    gas;\n    /**\n     *  @private\n     */\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    /**\n     *  The Function selector.\n     */\n    get selector() {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n    format(format) {\n        if (format == null) {\n            format = \"sighash\";\n        }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== \"sighash\") {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    static getSelector(name, params) {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [], null);\n        return fragment.selector;\n    }\n    static from(obj) {\n        if (FunctionFragment.isFragment(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return FunctionFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n            let outputs = [];\n            if (consumeKeywords(obj, setify([\"returns\"])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n        // @TODO: verifyState for stateMutability\n        return new FunctionFragment(_guard, obj.name, obj.stateMutability, obj.inputs ? obj.inputs.map(ParamType.from) : [], obj.outputs ? obj.outputs.map(ParamType.from) : [], (obj.gas != null) ? obj.gas : null);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard, name, inputs) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            return StructFragment.from(lex(obj));\n        }\n        else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from) : []);\n    }\n    static isFragment(value) {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n//# sourceMappingURL=fragments.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/readOnlyError\");","/**\n *  About Interface\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\nimport { keccak256 } from \"ethers\";\nimport { id } from \"ethers\";\nimport { concat, dataSlice, getBigInt, getBytes, getBytesCopy, hexlify, zeroPadValue, isHexString, defineProperties, assertArgument, toBeHex, assert } from \"ethers\";\nimport { AbiCoder } from \"ethers\";\nimport { checkResultErrors, Result } from \"ethers\";\nimport { Typed } from \"ethers\";\nimport { ParamType, Fragment, ConstructorFragment, ErrorFragment, EventFragment, FunctionFragment } from \"./fragments\";\nexport { checkResultErrors, Result };\nexport class LogDescription {\n    fragment;\n    name;\n    signature;\n    topic;\n    args;\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\nexport class TransactionDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    value;\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\nexport class ErrorDescription {\n    fragment;\n    name;\n    args;\n    signature;\n    selector;\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\nexport class Indexed {\n    hash;\n    _isIndexed;\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n};\nconst BuiltinErrors = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [\"string\"],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [\"uint256\"],\n        reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        }\n    }\n};\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    fragments;\n    /**\n     *  The Contract constructor.\n     */\n    deploy;\n    /**\n     *  The Fallback method, if any.\n     */\n    fallback;\n    /**\n     *  If receiving ether is supported.\n     */\n    receive;\n    #errors;\n    #events;\n    #functions;\n    //    #structs: Map<string, StructFragment>;\n    #abiCoder;\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n        //        this.#structs = new Map();\n        const frags = [];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            }\n            catch (error) {\n                console.log(\"EE\", error);\n            }\n        }\n        defineProperties(this, {\n            fragments: Object.freeze(frags)\n        });\n        let fallback = null;\n        let receive = false;\n        this.#abiCoder = this.getAbiCoder();\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    }\n                    else {\n                        assertArgument(!fallback || fragment.payable !== fallback.payable, \"conflicting fallback fragments\", `fragments[${index}]`, fragment);\n                        fallback = fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n                default:\n                    return;\n            }\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n        defineProperties(this, { fallback, receive });\n    }\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal) {\n        const format = (minimal ? \"minimal\" : \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson() {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder() {\n        return AbiCoder.defaultAbiCoder();\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key, values, forceUnique) {\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#functions) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1] : null;\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") {\n                                continue;\n                            }\n                            matching.splice(i, 1);\n                            break;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof (lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key) {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key, values) {\n        return this.#getFunction(key, values || null, true);\n    }\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback) {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#functions.get(name)), i);\n        }\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key, values, forceUnique) {\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#events) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) {\n                            continue;\n                        }\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (matching.length === 0) {\n                return null;\n            }\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${matchStr})`, \"key\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key) {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n        return fragment.name;\n    }\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key, values) {\n        return this.#getEvent(key, values || null, true);\n    }\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback) {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#events.get(name)), i);\n        }\n    }\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) {\n                    return fragment;\n                }\n            }\n            return null;\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of this.#errors) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                if (key === \"Error\") {\n                    return ErrorFragment.from(\"error Error(string)\");\n                }\n                if (key === \"Panic\") {\n                    return ErrorFragment.from(\"error Panic(uint256)\");\n                }\n                return null;\n            }\n            else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${matchStr})`, \"name\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format();\n        if (key === \"Error(string)\") {\n            return ErrorFragment.from(\"error Error(string)\");\n        }\n        if (key === \"Panic(uint256)\") {\n            return ErrorFragment.from(\"error Panic(uint256)\");\n        }\n        const result = this.#errors.get(key);\n        if (result) {\n            return result;\n        }\n        return null;\n    }\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback) {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback((this.#errors.get(name)), i);\n        }\n    }\n    // Get the 4-byte selector used by Solidity to identify a function\n    /*\ngetSelector(fragment: ErrorFragment | FunctionFragment): string {\n    if (typeof(fragment) === \"string\") {\n        const matches: Array<Fragment> = [ ];\n\n        try { matches.push(this.getFunction(fragment)); } catch (error) { }\n        try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n        if (matches.length === 0) {\n            logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n        } else if (matches.length > 1) {\n            logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n        }\n\n        fragment = matches[0];\n    }\n\n    return dataSlice(id(fragment.format()), 0, 4);\n}\n    */\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n    _decodeParams(params, data) {\n        return this.#abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this.#abiCoder.encode(params, values);\n    }\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match error ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector, `data signature does not match function ${fragment.name}.`, \"data\", data);\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        let message = \"invalid length for result data\";\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n    makeError(_data, tx) {\n        const data = getBytes(_data, \"data\");\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${error.reason}`;\n                }\n                catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`;\n                }\n            }\n        }\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n        return error;\n    }\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || []));\n    }\n    /*\n        spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n            const promises: Array<Promise<>> = [ ];\n            const process = function(type: ParamType, value: any): any {\n                if (type.baseType === \"array\") {\n                    return descend(type.child\n                }\n                if (type. === \"address\") {\n                }\n            };\n    \n            const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                \n            };\n    \n            const result: Array<any> = [ ];\n            values.forEach((value, index) => {\n                if (value == null) {\n                    topics.push(null);\n                } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                    logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                } else if (Array.isArray(value)) {\n                    topics.push(value.map((value) => encodeTopic(param, value)));\n                } else {\n                    topics.push(encodeTopic(param, value));\n                }\n            });\n        }\n    */\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${fragment.format()}`, \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length });\n        const topics = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            if (param.type === \"bool\" && typeof (value) === \"boolean\") {\n                value = (value ? \"0x01\" : \"0x00\");\n            }\n            if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this.#abiCoder.encode([\"address\"], [value]);\n            }\n            return zeroPadValue(hexlify(value), 32);\n            //@TOOD should probably be return toHex(value, 32)\n        };\n        values.forEach((value, index) => {\n            const param = fragment.inputs[index];\n            if (!param.indexed) {\n                assertArgument(value == null, \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n        assertArgument(values.length === fragment.inputs.length, \"event arguments/values mismatch\", \"values\", values);\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this.#abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this.#abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment, data, topics) {\n        if (typeof (fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic, \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx) {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value : 0, \"tx.value\");\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n    parseCallResult(data) {\n        throw new Error(\"@TODO\");\n    }\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof (value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (value.format) === \"function\") {\n            return new Interface(value.format(\"json\"));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n//# sourceMappingURL=interface.js.map","import {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n    Signature,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    Wallet as ethersWallet,\n    HDNodeWallet as ethersHDNodeWallet,\n    getBytes,\n    computeHmac,\n} from 'ethers';\n\nimport { Interface } from './interface.js';\n\nconst splitSignature = (sigBytes) => Signature.from(sigBytes);\nconst joinSignature = (splitSig) => Signature.from(splitSig).serialized;\nconst arrayify = (value) => getBytes(value);\nconst FormatTypes = {\n    sighash: 'sighash',\n    minimal: 'minimal',\n    full: 'full',\n    json: 'json',\n};\nconst isValidMnemonic = Mnemonic.isValidMnemonic;\n\ncomputeHmac.register((algorithm, key, data) => {\n    return computeHmac._(algorithm, Buffer.from(key), Buffer.from(data));\n});\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    Signature,\n    AbiCoder,\n    Interface,\n    FormatTypes,\n    splitSignature,\n    joinSignature,\n    arrayify,\n    ethersWallet,\n    ethersHDNodeWallet,\n    concat,\n    id,\n    Mnemonic,\n    Wordlist,\n    wordlists,\n    isValidMnemonic,\n};\n","import TronWeb from \"../index\";\nimport { id, keccak256, concat, defineProperties, getBigInt, getBytes, hexlify, mask, toTwos, toBeHex, zeroPadValue, assertArgument } from \"ethers\";\nimport {  ADDRESS_PREFIX_REGEX } from './address';\n\nfunction getAddress(address) {\n    return TronWeb.address.toHex(address).replace(ADDRESS_PREFIX_REGEX, '0x');\n};\nfunction getTronAddress(address) {\n    return TronWeb.address.toHex(address);\n};\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        assertArgument(typeof (value) === \"string\", `invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        return getBigInt(value, \"domain.chainId\");\n    },\n    verifyingContract: function (value) {\n        try {\n            return getTronAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && (match[2] == null || match[2] === String(width)), \"invalid numeric width\", \"type\", type);\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = getBigInt(_value, \"value\");\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${type}`, \"value\", value);\n                if (!signed) return toBeHex(value, 32);\n                return toBeHex(toTwos(value, 256), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n            return function (value) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${type}`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n    \tcase \"trcToken\": return getBaseEncoder('uint256');\n        case \"address\": return function (value) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    primaryType;\n    #types;\n    get types() {\n        return JSON.parse(this.#types);\n    }\n    #fullTypes;\n    #encoderCache;\n    constructor(types) {\n        this.#types = JSON.stringify(types);\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = (field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                assertArgument(baseType !== name, `circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                assertArgument(parents.has(baseType), `unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            assertArgument(!found.has(type), `circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    getEncoder(type) {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n    #getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            return (value) => {\n                assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(concat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type));\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            };\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            assertArgument(!match[3] || parseInt(match[3]) === value.length, `array length mismatch; expected length ${parseInt(match[3])}`, \"value\", value);\n            return value.map((v) => this._visit(match[1], v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        assertArgument(false, `unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            if (domain[name] == null) {\n                continue;\n            }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = Object.assign({}, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        typesWithDomain.EIP712Domain = domainTypes;\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n                switch (type) {\n\t\t            case \"trcToken\":\n                        return getBigInt(value).toString();\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof (value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ethereum-cryptography/secp256k1.js\");","import {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {arrayify, keccak256, recoverAddress, sha256, Signature, SigningKey} from './ethersUtils';\nimport {TypedDataEncoder} from './typedData';\nimport { secp256k1 as secp } from \"ethereum-cryptography/secp256k1.js\";\n\nfunction normalizePrivateKeyBytes(priKeyBytes) {\n    return hexStr2byteArray(byteArray2hexStr(priKeyBytes).padStart(64, '0'));\n}\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature))\n            transaction.signature.push(signature);\n    } else\n        transaction.signature = [signature];\n    return transaction;\n}\n\nexport function ecRecover(signedData, signature) {\n    signedData = '0x' + signedData.replace(/^0x/, '');\n    signature = '0x' + signature.replace(/^0x/, '');\n\n    const recovered = recoverAddress(arrayify(signedData), Signature.from(signature));\n    const tronAddress = ADDRESS_PREFIX + recovered.substring(2);\n    return tronAddress;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function _signTypedData(domain, types, value, privateKey) {\n    const key = `0x${privateKey.replace(/^0x/, '')}`;\n    const signingKey = new SigningKey(key);\n\n    const messageDigest = TypedDataEncoder.hash(domain, types, value);\n    const signature = signingKey.sign(messageDigest);\n    const signatureHex = [\n        '0x',\n        signature.r.substring(2),\n        signature.s.substring(2),\n        Number(signature.v).toString(16),\n    ].join('');\n    return signatureHex;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const priKey = secp.utils.randomPrivateKey();\n    let priKeyHex = byteArray2hexStr(priKey);\n\n    priKeyHex = priKeyHex.padStart(64, '0');\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(new Uint8Array(pubBytes)).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n\n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const pubkey = secp.ProjectivePoint.fromPrivateKey(new Uint8Array(normalizePrivateKeyBytes(priKeyBytes)));\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString(16).padStart(64, '0');\n    let yHex = y.toString(16).padStart(64, '0');\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const signature = secp.sign(byteArray2hexStr(hashBytes), byteArray2hexStr(priKeyBytes))\n\n    const r = signature.r.toString(16);\n    const s = signature.s.toString(16);\n    const v = signature.recovery + 27;\n\n    return r.padStart(64, '0') + s.padStart(64, '0') + byte2hexStr(v);\n}\n\nexport function SHA256(msgBytes) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '')\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey, strict = false) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey, strict);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey,\n    pkToAddress,\n} from './crypto';\nimport {ethersHDNodeWallet, Mnemonic} from './ethersUtils'\nimport {TRON_BIP39_PATH_INDEX_0} from './address'\nimport utils from './index';\n\nconst INVALID_TRON_PATH_ERROR_MSG = 'Invalid tron path provided';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n\nexport function generateRandom(options) {\n    if(!utils.isObject(options)) { options = {}; }\n    if(!options.path) {\n        options.path = TRON_BIP39_PATH_INDEX_0;\n    }\n    if(!String(options.path).match(/^m\\/44\\'\\/195\\'/)) {\n        throw new Error(INVALID_TRON_PATH_ERROR_MSG);\n    }\n\n    const account = ethersHDNodeWallet.createRandom(options.password, options.path, options.wordlist);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, ''))\n    }\n    \n    return result;\n}\n\nexport function generateAccountWithMnemonic(mnemonic, path, wordlist = null) {\n    if(!path) {\n        path = TRON_BIP39_PATH_INDEX_0;\n    }\n    if(!String(path).match(/^m\\/44\\'\\/195\\'/)) {\n        throw new Error(INVALID_TRON_PATH_ERROR_MSG);\n    }\n    const account =  ethersHDNodeWallet.fromMnemonic(Mnemonic.fromPhrase(mnemonic, null, wordlist), path);\n\n    const result = {\n        mnemonic: account.mnemonic,\n        privateKey: account.privateKey,\n        publicKey: account.signingKey.publicKey,\n        address: pkToAddress(account.privateKey.replace(/^0x/, ''))\n    }\n\n    return result;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@ethersproject/abi\");","import { AbiCoder } from '@ethersproject/abi';\nimport TronWeb from 'index';\nimport {ADDRESS_PREFIX, ADDRESS_PREFIX_REGEX} from 'utils/address';\n\nconst abiCoder = new AbiCoder();\n\nfunction _isArray(_array) {\n    return Array.isArray(_array);\n}\n\nfunction _addressToHex(value) {\n    return TronWeb.address.toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n}\n\nfunction deepCopy(target) {\n    if (\n        Object.prototype.toString.call(target) !== '[object Object]' &&\n        Object.prototype.toString.call(target) !== '[object Array]'\n    ) {\n        return target;\n    }\n    const newTarget = _isArray(target) ? [] : {};\n\n    Object.keys(target).forEach(key =>\n        newTarget[key] = target[key] instanceof Object && !target[key]._isBigNumber ? deepCopy(target[key]) : target[key]\n    );\n\n    return newTarget;\n}\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n    if (!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if (ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if (output.replace(/^0x/, '').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    // workaround for unsupported trcToken type\n    types = types.map(type => {\n        if (/trcToken/.test(type)) {\n            type = type.replace(/trcToken/, 'uint256')\n        }\n        return type\n    })\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if (types[index] == 'address')\n            arg = ADDRESS_PREFIX + arg.substr(2).toLowerCase();\n\n        if (names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for (let i = 0; i < types.length; i++) {\n        if (types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(ADDRESS_PREFIX_REGEX, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n\nfunction extractSize (type) {\n  const size = type.match(/([a-zA-Z0-9])(\\[.*\\])/);\n  return size ? size[2] : '';\n}\n\nfunction extractArrayDim (type) {\n  const size = extractSize(type)\n  return (size.match(/\\]\\[/g) || []).length + 1;\n}\n\nexport function encodeParamsV2ByABI(funABI, args) {\n    const types = [];\n\n    const buildFullTypeDefinition = (typeDef) => {\n      if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n        const innerTypes = typeDef.components.map((innerType) => { return buildFullTypeDefinition(innerType) });\n        return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}`;\n      }\n\n      if (/trcToken/.test(typeDef.type))\n        return typeDef.type.replace(/trcToken/, 'uint256');\n\n      return typeDef.type;\n    }\n\n    const convertTypes = (types) => {\n      for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        if (/trcToken/.test(type))\n          types[i] = type.replace(/trcToken/, 'uint256');\n      }\n    }\n\n    const convertAddresses = addrArr => {\n      if (Array.isArray(addrArr)) {\n        addrArr.forEach((addrs, i) => {\n          addrArr[i] = convertAddresses(addrs);\n        });\n        return addrArr;\n      } else {\n        return _addressToHex(addrArr)\n      }\n    };\n\n    const mapTuple = (components, args, dimension) => {\n      if (dimension > 1) {\n        if (args.length) {\n          args.forEach(arg => {\n            mapTuple(components, arg, dimension - 1);\n          });\n        }\n      } else {\n        if (args.length && dimension) {\n          args.forEach(arg => {\n            encodeArgs(components, arg);\n          });\n        }\n      }\n    };\n\n    const encodeArgs = (inputs = [], args) => {\n      if (inputs.length)\n        inputs.forEach((input, i) => {\n          const type = input.type;\n\n          if (args[i])\n            if (type === 'address') args[i] = _addressToHex(args[i]);\n            else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n              convertAddresses(args[i])\n            else if (type.indexOf('tuple') === 0)\n              if (extractSize(type)) {\n                const dimension = extractArrayDim(type);\n                mapTuple(input.components, args[i], dimension);\n              } else encodeArgs(input.components, args[i]);\n        });\n    };\n\n    if (funABI.inputs && funABI.inputs.length) {\n      for (let i = 0; i < funABI.inputs.length; i++) {\n        const type = funABI.inputs[i].type;\n        // \"false\" will be converting to `false` and \"true\" will be working\n        // fine as abiCoder assume anything in quotes as `true`\n        if (type === 'bool' && args[i] === 'false') {\n          args[i] = false;\n        }\n        types.push(type.indexOf('tuple') === 0 ? buildFullTypeDefinition(funABI.inputs[i]) : type);\n        if (args.length < types.length) {\n          args.push('');\n        }\n      }\n    }\n\n    encodeArgs(funABI.inputs, args);\n    convertTypes(types);\n\n    return abiCoder.encode(types, args);\n}\n\nexport function decodeParamsV2ByABI(funABI, data) {\n  const convertTypeNames = (types) => {\n    for (let i = 0; i < types.length; i++) {\n      const type = types[i]\n      if (/^trcToken/.test(type))\n        types[i] = type.replace(/^trcToken/, 'uint256')\n    }\n  }\n\n  const convertAddresses = addrArr => {\n    if (Array.isArray(addrArr)) {\n      addrArr.forEach((addrs, i) => {\n        addrArr[i] = convertAddresses(addrs);\n      });\n      return addrArr;\n    } else {\n      return TronWeb.address.toHex(addrArr)\n    }\n  };\n\n  const mapTuple = (components, args, dimension) => {\n    if (dimension > 1) {\n      if (args.length) {\n        args.forEach(arg => {\n          mapTuple(components, arg, dimension - 1);\n        });\n      }\n    } else {\n      if (args.length && dimension) {\n        args.forEach(arg => {\n          decodeResult(components, arg);\n        });\n      }\n    }\n  };\n\n  const buildFullTypeNameDefinition = (typeDef) => {\n    const name = typeDef.name ? ` ${typeDef.name}` : '';\n    if (typeDef && typeDef.type.indexOf('tuple') === 0 && typeDef.components) {\n      const innerTypes = typeDef.components.map((innerType) => { return buildFullTypeNameDefinition(innerType) });\n      return `tuple(${innerTypes.join(',')})${extractSize(typeDef.type)}${name}`;\n    }\n    if (/trcToken/.test(typeDef.type))\n      return typeDef.type.replace(/trcToken/, 'uint256') + name;\n\n    return typeDef.type + name;\n  }\n\n  const decodeResult = (outputs = [], result) => {\n    if (outputs.length)\n      outputs.forEach((output, i) => {\n        const {type, name} = output;\n\n        if (result[i])\n          if (type === 'address') {\n            result[i] = TronWeb.address.toHex(result[i]);\n            if(name) result[name] = TronWeb.address.toHex(result[name]);\n          }\n          else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[') {\n            convertAddresses(result[i])\n            if(name) convertAddresses(result[name])\n          }\n          else if (type.indexOf('tuple') === 0) {\n            if (extractSize(type)) {\n              const dimension = extractArrayDim(type);\n              mapTuple(output.components, result[i], dimension);\n            } else decodeResult(output.components, result[i]);\n\n            if(name) result[name] = result[i];\n          }\n      });\n  };\n\n  // Only decode if there supposed to be fields\n  if (funABI.outputs && funABI.outputs.length > 0) {\n\n      let outputTypes = [];\n      for (let i = 0; i < funABI.outputs.length; i++) {\n        const type = funABI.outputs[i].type;\n        const name = funABI.outputs[i].name ? ` ${funABI.outputs[i].name}` : '';\n        outputTypes.push(type.indexOf('tuple') === 0 ? buildFullTypeNameDefinition(funABI.outputs[i]) : type + name);\n      }\n      convertTypeNames(outputTypes);\n\n      if (!data || !data.length) data = new Uint8Array(32 * funABI.outputs.length); // ensuring the data is at least filled by 0 cause `AbiCoder` throws if there's not engouh data\n      // decode data\n      const decodeRes = abiCoder.decode(outputTypes, data);\n      const decodeResCopy = deepCopy(decodeRes);\n      decodeResult(funABI.outputs, decodeResCopy);\n\n      return decodeResCopy\n  }\n  return [];\n}","import { keccak256, toUtf8Bytes, concat, recoverAddress, SigningKey, joinSignature } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\nimport { getBase58CheckAddress } from 'utils/crypto';\nimport { hexStr2byteArray } from 'utils/code';\n\nexport const TRON_MESSAGE_PREFIX = \"\\x19TRON Signed Message:\\n\";\n\nexport function hashMessage(message) {\n    if (typeof(message) === \"string\") { \n        message = toUtf8Bytes(message);\n    }\n\n    if (Array.isArray(message)) {\n        message = new Uint8Array(message);\n    }\n\n    return keccak256(concat([\n        toUtf8Bytes(TRON_MESSAGE_PREFIX),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\nexport function signMessage(message, privateKey) {\n    if(!privateKey.match(/^0x/)) {\n        privateKey =  '0x' + privateKey;\n    }\n    \n    const signingKey = new SigningKey(privateKey);\n    const messageDigest = hashMessage(message);\n    const signature = signingKey.sign(messageDigest);\n    \n    return joinSignature(signature)\n}\n\nexport function verifyMessage(message, signature) {\n    if(!signature.match(/^0x/)) {\n      signature =  '0x' + signature;\n    }\n    const recovered = recoverAddress(hashMessage(message), signature);\n    const base58Address = getBase58CheckAddress(hexStr2byteArray(recovered.replace(/^0x/, ADDRESS_PREFIX)));\n    \n    return base58Address;\n}\n","const google_protobuf_any_pb = require('@tronweb3/google-protobuf/google/protobuf/any_pb');\n\nconst { Transaction, Permission, Key } = require('../protocol/core/Tron_pb');\n\nconst {\n    TransferContract,\n    FreezeBalanceContract,\n    UnfreezeBalanceContract,\n    WithdrawBalanceContract,\n    FreezeBalanceV2Contract,\n    UnfreezeBalanceV2Contract,\n    WithdrawExpireUnfreezeContract,\n    DelegateResourceContract,\n    UnDelegateResourceContract,\n} = require('../protocol/core/contract/balance_contract_pb');\nconst {\n    TransferAssetContract,\n    ParticipateAssetIssueContract,\n    AssetIssueContract,\n    UpdateAssetContract\n} = require('../protocol/core/contract/asset_issue_contract_pb');\n\nconst {\n    TriggerSmartContract,\n    ClearABIContract,\n    UpdateEnergyLimitContract,\n    UpdateSettingContract,\n    CreateSmartContract,\n    SmartContract,\n} = require('../protocol/core/contract/smart_contract_pb');\n\nconst { ResourceCode } = require('../protocol/core/contract/common_pb');\n\nconst {\n    WitnessCreateContract,\n    VoteWitnessContract,\n} = require('../protocol/core/contract/witness_contract_pb');\n\nconst {\n    UpdateBrokerageContract,\n} = require('../protocol/core/contract/storage_contract_pb');\n\nconst {\n    AccountCreateContract,\n    AccountUpdateContract,\n    SetAccountIdContract,\n    AccountPermissionUpdateContract,\n} = require('../protocol/core/contract/account_contract_pb');\n\nconst {\n    ProposalCreateContract,\n    ProposalDeleteContract,\n    ProposalApproveContract,\n} = require('../protocol/core/contract/proposal_contract_pb');\n\nconst {\n    ExchangeCreateContract,\n    ExchangeInjectContract,\n    ExchangeWithdrawContract,\n    ExchangeTransactionContract,\n} = require('../protocol/core/contract/exchange_contract_pb');\n\nimport { byteArray2hexStr } from './bytes';\nimport { sha256, keccak256 } from './ethersUtils';\nimport TronWeb from '../index';\n\nconst fromHexString = (hexString) => {\n    if (!hexString || hexString.length === 0) return new Uint8Array([]);\n    return new Uint8Array(\n        TronWeb.address.toHex(hexString).match(/.{1,2}/g).map((byte) => parseInt(byte, 16))\n    );\n};\n    \n\nconst sha3 = (string, prefix = true) => {\n    return (\n        (prefix ? '0x' : '') +\n        keccak256(Buffer.from(string, 'utf-8')).toString().substring(2)\n    );\n};\n\nconst buildCommonTransaction = (\n    message,\n    contractType,\n    typeName,\n    permissionId\n) => {\n    let anyValue = new google_protobuf_any_pb.Any();\n    anyValue.pack(message.serializeBinary(), 'protocol.' + typeName);\n    let contract = new Transaction.Contract();\n    contract.setType(contractType);\n    contract.setParameter(anyValue);\n    if (permissionId) {\n        contract.setPermissionId(permissionId);\n    }\n    let raw = new Transaction.raw();\n    raw.addContract(contract);\n    let transaction = new Transaction();\n    transaction.setRawData(raw);\n    return transaction;\n};\n\n// wallet/createtransaction for sendTrx\nconst buildTransferContract = (value, options) => {\n    const { to_address, owner_address, amount } = value;\n    let transferContract = new TransferContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERCONTRACT,\n        'TransferContract',\n        options.Permission_id\n    );\n};\n\n// wallet/transferasset for sendToken\nconst buildTransferAssetContract = (value, options) => {\n    const { to_address, owner_address, amount, asset_name } = value;\n    let transferContract = new TransferAssetContract();\n    transferContract.setToAddress(fromHexString(to_address));\n    transferContract.setOwnerAddress(fromHexString(owner_address));\n    transferContract.setAssetName(fromHexString(asset_name.replace(/^0x/, '')));\n    transferContract.setAmount(amount);\n    return buildCommonTransaction(\n        transferContract,\n        Transaction.Contract.ContractType.TRANSFERASSETCONTRACT,\n        'TransferAssetContract',\n        options.Permission_id\n    );\n};\n\n// wallet/participateassetissue for purchaseToken\nconst buildParticipateAssetIssueContract = (value, options) => {\n    let pbObj = new ParticipateAssetIssueContract();\n    pbObj.setToAddress(fromHexString(value.to_address));\n    pbObj.setOwnerAddress(fromHexString(value.owner_address));\n    pbObj.setAssetName(fromHexString(value.asset_name.replace(/^0x/, '')));\n    pbObj.setAmount(value.amount);\n\n    return buildCommonTransaction(\n        pbObj,\n        Transaction.Contract.ContractType.PARTICIPATEASSETISSUECONTRACT,\n        'ParticipateAssetIssueContract',\n        options.Permission_id\n    );\n};\n\nconst buildTriggerSmartContract = (value, options) => {\n    let triggerSmartContract = new TriggerSmartContract();\n    const {\n        owner_address,\n        contract_address,\n        parameter = '',\n        function_selector,\n        call_value,\n        call_token_value,\n        token_id,\n        data,\n    } = value;\n    triggerSmartContract.setOwnerAddress(fromHexString(owner_address));\n    triggerSmartContract.setContractAddress(fromHexString(contract_address));\n    triggerSmartContract.setCallValue(call_value);\n    if (data) {\n        triggerSmartContract.setData(fromHexString(data));\n    } else if (function_selector) {\n        const contractData = sha3(function_selector).substring(2, 10) + parameter;\n        triggerSmartContract.setData(fromHexString(contractData));\n    }\n    \n    if (token_id) {\n        triggerSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        triggerSmartContract.setCallTokenValue(call_token_value);\n    }\n\n    return buildCommonTransaction(\n        triggerSmartContract,\n        Transaction.Contract.ContractType.TRIGGERSMARTCONTRACT,\n        'TriggerSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceContract = (value, options) => {\n    let freezeBalanceContract = new FreezeBalanceContract();\n    const {\n        owner_address,\n        frozen_balance,\n        frozen_duration,\n        resource,\n        receiver_address,\n    } = value;\n    freezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceContract.setFrozenBalance(frozen_balance);\n    freezeBalanceContract.setFrozenDuration(frozen_duration);\n    if (resource) {\n        freezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        freezeBalanceContract.setReceiverAddress(\n            fromHexString(receiver_address)\n        );\n    }\n\n    return buildCommonTransaction(\n        freezeBalanceContract,\n        Transaction.Contract.ContractType.FREEZEBALANCECONTRACT,\n        'FreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildUnfreezeBalanceContract = (value, options) => {\n    let unfreezeBalanceContract = new UnfreezeBalanceContract();\n    const { owner_address, resource, receiver_address } = value;\n    unfreezeBalanceContract.setOwnerAddress(fromHexString(owner_address));\n    if (resource) {\n        unfreezeBalanceContract.setResource(ResourceCode[resource]);\n    }\n    if (receiver_address) {\n        unfreezeBalanceContract.setReceiverAddress(\n            fromHexString(receiver_address)\n        );\n    }\n\n    return buildCommonTransaction(\n        unfreezeBalanceContract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCECONTRACT,\n        'UnfreezeBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildWithdrawBalanceContract = (value, options) => {\n    let withdrawbalanceContract = new WithdrawBalanceContract();\n    const { owner_address } = value;\n    withdrawbalanceContract.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawbalanceContract,\n        Transaction.Contract.ContractType.WITHDRAWBALANCECONTRACT,\n        'WithdrawBalanceContract',\n        options.Permission_id\n    );\n};\n\nconst buildFreezeBalanceV2Contract = (value, options) => {\n    const freezeBalanceV2Contract = new FreezeBalanceV2Contract();\n    const {\n        owner_address,\n        frozen_balance,\n        resource,\n    } = value;\n    freezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    freezeBalanceV2Contract.setFrozenBalance(frozen_balance);\n    freezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        freezeBalanceV2Contract,\n        Transaction.Contract.ContractType.FREEZEBALANCEV2CONTRACT,\n        'FreezeBalanceV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildCancelFreezeBalanceV2Contract = (value, options) => {\n    const withdrawExpireUnfreeze = new WithdrawExpireUnfreezeContract();\n    const { owner_address } = value;\n    withdrawExpireUnfreeze.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawExpireUnfreeze,\n        Transaction.Contract.ContractType.CANCELALLUNFREEZEV2CONTRACT,\n        'CancelAllUnfreezeV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildUnfreezeBalanceV2Contract = (value, options) => {\n    const unfreezeBalanceV2Contract = new UnfreezeBalanceV2Contract();\n    const {\n        owner_address,\n        unfreeze_balance,\n        resource,\n    } = value;\n    unfreezeBalanceV2Contract.setOwnerAddress(fromHexString(owner_address));\n    unfreezeBalanceV2Contract.setUnfreezeBalance(unfreeze_balance);\n    unfreezeBalanceV2Contract.setResource(ResourceCode[resource]);\n\n    return buildCommonTransaction(\n        unfreezeBalanceV2Contract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCEV2CONTRACT,\n        'UnfreezeBalanceV2Contract',\n        options.Permission_id,\n    );\n};\n\nconst buildDelegateResourceContract = (value, options) => {\n    const delegateResourceContract = new DelegateResourceContract();\n    const {\n        owner_address,\n        receiver_address,\n        balance,\n        resource,\n        lock = false,\n        lock_period,\n    } = value;\n    delegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    delegateResourceContract.setBalance(balance);\n    delegateResourceContract.setResource(ResourceCode[resource]);\n    delegateResourceContract.setLock(lock);\n    delegateResourceContract.setLockPeriod(lock_period);\n    delegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        delegateResourceContract,\n        Transaction.Contract.ContractType.DELEGATERESOURCECONTRACT,\n        'DelegateResourceContract',\n        options.Permission_id,\n    );\n};\n\nconst buildUnDelegateResourceContract = (value, options) => {\n    const unDelegateResourceContract = new UnDelegateResourceContract();\n    const {\n        owner_address,\n        receiver_address,\n        balance,\n        resource,\n    } = value;\n    unDelegateResourceContract.setOwnerAddress(fromHexString(owner_address));\n    unDelegateResourceContract.setBalance(balance);\n    unDelegateResourceContract.setResource(ResourceCode[resource]);\n    unDelegateResourceContract.setReceiverAddress(fromHexString(receiver_address));\n\n    return buildCommonTransaction(\n        unDelegateResourceContract,\n        Transaction.Contract.ContractType.UNDELEGATERESOURCECONTRACT,\n        'UnDelegateResourceContract',\n        options.Permission_id,\n    );\n};\n\nconst buildWithdrawExpireUnfreezeContract = (value, options) => {\n    const withdrawExpireUnfreeze = new WithdrawExpireUnfreezeContract();\n    const { owner_address } = value;\n    withdrawExpireUnfreeze.setOwnerAddress(fromHexString(owner_address));\n\n    return buildCommonTransaction(\n        withdrawExpireUnfreeze,\n        Transaction.Contract.ContractType.WITHDRAWEXPIREUNFREEZECONTRACT,\n        'WithdrawExpireUnfreezeContract',\n        options.Permission_id,\n    );\n};\n\n// applyForSR\nconst buildCreateWitness = (value, options) => {\n    const createWitnessContract = new WitnessCreateContract();\n    const { owner_address, url } = value;\n    createWitnessContract.setOwnerAddress(fromHexString(owner_address));\n    createWitnessContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    return buildCommonTransaction(\n        createWitnessContract,\n        Transaction.Contract.ContractType.WITNESSCREATECONTRACT,\n        'WitnessCreateContract',\n        options.Permission_id\n    );\n};\n\n// vote\nconst buildVoteWitnessAccount = (value, options) => {\n    let voteWitnessContract = new VoteWitnessContract();\n    const { owner_address, votes } = value;\n    voteWitnessContract.setOwnerAddress(fromHexString(owner_address));\n\n    votes.forEach((voteItem) => {\n        let vote = new VoteWitnessContract.Vote();\n        const { vote_address, vote_count } = voteItem;\n        vote.setVoteAddress(fromHexString(vote_address));\n        let numberOfVotes = parseInt(vote_count);\n        vote.setVoteCount(numberOfVotes);\n        voteWitnessContract.addVotes(vote);\n    });\n\n    return buildCommonTransaction(\n        voteWitnessContract,\n        Transaction.Contract.ContractType.VOTEWITNESSCONTRACT,\n        'VoteWitnessContract',\n        options.Permission_id\n    );\n};\n\nconst buildCreateSmartContract = (value, options) => {\n    let params = value?.new_contract ?\n        {\n            ...{\n                owner_address: value.owner_address,\n                call_token_value: value.call_token_value,\n                token_id: value.token_id,\n            },\n            ...value.new_contract,\n        }\n        : value;\n    let {\n        owner_address,\n        consume_user_resource_percent,\n        origin_energy_limit,\n        abi,\n        bytecode = '',\n        name: contracName,\n        parameter = '',\n        call_value,\n        call_token_value,\n        token_id,\n        origin_address,\n    } = params;\n\n    let createSmartContract = new CreateSmartContract();\n    createSmartContract.setOwnerAddress(fromHexString(owner_address));\n    if (token_id) {\n        createSmartContract.setTokenId(token_id);\n    }\n    if (call_token_value) {\n        createSmartContract.setCallTokenValue(call_token_value);\n    }\n    const smartContractBuilder = new SmartContract();\n\n    if (abi) {\n        let abiJson;\n        if (typeof abi === 'string') {\n            abiJson = JSON.parse(abi);\n        } else {\n            abiJson = abi?.entrys || []; // abi could be an empty object if origin abi is `[]`;\n        }\n        const abiBuilder = new SmartContract.ABI();\n\n        const buildEntryParam = (data) => {\n            const param = new SmartContract.ABI.Entry.Param();\n            const { indexed, name, type } = data;\n            if (indexed === true) {\n                param.setIndexed(true);\n            }\n            param.setName(name);\n            param.setType(type);\n            return param;\n        };\n        const entryBuilders = abiJson.map((entry) => {\n            const {\n                anonymous,\n                constant,\n                name,\n                inputs,\n                outputs,\n                type,\n                payable,\n                stateMutability,\n            } = entry;\n            const entryBuilder = new SmartContract.ABI.Entry();\n            entryBuilder.setAnonymous(anonymous);\n            entryBuilder.setConstant(constant);\n            entryBuilder.setName(name);\n            if (inputs) {\n                entryBuilder.setInputsList(\n                    inputs.map((input) => buildEntryParam(input))\n                );\n            }\n            if (outputs) {\n                entryBuilder.setOutputsList(\n                    outputs.map((output) => buildEntryParam(output))\n                );\n            }\n            if (type) {\n                entryBuilder.setType(\n                    SmartContract.ABI.Entry.EntryType[type.toUpperCase()]\n                );\n            }\n            \n            entryBuilder.setPayable(payable);\n            if(stateMutability) {\n                entryBuilder.setStatemutability(\n                    SmartContract.ABI.Entry.StateMutabilityType[\n                        stateMutability.toUpperCase()\n                    ]\n                );\n            }\n            \n            return entryBuilder;\n        });\n        abiBuilder.setEntrysList(entryBuilders);\n        smartContractBuilder.setAbi(abiBuilder);\n    }\n    \n\n    if (call_value) {\n        smartContractBuilder.setCallValue(call_value);\n    }\n\n    smartContractBuilder.setConsumeUserResourcePercent(\n        consume_user_resource_percent\n    );\n    smartContractBuilder.setOriginEnergyLimit(origin_energy_limit);\n\n    if (!origin_address) {\n        origin_address = owner_address;\n    }\n    smartContractBuilder.setOriginAddress(fromHexString(origin_address));\n\n    if (bytecode) {\n        const bytecodeParameter = bytecode.replace(/^0x/, '') + parameter.replace(/^0x/, '');\n        smartContractBuilder.setBytecode(fromHexString(bytecodeParameter));\n    }\n\n    smartContractBuilder.setName(contracName);\n\n    createSmartContract.setNewContract(smartContractBuilder);\n\n    return buildCommonTransaction(\n        createSmartContract,\n        Transaction.Contract.ContractType.CREATESMARTCONTRACT,\n        'CreateSmartContract',\n        options.Permission_id\n    );\n};\n\nconst buildClearABIContract = (value, options) => {\n    const { contract_address, owner_address } = value;\n    const clearABIContract = new ClearABIContract();\n    clearABIContract.setOwnerAddress(fromHexString(owner_address));\n    clearABIContract.setContractAddress(fromHexString(contract_address));\n\n    return buildCommonTransaction(\n        clearABIContract,\n        Transaction.Contract.ContractType.CLEARABICONTRACT,\n        'ClearABIContract',\n        options.Permission_id\n    );\n};\n\n// updateBrokerage\nconst buildUpdateBrokerageContract = (value, options) => {\n    const { brokerage, owner_address } = value;\n    const updateBrokerageContract = new UpdateBrokerageContract();\n    updateBrokerageContract.setOwnerAddress(fromHexString(owner_address));\n    updateBrokerageContract.setBrokerage(brokerage);\n\n    return buildCommonTransaction(\n        updateBrokerageContract,\n        Transaction.Contract.ContractType.UPDATEBROKERAGECONTRACT,\n        'UpdateBrokerageContract',\n        options.Permission_id\n    );\n};\n\n// createToken\nconst buildAssetIssueContract = (value, options) => {\n    const {\n        owner_address,\n        name,\n        abbr,\n        description,\n        url,\n        total_supply,\n        trx_num,\n        num,\n        start_time,\n        end_time,\n        precision,\n        free_asset_net_limit,\n        public_free_asset_net_limit,\n        public_free_asset_net_usage = 0,\n        public_latest_free_net_time = 0,\n        vote_score = 0,\n        frozen_supply,\n    } = value;\n    let assetIssueContract = new AssetIssueContract();\n    assetIssueContract.setOwnerAddress(fromHexString(owner_address));\n    if (name) {\n        assetIssueContract.setName(fromHexString(name.replace(/^0x/, '')));\n    }\n    if (abbr) {\n        assetIssueContract.setAbbr(fromHexString(abbr.replace(/^0x/, '')));\n    }\n    assetIssueContract.setTotalSupply(total_supply);\n    assetIssueContract.setNum(num);\n    assetIssueContract.setEndTime(end_time);\n    assetIssueContract.setStartTime(start_time);\n    assetIssueContract.setTrxNum(trx_num);\n    assetIssueContract.setVoteScore(vote_score);\n    if (precision) {\n        assetIssueContract.setPrecision(precision);\n    }\n    if (public_latest_free_net_time) {\n        assetIssueContract.setPublicLatestFreeNetTime(\n            public_latest_free_net_time\n        );\n    }\n    if (description) {\n        assetIssueContract.setDescription(\n            fromHexString(description.replace(/^0x/, ''))\n        );\n    }\n    if (url) {\n        assetIssueContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    }\n    \n    assetIssueContract.setPublicFreeAssetNetUsage(public_free_asset_net_usage);\n    assetIssueContract.setFreeAssetNetLimit(free_asset_net_limit);\n    assetIssueContract.setPublicFreeAssetNetLimit(public_free_asset_net_limit);\n    if (frozen_supply) {\n        let frozenSupplyContract = new AssetIssueContract.FrozenSupply();\n        frozenSupplyContract.setFrozenAmount(frozen_supply.length ? frozen_supply[0].frozen_amount : frozen_supply.frozen_amount);\n        frozenSupplyContract.setFrozenDays(frozen_supply.length ? frozen_supply[0].frozen_days : frozen_supply.frozen_days);\n        assetIssueContract.addFrozenSupply(frozenSupplyContract);\n    }\n    return buildCommonTransaction(\n        assetIssueContract,\n        Transaction.Contract.ContractType.ASSETISSUECONTRACT,\n        'AssetIssueContract',\n        options.Permission_id\n    );\n};\n\n//createAccount\nconst buildAccountCreateContract = (value, options) => {\n    let accountCreateContract = new AccountCreateContract();\n    const { account_address, owner_address } = value;\n    accountCreateContract.setOwnerAddress(fromHexString(owner_address));\n    accountCreateContract.setAccountAddress(\n        fromHexString(account_address.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        accountCreateContract,\n        Transaction.Contract.ContractType.ACCOUNTCREATECONTRACT,\n        'AccountCreateContract',\n        options.Permission_id\n    );\n}\n\n// updateAccount\nconst buildAccountUpdateContract = (value, options) => {\n    let accountUpdateContract = new AccountUpdateContract();\n    const { account_name, owner_address } = value;\n    accountUpdateContract.setOwnerAddress(fromHexString(owner_address));\n    accountUpdateContract.setAccountName(\n        fromHexString(account_name.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        accountUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTUPDATECONTRACT,\n        'AccountUpdateContract',\n        options.Permission_id\n    );\n};\n\n// setAccountId\nconst buildSetAccountIdContract = (value, options) => {\n    let setAccountIdContract = new SetAccountIdContract();\n    const { account_id, owner_address } = value;\n    setAccountIdContract.setOwnerAddress(fromHexString(owner_address));\n    setAccountIdContract.setAccountId(\n        fromHexString(account_id.replace(/^0x/, ''))\n    );\n    return buildCommonTransaction(\n        setAccountIdContract,\n        Transaction.Contract.ContractType.SETACCOUNTIDCONTRACT,\n        'SetAccountIdContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalCreateContract = (value, options) => {\n    let proposalCreateContract = new ProposalCreateContract();\n    const { owner_address, parameters } = value;\n    proposalCreateContract.setOwnerAddress(fromHexString(owner_address));\n    parameters.forEach((parameter) => {\n        proposalCreateContract\n            .getParametersMap()\n            .set(parameter.key, parameter.value);\n    });\n    return buildCommonTransaction(\n        proposalCreateContract,\n        Transaction.Contract.ContractType.PROPOSALCREATECONTRACT,\n        'ProposalCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildProposalDeleteContract = (value, options) => {\n    let proposalDeleteContract = new ProposalDeleteContract();\n    const { owner_address, proposal_id } = value;\n    proposalDeleteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalDeleteContract.setProposalId(proposal_id);\n    return buildCommonTransaction(\n        proposalDeleteContract,\n        Transaction.Contract.ContractType.PROPOSALDELETECONTRACT,\n        'ProposalDeleteContract',\n        options.Permission_id\n    );\n};\n\nconst buildVoteProposalContract = (value, options) => {\n    let proposalVoteContract = new ProposalApproveContract();\n    const { owner_address, proposal_id, is_add_approval } = value;\n    proposalVoteContract.setOwnerAddress(fromHexString(owner_address));\n    proposalVoteContract.setProposalId(proposal_id);\n    proposalVoteContract.setIsAddApproval(is_add_approval);\n    return buildCommonTransaction(\n        proposalVoteContract,\n        Transaction.Contract.ContractType.PROPOSALAPPROVECONTRACT,\n        'ProposalApproveContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeCreateContract = (value, options) => {\n    const exchangeCreateContract = new ExchangeCreateContract();\n    const {\n        owner_address,\n        first_token_id,\n        first_token_balance,\n        second_token_id,\n        second_token_balance,\n    } = value;\n    exchangeCreateContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeCreateContract.setFirstTokenId(\n        fromHexString(first_token_id.replace(/^0x/, ''))\n    );\n    exchangeCreateContract.setFirstTokenBalance(first_token_balance);\n    exchangeCreateContract.setSecondTokenId(\n        fromHexString(second_token_id.replace(/^0x/, ''))\n    );\n    exchangeCreateContract.setSecondTokenBalance(second_token_balance);\n    return buildCommonTransaction(\n        exchangeCreateContract,\n        Transaction.Contract.ContractType.EXCHANGECREATECONTRACT,\n        'ExchangeCreateContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeInjectContract = (value, options) => {\n    const exchangeInjectContract = new ExchangeInjectContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeInjectContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeInjectContract.setExchangeId(exchange_id);\n    exchangeInjectContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeInjectContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeInjectContract,\n        Transaction.Contract.ContractType.EXCHANGEINJECTCONTRACT,\n        'ExchangeInjectContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeWithdrawContract = (value, options) => {\n    const exchangeWithdrawContract = new ExchangeWithdrawContract();\n    const { owner_address, exchange_id, token_id, quant } = value;\n    exchangeWithdrawContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeWithdrawContract.setExchangeId(exchange_id);\n    exchangeWithdrawContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeWithdrawContract.setQuant(quant);\n    return buildCommonTransaction(\n        exchangeWithdrawContract,\n        Transaction.Contract.ContractType.EXCHANGEWITHDRAWCONTRACT,\n        'ExchangeWithdrawContract',\n        options.Permission_id\n    );\n};\n\nconst buildExchangeTransactionContract = (value, options) => {\n    const exchangeTransactionContract = new ExchangeTransactionContract();\n    const { owner_address, exchange_id, token_id, quant, expected } = value;\n    exchangeTransactionContract.setOwnerAddress(fromHexString(owner_address));\n    exchangeTransactionContract.setExchangeId(exchange_id);\n    exchangeTransactionContract.setTokenId(\n        fromHexString(token_id.replace(/^0x/, ''))\n    );\n    exchangeTransactionContract.setQuant(quant);\n    exchangeTransactionContract.setExpected(expected);\n    return buildCommonTransaction(\n        exchangeTransactionContract,\n        Transaction.Contract.ContractType.EXCHANGETRANSACTIONCONTRACT,\n        'ExchangeTransactionContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateSettingContract = (value, options) => {\n    const updateSettingContract = new UpdateSettingContract();\n    const { owner_address, contract_address, consume_user_resource_percent } =\n        value;\n    updateSettingContract.setOwnerAddress(fromHexString(owner_address));\n    updateSettingContract.setContractAddress(fromHexString(contract_address));\n    updateSettingContract.setConsumeUserResourcePercent(\n        consume_user_resource_percent\n    );\n    return buildCommonTransaction(\n        updateSettingContract,\n        Transaction.Contract.ContractType.UPDATESETTINGCONTRACT,\n        'UpdateSettingContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateEnergyLimitContract = (value, options) => {\n    const updateEnergyLimitContract = new UpdateEnergyLimitContract();\n    const { owner_address, contract_address, origin_energy_limit } = value;\n    updateEnergyLimitContract.setOwnerAddress(fromHexString(owner_address));\n    updateEnergyLimitContract.setContractAddress(\n        fromHexString(contract_address)\n    );\n    updateEnergyLimitContract.setOriginEnergyLimit(origin_energy_limit);\n    return buildCommonTransaction(\n        updateEnergyLimitContract,\n        Transaction.Contract.ContractType.UPDATEENERGYLIMITCONTRACT,\n        'UpdateEnergyLimitContract',\n        options.Permission_id\n    );\n};\n\nconst buildAccountPermissionUpdateContract = (value, options) => {\n    const accountPermissionUpdateContract =\n        new AccountPermissionUpdateContract();\n    const { owner_address, owner, witness, actives } = value;\n    accountPermissionUpdateContract.setOwnerAddress(\n        fromHexString(owner_address)\n    );\n    const getType = type => {\n        // no type when permission_name is owner\n        if (isNaN(type)) return type === 'Active' ? 2 : type === 'Witness' ? 1 : 0;\n        return type;\n    }\n    const buildPermission = (data) => {\n        // no type when permission_name is owner\n        const permission = new Permission();\n        const {\n            type,\n            id,\n            permission_name,\n            threshold,\n            parentId,\n            operations,\n            keys,\n        } = data;\n        permission.setType(getType(type));\n        permission.setId(id);\n        permission.setPermissionName(permission_name);\n        permission.setThreshold(threshold);\n        if (parentId) {\n            permission.setParentId(parentId);\n        }\n        if (operations) {\n            permission.setOperations(fromHexString(operations));\n        }\n        if (keys) {\n            permission.setKeysList(\n                keys.map((key) => {\n                    const keyBuilder = new Key();\n                    keyBuilder.setAddress(fromHexString(key.address));\n                    keyBuilder.setWeight(key.weight);\n                    return keyBuilder;\n                })\n            );\n        }\n        return permission;\n    };\n    if (owner) {\n        accountPermissionUpdateContract.setOwner(buildPermission(owner));\n    }\n    if (witness) {\n        accountPermissionUpdateContract.setWitness(buildPermission(witness));\n    }\n    if (actives) {\n        if (Array.isArray(actives)) {\n            accountPermissionUpdateContract.setActivesList(\n                actives.map(active => buildPermission(active))\n            );\n        } else {\n            accountPermissionUpdateContract.setActivesList([\n                buildPermission(actives),\n            ]);\n        }\n    }\n    return buildCommonTransaction(\n        accountPermissionUpdateContract,\n        Transaction.Contract.ContractType.ACCOUNTPERMISSIONUPDATECONTRACT,\n        'AccountPermissionUpdateContract',\n        options.Permission_id\n    );\n};\n\nconst buildUpdateAssetContract = (value, options) => {\n    const updateAssetContract = new UpdateAssetContract();\n    const { owner_address, description, url, new_limit, new_public_limit } = value;\n    updateAssetContract.setOwnerAddress(fromHexString(owner_address));\n    if (description) {\n        updateAssetContract.setDescription(fromHexString(description.replace(/^0x/, '')));\n    }\n    if (url) {\n        updateAssetContract.setUrl(fromHexString(url.replace(/^0x/, '')));\n    }\n    if(new_limit) {\n        updateAssetContract.setNewLimit(new_limit);\n    }\n    if(new_public_limit) {\n        updateAssetContract.setNewPublicLimit(new_public_limit);\n    }\n    return buildCommonTransaction(\n        updateAssetContract,\n        Transaction.Contract.ContractType.UPDATEASSETCONTRACT,\n        'UpdateAssetContract',\n        options.Permission_id\n    );\n}\n \nconst contractJsonToProtobuf = (contract, value, options) => {\n    switch (contract.type) {\n        case 'TransferContract':\n            return buildTransferContract(value, options);\n        case 'TransferAssetContract':\n            return buildTransferAssetContract(value, options);\n        case 'ParticipateAssetIssueContract':\n            return buildParticipateAssetIssueContract(value, options);\n        case 'TriggerSmartContract':\n            return buildTriggerSmartContract(value, options);\n        case 'FreezeBalanceContract':\n            return buildFreezeBalanceContract(value, options);\n        case 'UnfreezeBalanceContract':\n            return buildUnfreezeBalanceContract(value, options);\n        case 'WithdrawBalanceContract':\n            return buildWithdrawBalanceContract(value, options);\n        case 'FreezeBalanceV2Contract':\n            return buildFreezeBalanceV2Contract(value, options);\n        case 'CancelAllUnfreezeV2Contract':\n            return buildCancelFreezeBalanceV2Contract(value, options);\n        case 'UnfreezeBalanceV2Contract':\n            return buildUnfreezeBalanceV2Contract(value, options);\n        case 'DelegateResourceContract':\n            return buildDelegateResourceContract(value, options);\n        case 'UnDelegateResourceContract':\n            return buildUnDelegateResourceContract(value, options);\n        case 'WithdrawExpireUnfreezeContract':\n            return buildWithdrawExpireUnfreezeContract(value, options);\n        case 'WitnessCreateContract':\n            return buildCreateWitness(value, options);\n        case 'VoteWitnessContract':\n            return buildVoteWitnessAccount(value, options);\n        case 'CreateSmartContract':\n            return buildCreateSmartContract(value, options);\n        case 'ClearABIContract':\n            return buildClearABIContract(value, options);\n        case 'UpdateBrokerageContract':\n            return buildUpdateBrokerageContract(value, options);\n        case 'AssetIssueContract':\n            return buildAssetIssueContract(value, options);\n        case 'AccountCreateContract':\n            return buildAccountCreateContract(value, options);\n        case 'AccountUpdateContract':\n            return buildAccountUpdateContract(value, options);\n        case 'SetAccountIdContract':\n            return buildSetAccountIdContract(value, options);\n        case 'ProposalCreateContract':\n            return buildProposalCreateContract(value, options);\n        case 'ProposalDeleteContract':\n            return buildProposalDeleteContract(value, options);\n        case 'ProposalApproveContract':\n            return buildVoteProposalContract(value, options);\n        case 'ExchangeCreateContract':\n            return buildExchangeCreateContract(value, options);\n        case 'ExchangeInjectContract':\n            return buildExchangeInjectContract(value, options);\n        case 'ExchangeWithdrawContract':\n            return buildExchangeWithdrawContract(value, options);\n        case 'ExchangeTransactionContract':\n            return buildExchangeTransactionContract(value, options);\n        case 'UpdateSettingContract':\n            return buildUpdateSettingContract(value, options);\n        case 'UpdateEnergyLimitContract':\n            return buildUpdateEnergyLimitContract(value, options);\n        case 'AccountPermissionUpdateContract':\n            return buildAccountPermissionUpdateContract(value, options);\n        case 'UpdateAssetContract': \n            return buildUpdateAssetContract(value, options);\n    }\n};\n\nconst txJsonToPb = (transaction) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n    const data = contractJson.parameter.value;\n    const options = { Permission_id: contractJson.Permission_id };\n    const transactionObj = contractJsonToProtobuf(contractJson, data, options);\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(fromHexString(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(fromHexString(rawData.ref_block_hash));\n    if (rawData.data) {\n        rawDataObj.setData(fromHexString(rawData.data));\n    }\n\n    if (rawData.fee_limit) {\n        rawDataObj.setFeeLimit(rawData.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst txJsonToPbWithArgs = (\n    transaction,\n    args = {},\n    options = {}\n) => {\n    const rawData = transaction['raw_data'];\n    const contractJson = rawData.contract[0];\n\n    const transactionObj = contractJsonToProtobuf(contractJson, args, { Permission_id: args?.Permission_id });\n\n    const rawDataObj = transactionObj.getRawData();\n    rawDataObj.setRefBlockBytes(fromHexString(rawData.ref_block_bytes));\n    rawDataObj.setRefBlockHash(fromHexString(rawData.ref_block_hash));\n    // for memo\n    if (options.data) {\n        rawDataObj.setData(fromHexString(options.data.replace(/^0x/, '')));\n    }\n\n    if (options.fee_limit || args.fee_limit) {\n        rawDataObj.setFeeLimit(options.fee_limit || args.fee_limit);\n    }\n\n    if (rawData.expiration) {\n        rawDataObj.setExpiration(rawData.expiration);\n    }\n\n    if (rawData.timestamp) {\n        rawDataObj.setTimestamp(rawData.timestamp);\n    }\n\n    transactionObj.setRawData(rawDataObj);\n\n    return transactionObj;\n};\n\nconst compareTransaction = (transaction, transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const rawDataHex = byteArray2hexStr(rawDataBytes);\n    const txID = sha256(rawDataBytes);\n    return (\n        rawDataHex.toLowerCase() === transaction.raw_data_hex.toLowerCase() &&\n        txID.replace(/^0x/, '').toLowerCase() ===\n            transaction.txID.replace(/^0x/, '').toLowerCase()\n    );\n    \n};\n\nconst txPbToRawDataHex = (pb) => {\n    return byteArray2hexStr(pb.getRawData().serializeBinary());\n};\n\nconst txCheck = (transaction) => {\n    const transactionPb = txJsonToPb(transaction);\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txCheckWithArgs = (transaction, args, options) => {\n    const transactionPb = txJsonToPbWithArgs(\n        transaction,\n        args,\n        options\n    );\n    return compareTransaction(transaction, transactionPb);\n};\n\nconst txPbToTxID = (transactionPb) => {\n    const rawDataBytes = transactionPb.getRawData().serializeBinary();\n    const txID = sha256(rawDataBytes);\n    return txID;\n}\n\nexport {\n    txJsonToPb,\n    txPbToTxID,\n    txPbToRawDataHex,\n    txJsonToPbWithArgs,\n    txCheckWithArgs,\n    txCheck,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"validator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bignumber.js\");","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\nimport * as message from './message'\nimport * as ethersUtils from './ethersUtils';\nimport {TypedDataEncoder as _TypedDataEncoder} from './typedData';\nimport * as transaction from './transaction';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\nimport {ADDRESS_PREFIX} from 'utils/address';\n\nconst utils = {\n    isValidURL(url) {\n        if (typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: ['http', 'https'],\n            require_tld: false\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if (number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    mapEvent(event) {\n        let data = {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode')\n        };\n        if (event._unconfirmed) {\n            data.unconfirmed = event._unconfirmed\n        }\n        if (event._fingerprint) {\n            data.fingerprint = event._fingerprint;\n        }\n        return data;\n    },\n\n    parseEvent(event, {inputs: abi}) {\n        if (!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = ADDRESS_PREFIX + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if (type == 'address')\n                    result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    },\n\n    async sleep(millis = 1000){\n        return new Promise(resolve => setTimeout(resolve, millis));\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi,\n    message,\n    _TypedDataEncoder,\n    transaction,\n    ethersUtils\n};\n","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if (!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if (!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && Object.keys(payload).length ? payload : null,\n            params: method == 'get' && payload,\n            url,\n            method\n        }).then(({data}) => data);\n    }\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eventemitter3\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"semver\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"injectpromise\");","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Validator {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n    }\n\n    invalid(param) {\n        return param.msg || `Invalid ${param.name}${param.type === 'address' ? ' address' : ''} provided`;\n    }\n\n    notPositive(param) {\n        return `${param.name} must be a positive integer`;\n    }\n\n    notEqual(param) {\n        return param.msg || `${param.names[0]} can not be equal to ${param.names[1]}`;\n    }\n\n    notValid(params = [], callback = new Function) {\n\n        let normalized = {};\n        let no = false;\n        for (const param of params) {\n            let {\n                name,\n                names,\n                value,\n                type,\n                gt,\n                lt,\n                gte,\n                lte,\n                se,\n                optional\n            } = param;\n            if (optional && (\n                !utils.isNotNullOrUndefined(value)\n                || (type !== 'boolean' && value === false)))\n                continue;\n            normalized[param.name] = param.value;\n            switch (type) {\n\n                case 'address':\n                    if (!this.tronWeb.isAddress(value)) {\n                        no = true;\n                    } else {\n                        normalized[name] = this.tronWeb.address.toHex(value);\n                    }\n                    break;\n\n                case 'integer':\n                    if (!utils.isInteger(value) ||\n                        (typeof gt === 'number' && value <= param.gt) ||\n                        (typeof lt === 'number' && value >= param.lt) ||\n                        (typeof gte === 'number' && value < param.gte) ||\n                        (typeof lte === 'number' && value > param.lte)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'positive-integer':\n                    if (!utils.isInteger(value) || value <= 0) {\n                        callback(this.notPositive(param));\n                        return;\n                    }\n                    break;\n\n                case 'tokenId':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEmptyObject':\n                    if (!utils.isObject(value) || !Object.keys(value).length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEqual':\n                    if (normalized[names[0]] === normalized[names[1]]) {\n                        callback(this.notEqual(param));\n                        return true;\n                    }\n                    break;\n\n                case 'resource':\n                    if (!['BANDWIDTH', 'ENERGY'].includes(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'url':\n                    if (!utils.isValidURL(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'hex':\n                    if (!utils.isHex(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'array':\n                    if (!Array.isArray(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'not-empty-string':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'boolean':\n                    if (!utils.isBoolean(value)) {\n                        no = true;\n                    }\n                    break;\n                case 'string':\n                    if (!utils.isString(value) ||\n                        (typeof gt === 'number' && value.length <= param.gt) ||\n                        (typeof lt === 'number' && value.length >= param.lt) ||\n                        (typeof gte === 'number' && value.length < param.gte) ||\n                        (typeof lte === 'number' && value.length > param.lte)) {\n                        no = true;\n                    }\n                    break;\n            }\n            if (no) {\n                callback(this.invalid(param));\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport { AbiCoder } from '@ethersproject/abi';\nimport Validator from 'paramValidator';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\nimport {encodeParamsV2ByABI} from 'utils/abi';\nimport {txCheckWithArgs, txJsonToPb, txPbToTxID, txPbToRawDataHex} from 'utils/transaction';\nimport { keccak256 } from 'utils/ethersUtils';\n\nlet self;\n\n//helpers\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nfunction fromUtf8(value) {\n    return self.tronWeb.fromUtf8(value).replace(/^0x/, '');\n}\n\nfunction deepCopyJson(json) {\n    return JSON.parse(JSON.stringify(json));\n}\n\nfunction resultManager(transaction, data, options, callback) {\n    if (typeof options === 'function') {\n        callback = options;\n    }\n\n    if (typeof data === 'function') {\n        callback = data;\n        data = null;\n    }\n\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n    const authResult = txCheckWithArgs(transaction, data, options);\n    if(authResult) {\n        return callback(null, transaction);\n    }\n    return callback('Invalid transaction');\n}\n\nfunction resultManagerTriggerSmartContract(transaction, data, options, callback) {\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n\n    if(!(options._isConstant || options.estimateEnergy)) {\n        const authResult = txCheckWithArgs(transaction.transaction, data, options);\n        if(authResult) {\n            return callback(null, transaction);\n        }\n        return callback('Invalid transaction');\n    }\n    return callback(null, transaction);\n}\n\nfunction genContractAddress(ownerAddress, txID) {\n    return '41' + keccak256(Buffer.from(txID + ownerAddress, 'hex')).toString().substring(2).slice(24);\n}\n\nfunction getHeaderInfo(node) {\n    return node.request('wallet/getblock', { detail: false }, 'post')\n        .then((data) => {\n            return {\n                ref_block_bytes: data.block_header.raw_data.number.toString(16).slice(-4).padStart(4, '0'),\n                ref_block_hash: data.blockID.slice(16, 32),\n                expiration: data.block_header.raw_data.timestamp + 60 * 1000,\n                timestamp: data.block_header.raw_data.timestamp,\n            };\n        });\n}\n\nfunction checkBlockHeader(options = {}) {\n    if (\n        typeof options['ref_block_bytes'] === 'undefined' &&\n        typeof options['ref_block_hash'] === 'undefined' &&\n        typeof options['expiration'] === 'undefined' &&\n        typeof options['timestamp'] === 'undefined'\n    ) {\n        return false;\n    }\n    if (typeof options['ref_block_bytes'] !== 'string') {\n        throw new Error('Invalid ref_block_bytes provided.');\n    }\n    if (typeof options['ref_block_hash'] !== 'string') {\n        throw new Error('Invalid ref_block_hash provided.');\n    }\n    if (typeof options['expiration'] !== 'number') {\n        throw new Error('Invalid expiration provided.');\n    }\n    if (typeof options['timestamp'] !== 'number') {\n        throw new Error('Invalid timestamp provided.');\n    }\n    return true;\n}\n\nasync function createTransaction(tronWeb, type, value, Permission_id, options = {}) {\n    const tx = {\n        visible: false,\n        txID: '',\n        raw_data_hex: '',\n        raw_data: {\n            contract: [{\n                parameter: {\n                    value,\n                    type_url: `type.googleapis.com/protocol.${type}`,\n                },\n                type,\n            }],\n            ...(checkBlockHeader(options) ? {} : await getHeaderInfo(tronWeb.fullNode)),\n            ...options,\n        },\n    };\n    if (Permission_id) {\n        tx.raw_data.contract[0].Permission_id = Permission_id;\n    }\n    const pb = txJsonToPb(tx);\n    tx.txID = txPbToTxID(pb).replace(/^0x/, '');\n    tx.raw_data_hex = txPbToRawDataHex(pb).toLowerCase();\n    return tx;\n}\n\nfunction getTransactionOptions(options) {\n    const ret = {};\n    if (checkBlockHeader(options?.blockHeader)) {\n        ['ref_block_bytes', 'ref_block_hash', 'expiration', 'timestamp'].forEach((key) => {\n            ret[key] = options.blockHeader[key];\n        });\n    }\n    return ret;\n}\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        self = this;\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(tronWeb);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from, options);\n\n        // accept amounts passed as strings\n        amount = parseInt(amount)\n\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer TRX to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            amount: amount,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'TransferContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from, options);\n\n        amount = parseInt(amount)\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer tokens to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'TransferAssetContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(buyer)) {\n            options = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'buyer',\n                type: 'address',\n                value: buyer\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                names: ['buyer', 'issuer'],\n                type: 'notEqual',\n                msg: 'Cannot purchase tokens from same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(issuerAddress),\n            owner_address: toHex(buyer),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ParticipateAssetIssueContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'duration',\n                type: 'integer',\n                gte: 3,\n                value: duration\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'FreezeBalanceContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UnfreezeBalanceContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    freezeBalanceV2(amount = 0, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalanceV2, amount, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'FreezeBalanceV2Contract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    unfreezeBalanceV2(amount = 0, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalanceV2, amount, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            unfreeze_balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UnfreezeBalanceV2Contract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    cancelUnfreezeBalanceV2(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            options = {};\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.cancelUnfreezeBalanceV2, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address,\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'CancelAllUnfreezeV2Contract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    delegateResource(\n        amount = 0,\n        receiverAddress,\n        resource = \"BANDWIDTH\",\n        address = this.tronWeb.defaultAddress.hex,\n        lock = false,\n        lockPeriod,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(lockPeriod)) {\n            callback = lockPeriod;\n            lockPeriod = undefined;\n        } else if (utils.isObject(lockPeriod)) {\n            options = lockPeriod;\n            lockPeriod = undefined;\n        }\n\n        if (utils.isFunction(lock)) {\n            callback = lock;\n            lock = false;\n        } else if (utils.isObject(lock)) {\n            options = lock;\n            lock = false;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.delegateResource, amount, receiverAddress, resource, address, lock, lockPeriod, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'lock',\n                type: 'boolean',\n                value: lock\n            },\n            {\n                name: 'lock period',\n                type: 'integer',\n                gte: 0,\n                value: lockPeriod,\n                optional: true,\n            }\n        ], callback))\n            return;\n\n        if(toHex(receiverAddress) === toHex(address)) {\n            return callback('Receiver address must not be the same as owner address');\n        }\n\n        const data = {\n            owner_address: toHex(address),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n        if (lock) {\n            data.lock = lock;\n            if (utils.isNotNullOrUndefined(lockPeriod)) {\n                data.lock_period = lockPeriod;\n            }\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'DelegateResourceContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    undelegateResource(amount = 0, receiverAddress, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        } else if (utils.isObject(resource)) {\n            options = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.undelegateResource, amount, receiverAddress, resource, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        if(toHex(receiverAddress) === toHex(address)) {\n            return callback('Receiver address must not be the same as owner address');\n        }\n    \n        const data = {\n            owner_address: toHex(address),\n            receiver_address: toHex(receiverAddress),\n            balance: parseInt(amount),\n        };\n        if (resource !== 'BANDWIDTH') {\n            data.resource = resource;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UnDelegateResourceContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    withdrawExpireUnfreeze(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExpireUnfreeze, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'WithdrawExpireUnfreezeContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'WithdrawBalanceContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    applyForSR(\n        address = this.tronWeb.defaultAddress.hex,\n        url = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (utils.isObject(url) && utils.isValidURL(address)) {\n            options = url;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.applyForSR, address, url, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'url',\n                type: 'url',\n                value: url,\n                msg: 'Invalid url provided'\n            },\n            {\n                name: 'url',\n                type: 'string',\n                value: url,\n                lte: 256,\n                msg: 'Invalid url provided'\n            },\n        ], callback))\n            return;\n\n\n        const data = {\n            owner_address: toHex(address),\n            url: fromUtf8(url),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'WitnessCreateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.vote, votes, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'votes',\n                type: 'notEmptyObject',\n                value: votes\n            }\n        ], callback))\n            return;\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([srAddress, voteCount]) => {\n            if (invalid)\n                return;\n\n            if (this.validator.notValid([\n                {\n                    name: 'SR',\n                    type: 'address',\n                    value: srAddress\n                },\n                {\n                    name: 'vote count',\n                    type: 'integer',\n                    gt: 0,\n                    value: voteCount,\n                    msg: 'Invalid vote count provided for SR: ' + srAddress\n                }\n            ]))\n                return invalid = true;\n\n            return {\n                vote_address: toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if (invalid)\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            votes,\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'VoteWitnessContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        const feeLimit = options.feeLimit || this.tronWeb.feeLimit;\n        let userFeePercentage = options.userFeePercentage;\n        if (typeof userFeePercentage !== 'number' && !userFeePercentage) {\n            userFeePercentage = 100;\n        }\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        const tokenId = options.tokenId || options.token_id;\n\n        let {\n            abi = false,\n            bytecode = false,\n            parameters = [],\n            name = \"\"\n        } = options;\n\n        if (abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if (abi.entrys)\n            abi = abi.entrys;\n\n        if (!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type === 'constructor' && 'payable' === func.stateMutability.toLowerCase();\n        });\n\n        if (this.validator.notValid([\n            {\n                name: 'bytecode',\n                type: 'hex',\n                value: bytecode\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        if (!payable && (callValue > 0 || tokenValue > 0))\n            return callback('When contract is not payable, options.callValue and options.tokenValue must be 0');\n\n\n        if (options.rawParameter && utils.isString(options.rawParameter)) {\n            parameters = options.rawParameter.replace(/^(0x)/, '');\n        } else if (options.funcABIV2) {\n            parameters = encodeParamsV2ByABI(options.funcABIV2, options.parametersV2).replace(/^(0x)/, '');\n        } else {\n            var constructorParams = abi.find(\n                (it) => {\n                    return it.type === 'constructor';\n                }\n            );\n\n            if (typeof constructorParams !== 'undefined' && constructorParams) {\n                const abiCoder = new AbiCoder();\n                const types = [];\n                const values = [];\n                constructorParams = constructorParams.inputs;\n\n                if (parameters.length != constructorParams.length)\n                    return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let type = constructorParams[i].type;\n                    let value = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        return callback('Invalid parameter type provided: ' + type);\n\n                    const replaceAddressPrefix = (value) => {\n                        if (utils.isArray(value)) {\n                            return value.map((v) => replaceAddressPrefix(v));\n                        }\n                        return toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    };\n                    if (type.startsWith('address')) value = replaceAddressPrefix(value);\n                    else if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256')\n                    }\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    return callback(ex);\n                }\n            } else parameters = '';\n        }\n\n        const args = {\n            owner_address: toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        };\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        new Promise((resolve) => {\n                const contract = {};\n                contract.owner_address = args.owner_address;\n                if (utils.isNotNullOrUndefined(args.call_token_value)) {\n                    contract.call_token_value = args.call_token_value;\n                }\n                if (utils.isNotNullOrUndefined(args.token_id)) {\n                    contract.token_id = args.token_id;\n                }\n                const new_contract = contract.new_contract = {};\n\n                if (args.abi) {\n                    new_contract.abi = {\n                        entrys: JSON.parse(args.abi),\n                    };\n                } else {\n                    new_contract.abi = {};\n                }\n                if (args.call_value) {\n                    new_contract.call_value = args.call_value;\n                }\n                new_contract.consume_user_resource_percent = args.consume_user_resource_percent;\n                new_contract.origin_energy_limit = args.origin_energy_limit;\n                new_contract.origin_address = args.origin_address ?? args.owner_address;\n                if (args.bytecode + args.parameter) {\n                    new_contract.bytecode = (args.bytecode + args.parameter).replace(/^0x/, '');\n                }\n                if (utils.isNotNullOrUndefined(args.name)) {\n                    new_contract.name = args.name;\n                }\n\n                resolve(contract);\n            })\n            .then(async contract => {\n                const transactionOptions = getTransactionOptions(options);\n                const tx = await createTransaction(this.tronWeb, 'CreateSmartContract', contract, options?.permissionId, {\n                    ...transactionOptions,\n                    fee_limit: args.fee_limit\n                })\n                tx.contract_address = genContractAddress(args.owner_address, tx.txID);\n                return tx;\n            })\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    triggerSmartContract(...params) {\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3]\n            }\n            params.splice(3, 1)\n        }\n        if (params[2]?.txLocal) {\n            return this._triggerSmartContractLocal(...params);\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConstantContract(...params) {\n        params[2]._isConstant = true\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConfirmedConstantContract(...params) {\n        params[2]._isConstant = true\n        params[2].confirmed = true\n        return this._triggerSmartContract(...params);\n    }\n\n    estimateEnergy(...params) {\n        params[2].estimateEnergy = true;\n        return this._triggerSmartContract(...params);\n    }\n\n    async deployConstantContract(options = {}) {\n        const {\n            input,\n            ownerAddress,\n            tokenId,\n            tokenValue,\n            callValue = 0,\n        } = options;\n        \n        this.validator.notValid([\n            {\n                name: 'input',\n                type: 'not-empty-string',\n                value: input,\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], (str) => {\n            throw new Error(str);\n        });\n        \n        const args = {\n            data: input,\n            owner_address: toHex(ownerAddress),\n            call_value: callValue,\n        }\n\n        if (tokenId) {\n            args.token_id = tokenId;\n        }\n        if (tokenValue) {\n            args.call_token_value = tokenValue;\n        }\n\n        const pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/${options.estimateEnergy ? 'estimateenergy' : 'triggerconstantcontract'}`;\n        return this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode']\n            .request(pathInfo, args, 'post')\n            .then(transaction => {\n                if (transaction.Error)\n                    throw new Error(transaction.Error);\n\n                if (transaction.result && transaction.result.message) {\n                    throw new Error(\n                        this.tronWeb.toUtf8(transaction.result.message)\n                    );\n                }\n                return transaction;\n            })\n            .then((transaction) => {\n                if (transaction.energy_used) {\n                    return {\n                        result: transaction.result,\n                        energy_required: transaction.energy_used,\n                    };\n                }\n                return transaction;\n            });\n    }\n\n    _getTriggerSmartContractArgs(\n        contractAddress,\n        functionSelector,\n        options,\n        parameters,\n        issuerAddress,\n        tokenValue,\n        tokenId,\n        callValue,\n        feeLimit,\n    ) {\n        const args = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(issuerAddress)\n        };\n\n\n        if (functionSelector && utils.isString(functionSelector)) {\n            functionSelector = functionSelector.replace('/\\s*/g', '');\n            if (parameters.length) {\n                const abiCoder = new AbiCoder();\n                let types = [];\n                const values = [];\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let {type, value} = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        throw new Error('Invalid parameter type provided: ' + type);\n\n                    const replaceAddressPrefix = (value) => {\n                        if (utils.isArray(value)) {\n                            return value.map((v) => replaceAddressPrefix(v));\n                        }\n                        return toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    };\n                    if (type.startsWith('address')) value = replaceAddressPrefix(value);\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                // workaround for unsupported trcToken type\n                types = types.map(type => {\n                    if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256')\n                    }\n                    return type\n                });\n\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } else parameters = '';\n\n            // work for abiv2 if passed the function abi in options\n            if (options.funcABIV2) {\n                parameters = encodeParamsV2ByABI(options.funcABIV2, options.parametersV2).replace(/^(0x)/, '');\n            }\n\n            if (options.shieldedParameter && utils.isString(options.shieldedParameter)) {\n                parameters = options.shieldedParameter.replace(/^(0x)/, '');\n            }\n\n            if (options.rawParameter && utils.isString(options.rawParameter)) {\n                parameters = options.rawParameter.replace(/^(0x)/, '');\n            }\n\n            args.function_selector = functionSelector;\n            args.parameter = parameters;\n        } else if (options.input) {\n            args.data = options.input;\n        }\n\n        args.call_value = parseInt(callValue)\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n\n        if (!(options._isConstant || options.estimateEnergy)) {\n            args.fee_limit = parseInt(feeLimit)\n        }\n\n        if (options.permissionId) {\n            args.Permission_id = options.permissionId;\n        }\n\n        return args;\n    }\n\n    _triggerSmartContractLocal(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContractLocal,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        let args;\n        try {\n            args = this._getTriggerSmartContractArgs(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress,\n                tokenValue,\n                tokenId,\n                callValue,\n                feeLimit\n            );\n        } catch (err) {\n            return callback(err);\n        }\n\n        if (args.function_selector) {\n            args.data = keccak256(Buffer.from(args.function_selector, 'utf-8')).toString().substring(2, 10) + args.parameter;\n        }\n        const value = {\n            data: args.data,\n            owner_address: args.owner_address,\n            contract_address: args.contract_address,\n        };\n        if (args.call_value) {\n            value.call_value = args.call_value;\n        }\n        if (args.call_token_value) {\n            value.call_token_value = args.call_token_value;\n        }\n        if (args.token_id) {\n            value.token_id = args.token_id;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(\n            this.tronWeb,\n            'TriggerSmartContract', \n            value,\n            options.permissionId,\n            {\n                ...transactionOptions,\n                fee_limit: args.fee_limit,\n            }\n        ).then(transaction => {\n            callback(null, {\n                result: {\n                    result: true,\n                },\n                transaction,\n            });\n        }).catch(err => callback(err));\n    }\n\n    _triggerSmartContract(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContract,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        let args;\n        try {\n            args = this._getTriggerSmartContractArgs(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress,\n                tokenValue,\n                tokenId,\n                callValue,\n                feeLimit\n            );\n        } catch (err) {\n            return callback(err);\n        }\n\n        let pathInfo = 'triggersmartcontract';\n        if(options._isConstant) {\n            pathInfo = 'triggerconstantcontract';\n        } else if (options.estimateEnergy) {\n            pathInfo = 'estimateenergy';\n        }\n\n        pathInfo = `wallet${options.confirmed ? 'solidity' : ''}/${pathInfo}`;\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(pathInfo, args, 'post').then(transaction => resultManagerTriggerSmartContract(transaction, args, options, callback)).catch(err => callback(err));\n    }\n\n    clearABI(contractAddress, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {     \n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if (!callback)\n            return this.injectPromise(this.clearABI, contractAddress, ownerAddress, options);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(ownerAddress)\n        };\n\n        if (this.tronWeb.trx.cache.contracts[contractAddress]) {\n            delete this.tronWeb.trx.cache.contracts[contractAddress]\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ClearABIContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n\n    }\n\n    updateBrokerage(brokerage, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateBrokerage, brokerage, ownerAddress, options);\n\n        if (!utils.isNotNullOrUndefined(brokerage))\n            return callback('Invalid brokerage provided');\n\n        if (!utils.isInteger(brokerage) || brokerage < 0 || brokerage > 100)\n            return callback('Brokerage must be an integer between 0 and 100');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            brokerage: parseInt(brokerage),\n            owner_address: toHex(ownerAddress)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UpdateBrokerageContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = '',\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision\n        } = options;\n\n        if (this.validator.notValid([\n            {\n                name: 'Supply amount',\n                type: 'positive-integer',\n                value: totalSupply\n            },\n            {\n                name: 'TRX ratio',\n                type: 'positive-integer',\n                value: trxRatio\n            },\n            {\n                name: 'Token ratio',\n                type: 'positive-integer',\n                value: tokenRatio\n            },\n            {\n                name: 'token abbreviation',\n                type: 'string',\n                value: abbreviation,\n                lte: 32,\n                gt: 0\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: name\n            },\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'sale start timestamp',\n                type: 'integer',\n                value: saleStart,\n                gte: Date.now()\n            },\n            {\n                name: 'sale end timestamp',\n                type: 'integer',\n                value: saleEnd,\n                gt: saleStart\n            },\n            {\n                name: 'Frozen supply',\n                type: 'integer',\n                value: frozenAmount,\n                gte: 0\n            },\n            {\n                name: 'Frozen duration',\n                type: 'integer',\n                value: frozenDuration,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        if (utils.isNotNullOrUndefined(voteScore) && (!utils.isInteger(voteScore) || voteScore <= 0))\n            return callback('voteScore must be a positive integer greater than 0');\n\n        if (utils.isNotNullOrUndefined(precision) && (!utils.isInteger(precision) || precision < 0 || precision > 6))\n            return callback('precision must be a positive integer >= 0 and <= 6');\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            name: fromUtf8(name),\n            abbr: fromUtf8(abbreviation),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            frozen_supply: [{\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }]\n        };\n        ['name', 'abbr', 'description', 'url'].forEach((key) => {\n            if (!data[key]) {\n                delete data[key];\n            }\n        });\n        if (!(parseInt(frozenAmount) > 0)) {\n            delete data.frozen_supply\n        }\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.free_asset_net_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.public_free_asset_net_limit = parseInt(freeBandwidthLimit);\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore)\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'AssetIssueContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    createAccount(accountAddress, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.createAccount, accountAddress, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'account',\n                type: 'address',\n                value: accountAddress\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            account_address: toHex(accountAddress),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'AccountCreateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'Name',\n                type: 'string',\n                lte: 200,\n                gt: 0,\n                value: accountName,\n                msg: 'Invalid accountName'\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_name: fromUtf8(accountName),\n            owner_address: toHex(address),\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'AccountUpdateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    setAccountId(accountId, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.setAccountId, accountId, address, options);\n        }\n\n        if (accountId && utils.isString(accountId) && accountId.startsWith('0x')) {\n            accountId = accountId.slice(2);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: accountId\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: accountId\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_id: accountId,\n            owner_address: toHex(address),\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'SetAccountIdContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = '',\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n\n        if (this.validator.notValid([\n            {\n                name: 'token description',\n                type: 'string',\n                value: description,\n                lte: 200\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'token url',\n                type: 'string',\n                value: url,\n                lte: 256,\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n        };\n\n        if (freeBandwidth && !isNaN(parseInt(freeBandwidth)) && parseInt(freeBandwidth) >= 0) {\n            data.new_limit = parseInt(freeBandwidth);\n        }\n        if (freeBandwidthLimit && !isNaN(parseInt(freeBandwidthLimit)) && parseInt(freeBandwidthLimit) >= 0) {\n            data.new_public_limit = parseInt(freeBandwidthLimit);\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UpdateAssetContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            }\n        ], callback))\n            return;\n\n        const invalid = 'Invalid proposal parameters provided';\n\n        if (!parameters)\n            return callback(invalid);\n\n        if (!utils.isArray(parameters))\n            parameters = [parameters];\n\n        for (let parameter of parameters) {\n            if (!utils.isObject(parameter))\n                return callback(invalid);\n        }\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            parameters: parameters\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ProposalCreateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ProposalDeleteContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, isApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.voteProposal, proposalID, isApproval, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            },\n            {\n                name: 'has approval',\n                type: 'boolean',\n                value: isApproval\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ProposalApproveContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token balance',\n                type: 'positive-integer',\n                value: tokenBalance\n            },\n            {\n                name: 'trx balance',\n                type: 'positive-integer',\n                value: trxBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ExchangeCreateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTokenExchange(firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTokenExchange, firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'first token name',\n                type: 'not-empty-string',\n                value: firstTokenName\n            },\n            {\n                name: 'second token name',\n                type: 'not-empty-string',\n                value: secondTokenName\n            },\n            {\n                name: 'first token balance',\n                type: 'positive-integer',\n                value: firstTokenBalance\n            },\n            {\n                name: 'second token balance',\n                type: 'positive-integer',\n                value: secondTokenBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ExchangeCreateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ExchangeInjectContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ExchangeWithdrawContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    tradeExchangeTokens(exchangeID = false,\n                        tokenName = false,\n                        tokenAmountSold = 0,\n                        tokenAmountExpected = 0,\n                        ownerAddress = this.tronWeb.defaultAddress.hex,\n                        options,\n                        callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'tokenAmountSold',\n                type: 'integer',\n                value: tokenAmountSold,\n                gte: 1\n            },\n            {\n                name: 'tokenAmountExpected',\n                type: 'integer',\n                value: tokenAmountExpected,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName).replace(/^0x/, ''),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected)\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'ExchangeTransactionContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    updateSetting(contractAddress = false,\n                  userFeePercentage = false,\n                  ownerAddress = this.tronWeb.defaultAddress.hex,\n                  options,\n                  callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateSetting, contractAddress, userFeePercentage, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UpdateSettingContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    /**\n     * Update energy limit.\n     */\n    updateEnergyLimit(contractAddress = false,\n                      originEnergyLimit = false,\n                      ownerAddress = this.tronWeb.defaultAddress.hex,\n                      options,\n                      callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateEnergyLimit, contractAddress, originEnergyLimit, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit\n        };\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'UpdateEnergyLimitContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    checkPermissions(permissions, type) {\n        if (permissions) {\n            if (permissions.type !== type\n                || !permissions.permission_name\n                || !utils.isString(permissions.permission_name)\n                || !utils.isInteger(permissions.threshold)\n                || permissions.threshold < 1\n                || !permissions.keys\n            ) {\n                return false\n            }\n            for (let key of permissions.keys) {\n                if (!this.tronWeb.isAddress(key.address)\n                    || !utils.isInteger(key.weight)\n                    || key.weight > permissions.threshold\n                    || key.weight < 1\n                    || (type === 2 && !permissions.operations)\n                ) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    updateAccountPermissions(\n        ownerAddress = this.tronWeb.defaultAddress.hex,\n        ownerPermissions = false,\n        witnessPermissions = false,\n        activesPermissions = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(activesPermissions)) {\n            callback = activesPermissions;\n            activesPermissions = false;\n        }\n\n        if (utils.isFunction(witnessPermissions)) {\n            callback = witnessPermissions;\n            witnessPermissions = activesPermissions = false;\n        }\n\n        if (utils.isFunction(ownerPermissions)) {\n            callback = ownerPermissions;\n            ownerPermissions = witnessPermissions = activesPermissions = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateAccountPermissions, ownerAddress, ownerPermissions, witnessPermissions, activesPermissions, options);\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if (!this.checkPermissions(ownerPermissions, 0)) {\n            return callback('Invalid ownerPermissions provided');\n        }\n\n        if (!this.checkPermissions(witnessPermissions, 1)) {\n            return callback('Invalid witnessPermissions provided');\n        }\n\n        if (!Array.isArray(activesPermissions)) {\n            activesPermissions = [activesPermissions]\n        }\n\n        for (let activesPermission of activesPermissions) {\n            if (!this.checkPermissions(activesPermission, 2)) {\n                return callback('Invalid activesPermissions provided');\n            }\n        }\n\n        const data = {\n            owner_address: toHex(ownerAddress)\n        }\n        if (ownerPermissions) {\n            const _ownerPermissions = deepCopyJson(ownerPermissions);\n            // for compatible with old way of building transaction from chain which type prop is omitted\n            if ('type' in _ownerPermissions) {\n                delete _ownerPermissions.type;\n            }\n            data.owner = _ownerPermissions;\n        }\n        if (witnessPermissions) {\n            const _witnessPermissions = deepCopyJson(witnessPermissions);\n            // for compatible with old way of building transaction from chain which type prop is Witness\n            _witnessPermissions.type = 'Witness';\n            data.witness = _witnessPermissions;\n        }\n        if (activesPermissions) {\n            const _activesPermissions = deepCopyJson(activesPermissions);\n            // for compatible with old way of building transaction from chain which type prop is Active\n            _activesPermissions.forEach((activePermissions) => {\n                activePermissions.type = 'Active';\n            });\n            data.actives = _activesPermissions;\n        }\n\n        const transactionOptions = getTransactionOptions(options);\n        createTransaction(this.tronWeb, 'AccountPermissionUpdateContract', data, options?.permissionId, transactionOptions)\n            .then(transaction => callback(null, transaction))\n            .catch(err => callback(err));\n    }\n\n    async newTxID(transaction, options, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.newTxID, transaction, options);\n\n        if (options?.txLocal) {\n            const contract = transaction.raw_data.contract[0];\n            createTransaction(this.tronWeb, contract.type, contract.parameter.value, contract.Permission_id, {\n                fee_limit: transaction.raw_data.fee_limit,\n                data: transaction.raw_data.data,\n                ref_block_bytes: transaction.raw_data.ref_block_bytes,\n                ref_block_hash: transaction.raw_data.ref_block_hash,\n                expiration: transaction.raw_data.expiration,\n                timestamp: transaction.raw_data.timestamp,\n            }).then((tx) => {\n                tx.signature = transaction.signature;\n                tx.visible = transaction.visible;\n                callback(null, tx);\n            }).catch((err) => callback('Error generating a new transaction id.'));\n            return;\n        }\n        \n        this.tronWeb.fullNode\n            .request(\n                'wallet/getsignweight',\n                transaction,\n                'post'\n            )\n            .then(newTransaction => {\n                if (typeof transaction.visible === 'boolean') {\n                    newTransaction.transaction.transaction.visible = transaction.visible\n                }\n                return resultManager(\n                    newTransaction.transaction.transaction,\n                    {\n                        ...transaction.raw_data.contract[0].parameter.value,\n                        Permission_id: transaction.raw_data.contract[0].Permission_id,\n                    },\n                    { data: transaction.raw_data.data, fee_limit: transaction.raw_data.fee_limit },\n                    callback\n                );\n            })\n            .catch(err => callback('Error generating a new transaction id.'));\n    }\n\n    async alterTransaction(transaction, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.alterTransaction, transaction, options);\n\n        if (transaction.signature)\n            return callback('You can not extend the expiration of a signed transaction.')\n\n        if (options.data) {\n            if (options.dataFormat !== 'hex')\n                options.data = this.tronWeb.toHex(options.data);\n            options.data = options.data.replace(/^0x/, '')\n            if (options.data.length === 0)\n                return callback('Invalid data provided');\n            transaction.raw_data.data = options.data;\n        }\n\n        if (options.extension) {\n            options.extension = parseInt(options.extension * 1000);\n            if (isNaN(options.extension) || transaction.raw_data.expiration + options.extension <= Date.now() + 3000)\n                return callback('Invalid extension provided');\n            transaction.raw_data.expiration += options.extension;\n        }\n\n        this.newTxID(transaction, { txLocal: options.txLocal }, callback)\n    }\n\n    async extendExpiration(transaction, extension, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.extendExpiration, transaction, extension, options);\n\n        this.alterTransaction(transaction, {extension, txLocal: options?.txLocal}, callback);\n    }\n\n    async addUpdateData(transaction, data, dataFormat = 'utf8', options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(dataFormat)) {\n            callback = dataFormat;\n            dataFormat = 'utf8';\n        } else if (utils.isObject(dataFormat)) {\n            options = dataFormat;\n            dataFormat = 'utf8';\n        }\n\n        if (!callback)\n            return this.injectPromise(this.addUpdateData, transaction, data, dataFormat, options);\n\n        this.alterTransaction(transaction, {data, dataFormat, txLocal: options?.txLocal}, callback);\n    }\n\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport { keccak256, toUtf8Bytes, recoverAddress, SigningKey, Signature } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\nimport Validator from \"../paramValidator\";\nimport injectpromise from 'injectpromise';\nimport { txCheck } from '../utils/transaction';\nimport { ecRecover } from '../utils/crypto';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\n// it should be: '\\x15TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.cache = {\n            contracts: {}\n        }\n        this.validator = new Validator(tronWeb);\n    }\n\n    _parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedCurrentBlock);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if (block === false)\n            return callback('No block identifier provided');\n\n        if (block == 'earliest')\n            block = 0;\n\n        if (block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if (isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', {\n            value: blockHash\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if (!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', {\n            num: parseInt(blockID)\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({transactions = []}) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index, callback = false) {\n        if (utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        this.getBlock(block).then(({transactions = false}) => {\n            if (!transactions)\n                callback('Transaction not found in block');\n            else if (typeof index == 'number') {\n                if (index >= 0 && index < transactions.length)\n                    callback(null, transactions[index]);\n                else\n                    callback('Invalid transaction index provided');\n            } else\n                callback(null, transactions);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: false}, callback)\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: true}, callback)\n    }\n\n    _getTransactionInfoById(transactionID, options, callback = false) {\n        if (!callback)\n            return this.injectPromise(this._getTransactionInfoById, transactionID, options);\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/gettransactioninfobyid`, {\n            value: transactionID\n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if (!['to', 'from', 'all'].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n\n        if (direction == 'all') {\n            try {\n                const [from, to] = await Promise.all([\n                    this.getTransactionsRelated(address, 'from', limit, offset),\n                    this.getTransactionsRelated(address, 'to', limit, offset)\n                ])\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => {\n                    return b.raw_data.timestamp - a.raw_data.timestamp\n                }));\n            } catch (ex) {\n                return callback(ex);\n            }\n        }\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({transaction}) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getAccountById(id = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: true}, callback);\n    }\n\n    getAccountInfoById(id, options, callback) {\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: id\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: id\n            }\n        ], callback))\n            return;\n\n        if (id.startsWith('0x')) {\n            id = id.slice(2);\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getaccountbyid`, {\n            account_id: id\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccountById(id, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: false}, callback);\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0}) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({assetIssue = false}) => {\n            if (!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this._parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({nodes = []}) => {\n            callback(null, nodes.map(({address: {host, port}}) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if (utils.isFunction(end)) {\n            callback = end;\n            end = 30;\n        }\n\n        if (utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if (!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if (!utils.isInteger(end) || end < start)\n            return callback('Invalid end of range provided');\n\n        if (end + 1 - start > 100)\n            return callback('Invalid range size, which should be no more than 100.');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', {\n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({block = []}) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({witnesses = []}) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if (!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({assetIssue = []}) => {\n                callback(null, assetIssue.map(token => this._parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({assetIssue = []}) => {\n            callback(null, assetIssue.map(token => this._parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({num = -1}) => {\n            if (num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (this.cache.contracts[contractAddress]) {\n            callback(null, this.cache.contracts[contractAddress]);\n            return;\n        }\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if (contract.Error)\n                return callback('Contract does not exist');\n            this.cache.contracts[contractAddress] = contract;\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    ecRecover(transaction) {\n        return Trx.ecRecover(transaction);\n    }\n\n    static ecRecover(transaction) {\n        if (!txCheck(transaction)) {\n            throw new Error('Invalid transaction');\n        }\n        if (!transaction.signature?.length) {\n            throw new Error('Transaction is not signed');\n        }\n        if (transaction.signature.length === 1) {\n            const tronAddress = ecRecover(transaction.txID, transaction.signature[0]);\n            return TronWeb.address.fromHex(tronAddress);\n        }\n        return transaction.signature.map((sig) => {\n            const tronAddress = ecRecover(transaction.txID, sig);\n            return TronWeb.address.fromHex(tronAddress);\n        });\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if (!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if (Trx.verifySignature(message, address, signature, useTronHeader))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifySignature(message, address, signature, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const recovered = recoverAddress(messageDigest, Signature.from(`0x${signature.replace(/^0x/, '')}`));\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    verifyMessageV2(message = false, signature = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessageV2, message, signature, options);\n\n        try {\n            const base58Address = Trx.verifyMessageV2(message, signature);\n            callback(null, base58Address);\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    static verifyMessageV2(message, signature) {\n        return utils.message.verifyMessage(message, signature);\n    }\n    \n    verifyTypedData(domain, types, value, signature, address = this.tronWeb.defaultAddress.base58, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyTypedData, domain, types, value, signature, address);\n\n        if (Trx.verifyTypedData(domain, types, value, signature, address))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifyTypedData(domain, types, value, signature, address) {\n        const messageDigest = utils._TypedDataEncoder.hash(domain, types, value);\n        const recovered = recoverAddress(messageDigest, Signature.from(`0x${signature.replace(/^0x/, '')}`));\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n\n        if (utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (utils.isString(transaction)) {\n\n            if (!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = Trx.signString(transaction, privateKey, useTronHeader)\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.tronWeb.address.toHex(\n                    this.tronWeb.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n\n                if (address !== this.tronWeb.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n\n                if (!txCheck(transaction)) {\n                    return callback('Invalid transaction');\n                }\n            }\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signString(message, privateKey, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const value = `0x${privateKey.replace(/^0x/, '')}`;\n        const signingKey = new SigningKey(value);\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n        const messageDigest = keccak256(new Uint8Array(messageBytes));\n        const signature = signingKey.sign(messageDigest);\n        const signatureHex = [\n            '0x',\n            signature.r.substring(2),\n            signature.s.substring(2),\n            Number(signature.v).toString(16)\n        ].join('');\n        return signatureHex\n    }\n\n    /**\n     * sign message v2 for verified header length\n     * \n     * @param {message to be signed, should be Bytes or string} message \n     * @param {privateKey for signature} privateKey \n     * @param {reserved} options\n     * @param {callback function} callback\n     */\n    signMessageV2(message, privateKey = this.tronWeb.defaultPrivateKey, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        \n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.signMessageV2, message, privateKey);\n\n        try {\n            const signatureHex = Trx.signMessageV2(message, privateKey);\n            return callback(null, signatureHex);\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signMessageV2(message, privateKey) {\n        return utils.message.signMessage(message, privateKey);\n    }\n\n    _signTypedData(domain, types, value, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._signTypedData, domain, types, value, privateKey);\n\n        try {\n            const signatureHex = Trx._signTypedData(domain, types, value, privateKey);\n            return callback(null, signatureHex);\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static _signTypedData(domain, types, value, privateKey) {\n        return utils.crypto._signTypedData(domain, types, value, privateKey);\n    }\n\n    async multiSign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, permissionId = false, callback = false) {\n\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        // If owner permission or permission id exists in transaction, do sign directly\n        // If no permission id inside transaction or user passes permission id, use old way to reset permission id\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address)\n                    foundKey = true;\n            });\n\n            if (!foundKey)\n                return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                if (permissionId > 0) {\n                    transaction.raw_data.contract[0].Permission_id = permissionId;\n                }\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n\n        // sign\n        try {\n            if (!txCheck(transaction)) {\n                return callback('Invalid transaction');\n            }\n            return callback(null, utils.crypto.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async getApprovedList(transaction, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getApprovedList, transaction);\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getapprovedlist',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async getSignWeight(transaction, permissionId, callback = false) {\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = undefined;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getSignWeight, transaction, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        if (utils.isInteger(permissionId)) {\n            transaction.raw_data.contract[0].Permission_id = parseInt(permissionId);\n        } else if (typeof transaction.raw_data.contract[0].Permission_id !== 'number') {\n            transaction.raw_data.contract[0].Permission_id = 0;\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getsignweight',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendRawTransaction(signedTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction, options);\n\n        if (!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        if (!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        ).then(result => {\n            if (result.result)\n                result.transaction = signedTransaction;\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendHexTransaction(signedHexTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendHexTransaction, signedHexTransaction, options);\n\n        if (!utils.isHex(signedHexTransaction))\n            return callback('Invalid hex transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        const params = {\n            transaction: signedHexTransaction\n        }\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasthex',\n             params,\n            'post'\n        ).then(result => {\n            if (result.result) {\n                result.transaction = JSON.parse(result.transaction)\n                result.hexTransaction = signedHexTransaction;\n            }\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address, receiverAddress);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address, receiverAddress);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    broadcastHex(...args) {\n        return this.sendHexTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if (!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', {\n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({proposals = []}) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({chainParameter = []}) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', {\n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the amount of resources of a specific resourceType delegated by fromAddress to toAddress\n     */\n    getDelegatedResourceV2(fromAddress = this.tronWeb.defaultAddress.hex, toAddress = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(toAddress)) {\n            callback = toAddress;\n            toAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(fromAddress)) {\n            callback = fromAddress;\n            fromAddress = this.tronWeb.defaultAddress.hex;\n            toAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getDelegatedResourceV2, fromAddress, toAddress, options);\n\n        if (!this.tronWeb.isAddress(fromAddress))\n            return callback('Invalid address provided');\n\n        if (!this.tronWeb.isAddress(toAddress))\n            return callback('Invalid address provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourcev2`, {\n            fromAddress: toHex(fromAddress),\n            toAddress: toHex(toAddress)\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the resource delegation index by an account\n     */\n    getDelegatedResourceAccountIndexV2(address = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n        \n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getDelegatedResourceAccountIndexV2, address, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getdelegatedresourceaccountindexv2`, {\n            value: toHex(address)\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the amount of delegatable resources of the specified resource Type for target address, unit is sun.\n     */\n    getCanDelegatedMaxSize(address = this.tronWeb.defaultAddress.hex, resource = 'BANDWIDTH', options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n        \n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if (!callback)\n            return this.injectPromise(this.getCanDelegatedMaxSize, address, resource, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        if (this.validator.notValid([\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'\n            }\n        ], callback))\n            return;\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getcandelegatedmaxsize`, {\n            owner_address: toHex(address),\n            type: resource === \"ENERGY\" ? 1 : 0\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Remaining times of available unstaking API\n     */\n    getAvailableUnfreezeCount(address = this.tronWeb.defaultAddress.hex, options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAvailableUnfreezeCount, address, options);\n        \n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getavailableunfreezecount`, {\n            owner_address: toHex(address),\n        }, 'post').then(data => {\n            callback(null, data);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Query the withdrawable balance at the specified timestamp\n     */\n    getCanWithdrawUnfreezeAmount(address = this.tronWeb.defaultAddress.hex, timestamp = Date.now(), options = { confirmed: true }, callback = false) {\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = { confirmed: true };\n        }\n\n        if(utils.isFunction(timestamp)) {\n            callback = timestamp;\n            timestamp = Date.now();\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getCanWithdrawUnfreezeAmount, address, timestamp, options);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(timestamp) || timestamp < 0)\n            return callback('Invalid timestamp provided');\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getcanwithdrawunfreezeamount`, {\n            owner_address: toHex(address),\n            timestamp: timestamp\n        }, 'post').then(data => {\n            callback(null, data);\n        }).catch(err => callback(err));\n\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if (!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            id: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 10;\n        }\n        if (!callback)\n            return this.injectPromise(this.listExchangesPaginated, limit, offset);\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedexchangelist', {\n            limit,\n            offset\n        }, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get info about thre node\n     */\n    getNodeInfo(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getNodeInfo);\n\n        this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post').then(info => {\n            callback(null, info);\n        }, 'post').catch(err => callback(err));\n    }\n\n\n    getTokenListByName(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenListByName, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelistbyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (Array.isArray(token.assetIssue)) {\n                callback(null, token.assetIssue.map(t => this._parseToken(t)));\n            } else if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    getTokenByID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenByID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyid', {\n            value: tokenID\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    async getReward(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getReward(address, options, callback);\n    }\n\n    async getUnconfirmedReward(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getReward(address, options, callback);\n    }\n\n    async getBrokerage(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async getUnconfirmedBrokerage(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async _getReward(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getReward, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getReward`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.reward === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.reward);\n            }).catch(err => callback(err));\n    }\n\n\n    async _getBrokerage(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getBrokerage, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getBrokerage`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.brokerage === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.brokerage);\n            }).catch(err => callback(err));\n    }\n\n    async getBandwidthPrices() {\n        return this.tronWeb.fullNode.request('wallet/getbandwidthprices', {}, 'post')\n            .then((result = {}) => {\n                if (typeof result.prices === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.prices;\n            });\n    }\n\n    async getEnergyPrices() {\n        return this.tronWeb.fullNode.request('wallet/getenergyprices', {}, 'post')\n            .then((result = {}) => {\n                if (typeof result.prices === 'undefined') {\n                    throw new Error('Not found.');\n                }\n\n                return result.prices;\n            });\n    }\n};\n","import utils from 'utils';\nimport {encodeParamsV2ByABI, decodeParamsV2ByABI} from 'utils/abi';\nimport injectpromise from 'injectpromise';\n\nconst getFunctionSelector = abi => {\n    abi.stateMutability = abi.stateMutability ? abi.stateMutability.toLowerCase() : 'nonpayable';\n    abi.type = abi.type ? abi.type.toLowerCase() : '';\n    if(abi.type === 'fallback' || abi.type === 'receive') return '0x';\n    let iface = new utils.ethersUtils.Interface([abi]);\n    if(abi.type === 'event') {\n      return iface.getEvent(abi.name).format(utils.ethersUtils.FormatTypes.sighash);\n    }\n    return iface.getFunction(abi.name).format(utils.ethersUtils.FormatTypes.sighash);\n}\n\nconst decodeOutput = (abi, output) => {\n    return decodeParamsV2ByABI(abi, output)\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = injectpromise(this);\n\n        this.defaultOptions = {\n            feeLimit: this.tronWeb.feeLimit,\n            callValue: 0,\n            userFeePercentage: 100,\n            shouldPollResponse: false, // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n      let rawParameter = '';\n      if(this.abi && !/event/i.test(this.abi.type)) {\n          rawParameter = encodeParamsV2ByABI(this.abi, args);\n      }\n      return {\n          call: (options = {}, callback = false) => {\n              if (utils.isFunction(options)) {\n                  callback = options;\n                  options = {};\n              }\n              options = {\n                ...options,\n                rawParameter\n              };\n\n              return this._call([], [], options, callback);\n          },\n          send: (options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) => {\n              if (utils.isFunction(privateKey)) {\n                  callback = privateKey;\n                  privateKey = this.tronWeb.defaultPrivateKey;\n              }\n              if (utils.isFunction(options)) {\n                callback = options;\n                options = {};\n              }\n              options = {\n                ...options,\n                rawParameter\n              };\n\n              return this._send([], [], options, privateKey, callback);\n          },\n          watch: (...methodArgs) => this._watch(...methodArgs)\n      }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if (types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n            _isConstant: true\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options,\n            parameters,\n            options.from ? this.tronWeb.address.toHex(options.from) : false,\n            (err, transaction) => {\n                if (err)\n                    return callback(err);\n\n                if (!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n\n                    const len = transaction.constant_result[0].length\n                    if (len === 0 || len % 64 === 8) {\n                        let msg = 'The call has been reverted or has thrown an error.'\n                        if (len !== 0) {\n                            msg += ' Error message: '\n                            let msg2 = ''\n                            let chunk = transaction.constant_result[0].substring(8)\n                            for (let i = 0; i < len - 8; i += 64) {\n                                msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64))\n                            }\n                            msg += msg2.replace(/(\\u0000|\\u000b|\\f)+/g, ' ').replace(/ +/g, ' ').replace(/\\s+$/g, '');\n                        }\n                        return callback(msg)\n                    }\n\n                    let output = decodeOutput(this.abi, '0x' + transaction.constant_result[0]);\n\n                    if (output.length === 1 && Object.keys(output).length === 1) {\n                        output = output[0];\n                    }\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if (types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if (!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.tronWeb.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index === (options.pollTimes || 20)) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result === 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.abi, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1 && Object.keys(decoded).length === 1) {\n                    decoded = decoded[0];\n                }\n\n                if (options.keepTxID) {\n                    return callback(null, [signedTransaction.txID, decoded]);\n                }\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.abi.type || !/event/i.test(this.abi.type))\n            return callback('Invalid method type for event watching');\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        let since = Date.now() - 1000;\n\n        const getEvents = async () => {\n            try {\n\n                const params = {\n                    since,\n                    eventName: this.name,\n                    sort: 'block_timestamp',\n                    blockNumber: 'latest',\n                    filters: options.filters\n                }\n\n                if(options.size) {\n                    params.size = options.size;\n                }\n                \n                if (options.resourceNode) {\n                    if (/full/i.test(options.resourceNode))\n                        params.onlyUnconfirmed = true\n                    else\n                        params.onlyConfirmed = true\n                }\n\n                const events = await this.tronWeb.event.getEventsByContractAddress(this.contract.address, params);\n                const [latestEvent] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if (options.resourceNode && event.resourceNode &&\n                        options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                        return false\n                    }\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate)\n                        return false;\n\n                    if (!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if (latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener,\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\nimport injectpromise from 'injectpromise';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if (this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.event.getEventsByContractAddress(this.address, options);\n        const [latestEvent] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if (options.resourceNode && event.resourceNode &&\n                options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                return false\n            }\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if (duplicate)\n                return false;\n\n            if (!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if (latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (this.eventListener)\n            clearInterval(this.eventListener);\n\n        if (!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if (!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if (!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            // Don't build a method for error function.\n            if (!func.type || /constructor|error/i.test(func.type))\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if (!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if (!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if (!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (contract.code)\n                return callback({\n                    error: contract.code,\n                    message: this.tronWeb.toUtf8(contract.message)\n                })\n\n            await utils.sleep(3000);\n            return this.at(signedTransaction.contract_address, callback);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if (!contract.contract_address)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi ? contract.abi.entrys ? contract.abi.entrys : [] : []);\n\n            return callback(null, this);\n        } catch (ex) {\n            if (ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if (!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport semver from 'semver';\n\nexport default class Plugin {\n\n    constructor(tronWeb = false, options = {}) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.pluginNoOverride = ['register'];\n        this.disablePlugins = options.disablePlugins;\n    }\n\n    register(Plugin, options) {\n        let pluginInterface = {\n            requires: '0.0.0',\n            components: {}\n        }\n        let result = {\n            libs: [],\n            plugged: [],\n            skipped: []\n        }\n        if (this.disablePlugins) {\n            result.error = 'This instance of TronWeb has plugins disabled.'\n            return result;\n        }\n        const plugin = new Plugin(this.tronWeb)\n        if (utils.isFunction(plugin.pluginInterface)) {\n            pluginInterface = plugin.pluginInterface(options)\n        }\n        if (semver.satisfies(TronWeb.version, pluginInterface.requires)) {\n            if (pluginInterface.fullClass) {\n                // plug the entire class at the same level of tronWeb.trx\n                let className = plugin.constructor.name\n                let classInstanceName = className.substring(0, 1).toLowerCase() + className.substring(1)\n                if (className !== classInstanceName) {\n                    TronWeb[className] = Plugin\n                    this.tronWeb[classInstanceName] = plugin\n                    result.libs.push(className)\n                }\n            } else {\n                // plug methods into a class, like trx\n                for (let component in pluginInterface.components) {\n                    if (!this.tronWeb.hasOwnProperty(component)) {\n                        continue\n                    }\n                    let methods = pluginInterface.components[component]\n                    let pluginNoOverride = this.tronWeb[component].pluginNoOverride || []\n                    for (let method in methods) {\n                        if (method === 'constructor' || (this.tronWeb[component][method] &&\n                            (pluginNoOverride.includes(method) // blacklisted methods\n                                || /^_/.test(method)) // private methods\n                        )) {\n                            result.skipped.push(method)\n                            continue\n                        }\n                        this.tronWeb[component][method] = methods[method].bind(this.tronWeb[component])\n                        result.plugged.push(method)\n                    }\n                }\n            }\n        } else {\n            throw new Error('The plugin is not compatible with this version of TronWeb')\n        }\n        return result\n    }\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"querystring-es3\");","import TronWeb from 'index';\nimport utils from 'utils';\nimport providers from \"./providers\";\nimport querystring from \"querystring-es3\";\nimport injectpromise from 'injectpromise';\n\nexport default class Event {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb))\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n    }\n\n    setServer(eventServer = false, healthcheck = 'healthcheck') {\n        if (!eventServer)\n            return this.tronWeb.eventServer = false;\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        if (!this.tronWeb.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.tronWeb.eventServer = eventServer;\n        this.tronWeb.eventServer.isConnected = () => this.tronWeb.eventServer.request(healthcheck).then(() => true).catch(() => false);\n    }\n\n    getEventsByContractAddress(contractAddress = false, options = {}, callback = false) {\n\n        let {\n            sinceTimestamp,\n            since,\n            fromTimestamp,\n            eventName,\n            blockNumber,\n            size,\n            page,\n            onlyConfirmed,\n            onlyUnconfirmed,\n            previousLastEventFingerprint,\n            previousFingerprint,\n            fingerprint,\n            rawResponse,\n            sort,\n            filters\n        } = Object.assign({\n            sinceTimestamp: 0,\n            eventName: false,\n            blockNumber: false,\n            size: 20,\n            page: 1\n        }, options)\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByContractAddress, contractAddress, options);\n\n        fromTimestamp = fromTimestamp || sinceTimestamp || since;\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        const routeParams = [];\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n\n        if (typeof fromTimestamp !== 'undefined' && !utils.isInteger(fromTimestamp))\n            return callback('Invalid fromTimestamp provided');\n\n        if (!utils.isInteger(size))\n            return callback('Invalid size provided');\n\n        if (size > 200) {\n            console.warn('Defaulting to maximum accepted size: 200');\n            size = 200;\n        }\n\n        if (!utils.isInteger(page))\n            return callback('Invalid page provided');\n\n        if (blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if (contractAddress)\n            routeParams.push(this.tronWeb.address.fromHex(contractAddress));\n\n        if (eventName)\n            routeParams.push(eventName);\n\n        if (blockNumber)\n            routeParams.push(blockNumber);\n\n        const qs = {\n            size,\n            page\n        }\n\n        if (typeof filters === 'object' && Object.keys(filters).length > 0) {\n            qs.filters = JSON.stringify(filters);\n        }\n\n        if (fromTimestamp) {\n            qs.fromTimestamp = qs.since = fromTimestamp;\n        }\n\n        if (onlyConfirmed)\n            qs.only_confirmed = onlyConfirmed\n\n        if (onlyUnconfirmed && !onlyConfirmed)\n            qs.only_unconfirmed = onlyUnconfirmed\n\n        if (sort)\n            qs.sort = sort\n\n        fingerprint = fingerprint || previousFingerprint || previousLastEventFingerprint\n        if (fingerprint)\n            qs.fingerprint = fingerprint\n\n        return this.tronWeb.eventServer.request(`event/contract/${routeParams.join('/')}?${querystring.stringify(qs)}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n\n    getEventsByTransactionID(transactionID = false, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByTransactionID, transactionID, options);\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        return this.tronWeb.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                options.rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n}\n\n","import injectpromise from 'injectpromise';\nimport Validator from 'paramValidator';\n\nexport default class SideChain {\n    constructor(sideOptions, TronWeb = false, mainchain = false, privateKey = false) {\n        this.mainchain = mainchain;\n        const { fullHost, fullNode, solidityNode, eventServer, mainGatewayAddress, sideGatewayAddress, sideChainId } = sideOptions;\n        this.sidechain = new TronWeb(fullHost || fullNode, fullHost || solidityNode, fullHost || eventServer, privateKey);\n        this.isAddress = this.mainchain.isAddress;\n        this.utils = this.mainchain.utils;\n        this.setMainGatewayAddress(mainGatewayAddress);\n        this.setSideGatewayAddress(sideGatewayAddress);\n        this.setChainId(sideChainId);\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(this.sidechain);\n\n        const self = this;\n        this.sidechain.trx.sign = (...args) => {\n            return self.sign(...args);\n        };\n        this.sidechain.trx.multiSign = (...args) => {\n            return self.multiSign(...args);\n        };\n\n        console.warn(\"TronWeb: 'tronWeb.sidechain' is deprecated and may be removed in the future. Please use the 'sunweb' sdk instead. For more information, see: https://github.com/tronprotocol/sun-network/tree/develop/js-sdk\");\n    }\n    setMainGatewayAddress(mainGatewayAddress) {\n        if (!this.isAddress(mainGatewayAddress))\n            throw new Error('Invalid main gateway address provided');\n        this.mainGatewayAddress = mainGatewayAddress;\n    }\n\n    setSideGatewayAddress(sideGatewayAddress) {\n        if (!this.isAddress(sideGatewayAddress))\n            throw new Error('Invalid side gateway address provided');\n        this.sideGatewayAddress = sideGatewayAddress;\n    }\n\n    setChainId(sideChainId) {\n        if (!this.utils.isString(sideChainId) || !sideChainId)\n            throw new Error('Invalid side chainId provided');\n        this.chainId = sideChainId;\n    }\n\n    signTransaction(priKeyBytes, transaction) {\n        if (typeof priKeyBytes === 'string') {\n            priKeyBytes = this.utils.code.hexStr2byteArray(priKeyBytes);\n        }\n        let chainIdByteArr = this.utils.code.hexStr2byteArray(this.chainId);\n\n        let byteArr = this.utils.code.hexStr2byteArray(transaction.txID).concat(chainIdByteArr);\n        let byteArrHash = this.sidechain.utils.ethersUtils.sha256(byteArr);\n\n        const signature = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(byteArrHash.replace(/^0x/, '')), priKeyBytes);\n\n        if (Array.isArray(transaction.signature)) {\n            if (!transaction.signature.includes(signature))\n                transaction.signature.push(signature);\n        } else\n            transaction.signature = [signature];\n        return transaction;\n    }\n\n    async multiSign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, permissionId = false, callback = false) {\n        if (this.utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback) return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!this.utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract) return callback('Invalid transaction provided');\n\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.sidechain.trx.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address) foundKey = true;\n            });\n\n            if (!foundKey) return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                transaction.raw_data.contract[0].Permission_id = permissionId;\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n        // sign\n        try {\n            return callback(null, this.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async sign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n        if (this.utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.sidechain.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (this.utils.isString(transaction)) {\n\n            if (!this.utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = this.sidechain.trx.signString(transaction, privateKey, useTronHeader);\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!this.utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.sidechain.address.toHex(\n                    this.sidechain.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n                if (address !== this.sidechain.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                this.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    /**\n    * deposit asset to sidechain\n    */\n    async depositTrx(\n        callValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrx, callValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(depositFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc10(\n        tokenId,\n        tokenValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc10, tokenId, tokenValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenId,\n            tokenValue,\n            feeLimit,\n            ...options,\n            callValue: depositFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRC10(tokenId, tokenValue).send(options, privateKey);\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc(\n        functionSelector,\n        num,\n        fee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc, functionSelector, num, fee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'fee',\n                type: 'integer',\n                value: fee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: fee,\n            tokenId: '',\n            tokenValue: 0\n        };\n        try {\n            let result = null;\n            if (functionSelector === 'approve') {\n                const approveInstance = await this.mainchain.contract().at(contractAddress);\n                result = await approveInstance.approve(this.mainGatewayAddress, num).send(options, privateKey);\n            } else {\n                const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n                switch (functionSelector) {\n                    case 'depositTRC20':\n                        result = await contractInstance.depositTRC20(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'depositTRC721':\n                        result = await contractInstance.depositTRC721(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'retryDeposit':\n                        result = await contractInstance.retryDeposit(num).send(options, privateKey);\n                        break;\n                    case 'retryMapping':\n                        result = await contractInstance.retryMapping(num).send(options, privateKey);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async approveTrc20(\n        num,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async approveTrc721(\n        id,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc20(\n        num,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC20';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc721(\n        id,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC721';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    /**\n     * mapping asset TRC20 or TRC721 to DAppChain\n     */\n    async mappingTrc(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        functionSelector,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.mappingTrc, trxHash, mappingFee, feeLimit, functionSelector, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'trxHash',\n                type: 'not-empty-string',\n                value: trxHash\n            },\n            {\n                name: 'mappingFee',\n                type: 'integer',\n                value: mappingFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        trxHash = trxHash.startsWith('0x') ? trxHash : ('0x' + trxHash);\n        options = {\n            feeLimit,\n            ...options,\n            callValue: mappingFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            let result = null;\n            if (functionSelector === 'mappingTRC20') {\n                result = await contractInstance.mappingTRC20(trxHash).send(options, privateKey);\n            } else if (functionSelector === 'mappingTRC721') {\n                result = await contractInstance.mappingTRC721(trxHash).send(options, privateKey);\n            } else {\n                callback(new Error('type must be trc20 or trc721'));\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async mappingTrc20(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC20';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async mappingTrc721(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC721';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    /**\n     * withdraw trx from sidechain to mainchain\n     */\n    async withdrawTrx(\n        callValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrx, callValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(withdrawFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc10(\n        tokenId,\n        tokenValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc10, tokenId, tokenValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenValue,\n            tokenId,\n            callValue: withdrawFee,\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRC10(tokenId, tokenValue).send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc(\n        functionSelector,\n        numOrId,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc, functionSelector, numOrId, withdrawFee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'numOrId',\n                type: 'integer',\n                value: numOrId,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: withdrawFee\n        };\n        const parameters = [\n            {\n                type: 'uint256',\n                value: numOrId\n            }\n        ];\n\n        try {\n            const address = privateKey ? this.sidechain.address.fromPrivateKey(privateKey) : this.sidechain.defaultAddress.base58;\n            const transaction = await this.sidechain.transactionBuilder.triggerSmartContract(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                this.sidechain.address.toHex(address)\n            );\n            if (!transaction.result || !transaction.result.result) {\n                return callback('Unknown error: ' + JSON.stringify(transaction.transaction, null, 2));\n            }\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.sidechain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.sidechain.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.sidechain.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!this.utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc20(\n        num,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            num,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async withdrawTrc721(\n        id,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            id,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n\n    async injectFund(\n        num,\n        feeLimit,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.injectFund, num, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n\n        try {\n            const address = this.sidechain.address.fromPrivateKey(privateKey);\n            const hexAddress = this.sidechain.address.toHex(address);\n            const transaction = await this.sidechain.fullNode.request('/wallet/fundinject', {\n                owner_address: hexAddress,\n                amount: num\n            }, 'post');\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.mainchain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n            return callback(null, signedTransaction.txID);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async retryWithdraw(\n        nonce,\n        retryWithdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.sidechain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryWithdraw(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            nonce,\n            retryWithdrawFee,\n            feeLimit,\n            this.sideGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryDeposit(\n        nonce,\n        retryDepositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryDeposit';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryDepositFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryMapping(\n        nonce,\n        retryMappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryMapping';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryMappingFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n}\n\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\nimport Package from '../package.json';\nimport semver from 'semver';\nimport injectpromise from 'injectpromise';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\nimport Plugin from 'lib/plugin';\nimport Event from 'lib/event';\nimport SideChain from 'lib/sidechain';\nimport { keccak256 } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX, TRON_BIP39_PATH_INDEX_0 } from 'utils/address';\n\nconst { version } = Package;\n\nconst DEFAULT_VERSION = '4.7.1';\n\nconst FEE_LIMIT = 150000000;\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n    static Plugin = Plugin;\n    static Event = Event;\n    static version = version;\n    static utils = utils;\n\n    constructor(options = false,\n        // for retro-compatibility:\n        solidityNode = false, eventServer = false, sideOptions = false, privateKey = false) {\n        super();\n\n        let fullNode;\n        let headers = false;\n        let eventHeaders = false;\n\n        if (typeof options === 'object' && (options.fullNode || options.fullHost)) {\n            fullNode = options.fullNode || options.fullHost;\n            sideOptions = solidityNode;\n            solidityNode = options.solidityNode || options.fullHost;\n            eventServer = options.eventServer || options.fullHost;\n            headers = options.headers || false;\n            eventHeaders = options.eventHeaders || headers;\n            privateKey = options.privateKey;\n        } else {\n            fullNode = options;\n        }\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.event = new Event(this);\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.plugin = new Plugin(this, options);\n        this.utils = utils;\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n\n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'createAccount', 'address', 'version', 'createRandom', 'fromMnemonic'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n        // for sidechain\n        if (typeof sideOptions === 'object' && (sideOptions.fullNode || sideOptions.fullHost)) {\n            this.sidechain = new SideChain(sideOptions, TronWeb, this, privateKey);\n        } else {\n            privateKey = privateKey || sideOptions;\n        }\n\n        if (privateKey)\n            this.setPrivateKey(privateKey);\n        this.fullnodeVersion = DEFAULT_VERSION;\n        this.feeLimit = FEE_LIMIT;\n        this.injectPromise = injectpromise(this);\n\n        if (headers) {\n            this.setFullNodeHeader(headers);\n        }\n\n        if (eventHeaders) {\n            this.setEventHeader(eventHeaders);\n        }\n    }\n\n    async getFullnodeVersion() {\n        try {\n            const nodeInfo = await this.trx.getNodeInfo()\n            this.fullnodeVersion = nodeInfo.configNodeInfo.codeVersion\n            if (this.fullnodeVersion.split('.').length === 2) {\n                this.fullnodeVersion += '.0';\n            }\n        } catch (err) {\n            this.fullnodeVersion = DEFAULT_VERSION;\n        }\n    }\n\n    setDefaultBlock(blockID = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if (!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if (!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if (this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    fullnodeSatisfies(version) {\n        return semver.satisfies(this.fullnodeVersion, version);\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(...params) {\n        this.event.setServer(...params)\n    }\n\n    setHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n    }\n\n    setFullNodeHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n    }\n\n    setEventHeader (headers = {}) {\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n        this.setEventServer(eventServer);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n\n    getEventResult(...params) {\n\n        if (typeof params[1] !== 'object') {\n            params[1] = {\n                sinceTimestamp: params[1] || 0,\n                eventName: params[2] || false,\n                blockNumber: params[3] || false,\n                size: params[4] || 20,\n                page: params[5] || 1\n            }\n            params.splice(2, 4)\n\n            // callback:\n            if (!utils.isFunction(params[2])) {\n\n                if (utils.isFunction(params[1].page)) {\n                    params[2] = params[1].page;\n                    params[1].page = 1;\n                } else if (utils.isFunction(params[1].size)) {\n                    params[2] = params[1].size;\n                    params[1].size = 20;\n                    params[1].page = 1;\n                }\n            }\n        }\n\n        return this.event.getEventsByContractAddress(...params);\n    }\n\n    getEventByTransactionID(...params) {\n        return this.event.getEventsByTransactionID(...params)\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if (!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address.replace(/^0x/, ADDRESS_PREFIX))\n                );\n            },\n            toHex(address) {\n                if (utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, ADDRESS_PREFIX);\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey, strict = false) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey, strict);\n                } catch {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n    }\n\n    static toHex(val) {\n        if (utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if (typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if ((!isFinite(val)) || /^\\s*$/.test(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if (utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i += 2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if (utils.isBigNumber(amount))\n            return amount;\n\n        if (utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if (!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if (address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch (err) {\n                return false;\n            }\n        }\n        try {\n            return utils.crypto.isAddressValid(address);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static async createAccount() {\n        const account = utils.accounts.generateAccount();\n\n        return account;\n    }\n\n    static createRandom(options) {\n        const account = utils.accounts.generateRandom(options);\n\n        return account\n    }\n\n    static fromMnemonic(mnemonic, path = TRON_BIP39_PATH_INDEX_0, wordlist = null) {\n        const account = utils.accounts.generateAccountWithMnemonic(mnemonic, path, wordlist);\n\n        return account\n    }\n\n    async isConnected(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.isConnected);\n\n        return callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n"],"names":["leafPrototypes","getProto","jspb","require","goog","global","globalThis","window","self","this","call","Function","google_protobuf_any_pb","object","extend","proto","exportSymbol","TronWebProto","AccountId","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","Vote","Proposal","repeatedFields_","Exchange","Account","Frozen","AccountResource","Key","DelegatedResource","authority","Permission","Witness","Votes","MarketOrderDetail","Transaction","Contract","Result","raw","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","name","getName_asB64","address","getAddress_asB64","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readBytes","setName","setAddress","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","getName_asU8","length","writeBytes","getAddress_asU8","getName","getFieldWithDefault","bytesAsB64","bytesAsU8","setProto3BytesField","getAddress","voteAddress","getVoteAddress_asB64","voteCount","setVoteAddress","readInt64","setVoteCount","getVoteAddress_asU8","getVoteCount","writeInt64","getVoteAddress","setProto3IntField","proposalId","proposerAddress","getProposerAddress_asB64","parametersMap","getParametersMap","expirationTime","createTime","approvalsList","getApprovalsList_asB64","state","setProposalId","setProposerAddress","readMessage","Map","setExpirationTime","setCreateTime","addApprovals","readEnum","setState","getProposalId","getProposerAddress_asU8","getLength","getExpirationTime","getCreateTime","getApprovalsList_asU8","writeRepeatedBytes","getState","writeEnum","State","PENDING","DISAPPROVED","APPROVED","CANCELED","getProposerAddress","opt_noLazyCreate","getMapField","clearParametersMap","clear","getApprovalsList","getRepeatedField","bytesListAsB64","bytesListAsU8","setApprovalsList","setField","opt_index","addToRepeatedField","clearApprovalsList","setProto3EnumField","exchangeId","creatorAddress","getCreatorAddress_asB64","firstTokenId","getFirstTokenId_asB64","firstTokenBalance","secondTokenId","getSecondTokenId_asB64","secondTokenBalance","setExchangeId","setCreatorAddress","setFirstTokenId","setFirstTokenBalance","setSecondTokenId","setSecondTokenBalance","getExchangeId","getCreatorAddress_asU8","getFirstTokenId_asU8","getFirstTokenBalance","getSecondTokenId_asU8","getSecondTokenBalance","getCreatorAddress","getFirstTokenId","getSecondTokenId","accountName","getAccountName_asB64","type","balance","votesList","toObjectList","getVotesList","assetMap","getAssetMap","assetv2Map","getAssetv2Map","frozenList","getFrozenList","netUsage","acquiredDelegatedFrozenBalanceForBandwidth","delegatedFrozenBalanceForBandwidth","oldTronPower","tronPower","getTronPower","assetOptimized","getBooleanFieldWithDefault","latestOprationTime","allowance","latestWithdrawTime","code","getCode_asB64","isWitness","isCommittee","frozenSupplyList","getFrozenSupplyList","assetIssuedName","getAssetIssuedName_asB64","assetIssuedId","getAssetIssuedId_asB64","latestAssetOperationTimeMap","getLatestAssetOperationTimeMap","latestAssetOperationTimev2Map","getLatestAssetOperationTimev2Map","freeNetUsage","freeAssetNetUsageMap","getFreeAssetNetUsageMap","freeAssetNetUsagev2Map","getFreeAssetNetUsagev2Map","latestConsumeTime","latestConsumeFreeTime","accountId","getAccountId_asB64","accountResource","getAccountResource","codehash","getCodehash_asB64","ownerPermission","getOwnerPermission","witnessPermission","getWitnessPermission","activePermissionList","getActivePermissionList","setAccountName","setType","setBalance","addVotes","readString","addFrozen","setNetUsage","setAcquiredDelegatedFrozenBalanceForBandwidth","setDelegatedFrozenBalanceForBandwidth","setOldTronPower","setTronPower","readBool","setAssetOptimized","setLatestOprationTime","setAllowance","setLatestWithdrawTime","setCode","setIsWitness","setIsCommittee","addFrozenSupply","setAssetIssuedName","setAssetIssuedId","setFreeNetUsage","setLatestConsumeTime","setLatestConsumeFreeTime","setAccountId","setAccountResource","setCodehash","setOwnerPermission","setWitnessPermission","addActivePermission","getAccountName_asU8","getType","getBalance","writeRepeatedMessage","writeString","getNetUsage","getAcquiredDelegatedFrozenBalanceForBandwidth","getDelegatedFrozenBalanceForBandwidth","getOldTronPower","writeMessage","getAssetOptimized","writeBool","getLatestOprationTime","getAllowance","getLatestWithdrawTime","getCode_asU8","getIsWitness","getIsCommittee","getAssetIssuedName_asU8","getAssetIssuedId_asU8","getFreeNetUsage","getLatestConsumeTime","getLatestConsumeFreeTime","getAccountId_asU8","getCodehash_asU8","frozenBalance","expireTime","setFrozenBalance","setExpireTime","getFrozenBalance","getExpireTime","energyUsage","frozenBalanceForEnergy","getFrozenBalanceForEnergy","latestConsumeTimeForEnergy","acquiredDelegatedFrozenBalanceForEnergy","delegatedFrozenBalanceForEnergy","storageLimit","storageUsage","latestExchangeStorageTime","setEnergyUsage","setFrozenBalanceForEnergy","setLatestConsumeTimeForEnergy","setAcquiredDelegatedFrozenBalanceForEnergy","setDelegatedFrozenBalanceForEnergy","setStorageLimit","setStorageUsage","setLatestExchangeStorageTime","getEnergyUsage","getLatestConsumeTimeForEnergy","getAcquiredDelegatedFrozenBalanceForEnergy","getDelegatedFrozenBalanceForEnergy","getStorageLimit","getStorageUsage","getLatestExchangeStorageTime","getWrapperField","setWrapperField","clearFrozenBalanceForEnergy","hasFrozenBalanceForEnergy","getField","getAccountName","getRepeatedWrapperField","setVotesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearVotesList","clearAssetMap","clearAssetv2Map","setFrozenList","clearFrozenList","clearTronPower","hasTronPower","setProto3BooleanField","getCode","setFrozenSupplyList","clearFrozenSupplyList","getAssetIssuedName","getAssetIssuedId","clearLatestAssetOperationTimeMap","clearLatestAssetOperationTimev2Map","clearFreeAssetNetUsageMap","clearFreeAssetNetUsagev2Map","getAccountId","clearAccountResource","hasAccountResource","getCodehash","clearOwnerPermission","hasOwnerPermission","clearWitnessPermission","hasWitnessPermission","setActivePermissionList","clearActivePermissionList","weight","setWeight","getWeight","from","getFrom_asB64","to","getTo_asB64","frozenBalanceForBandwidth","expireTimeForBandwidth","expireTimeForEnergy","setFrom","setTo","setFrozenBalanceForBandwidth","setExpireTimeForBandwidth","setExpireTimeForEnergy","getFrom_asU8","getTo_asU8","getFrozenBalanceForBandwidth","getExpireTimeForBandwidth","getExpireTimeForEnergy","getFrom","getTo","account","getAccount","permissionName","getPermissionName_asB64","setAccount","setPermissionName","getPermissionName_asU8","clearAccount","hasAccount","getPermissionName","id","threshold","parentId","operations","getOperations_asB64","keysList","getKeysList","readInt32","setId","setThreshold","setParentId","setOperations","addKeys","getId","writeInt32","getThreshold","getParentId","getOperations_asU8","PermissionType","OWNER","WITNESS","ACTIVE","setProto3StringField","getOperations","setKeysList","clearKeysList","votecount","pubkey","getPubkey_asB64","url","totalproduced","totalmissed","latestblocknum","latestslotnum","isjobs","setVotecount","setPubkey","setUrl","setTotalproduced","setTotalmissed","setLatestblocknum","setLatestslotnum","setIsjobs","getVotecount","getPubkey_asU8","getUrl","getTotalproduced","getTotalmissed","getLatestblocknum","getLatestslotnum","getIsjobs","getPubkey","oldVotesList","getOldVotesList","newVotesList","getNewVotesList","addOldVotes","addNewVotes","setOldVotesList","clearOldVotesList","setNewVotesList","clearNewVotesList","makerorderid","getMakerorderid_asB64","takerorderid","getTakerorderid_asB64","fillsellquantity","fillbuyquantity","setMakerorderid","setTakerorderid","setFillsellquantity","setFillbuyquantity","getMakerorderid_asU8","getTakerorderid_asU8","getFillsellquantity","getFillbuyquantity","getMakerorderid","getTakerorderid","rawData","getRawData","signatureList","getSignatureList_asB64","retList","getRetList","setRawData","addSignature","addRet","getSignatureList_asU8","parameter","getParameter","Any","provider","getProvider_asB64","contractname","getContractname_asB64","permissionId","setParameter","setProvider","setContractname","setPermissionId","getProvider_asU8","getContractname_asU8","getPermissionId","ContractType","ACCOUNTCREATECONTRACT","TRANSFERCONTRACT","TRANSFERASSETCONTRACT","VOTEASSETCONTRACT","VOTEWITNESSCONTRACT","WITNESSCREATECONTRACT","ASSETISSUECONTRACT","WITNESSUPDATECONTRACT","PARTICIPATEASSETISSUECONTRACT","ACCOUNTUPDATECONTRACT","FREEZEBALANCECONTRACT","UNFREEZEBALANCECONTRACT","WITHDRAWBALANCECONTRACT","UNFREEZEASSETCONTRACT","UPDATEASSETCONTRACT","PROPOSALCREATECONTRACT","PROPOSALAPPROVECONTRACT","PROPOSALDELETECONTRACT","SETACCOUNTIDCONTRACT","CUSTOMCONTRACT","CREATESMARTCONTRACT","TRIGGERSMARTCONTRACT","GETCONTRACT","UPDATESETTINGCONTRACT","EXCHANGECREATECONTRACT","EXCHANGEINJECTCONTRACT","EXCHANGEWITHDRAWCONTRACT","EXCHANGETRANSACTIONCONTRACT","UPDATEENERGYLIMITCONTRACT","ACCOUNTPERMISSIONUPDATECONTRACT","CLEARABICONTRACT","UPDATEBROKERAGECONTRACT","SHIELDEDTRANSFERCONTRACT","MARKETSELLASSETCONTRACT","MARKETCANCELORDERCONTRACT","FREEZEBALANCEV2CONTRACT","UNFREEZEBALANCEV2CONTRACT","WITHDRAWEXPIREUNFREEZECONTRACT","DELEGATERESOURCECONTRACT","UNDELEGATERESOURCECONTRACT","CANCELALLUNFREEZEV2CONTRACT","clearParameter","hasParameter","getProvider","getContractname","fee","ret","contractret","assetissueid","withdrawAmount","unfreezeAmount","exchangeReceivedAmount","exchangeInjectAnotherAmount","exchangeWithdrawAnotherAmount","shieldedTransactionFee","orderid","getOrderid_asB64","orderdetailsList","getOrderdetailsList","setFee","setRet","setContractret","setAssetissueid","setWithdrawAmount","setUnfreezeAmount","setExchangeReceivedAmount","setExchangeInjectAnotherAmount","setExchangeWithdrawAnotherAmount","setShieldedTransactionFee","setOrderid","addOrderdetails","getFee","getRet","getContractret","getAssetissueid","getWithdrawAmount","getUnfreezeAmount","getExchangeReceivedAmount","getExchangeInjectAnotherAmount","getExchangeWithdrawAnotherAmount","getShieldedTransactionFee","getOrderid_asU8","SUCESS","FAILED","contractResult","DEFAULT","SUCCESS","REVERT","BAD_JUMP_DESTINATION","OUT_OF_MEMORY","PRECOMPILED_CONTRACT","STACK_TOO_SMALL","STACK_TOO_LARGE","ILLEGAL_OPERATION","STACK_OVERFLOW","OUT_OF_ENERGY","OUT_OF_TIME","JVM_STACK_OVER_FLOW","UNKNOWN","TRANSFER_FAILED","INVALID_CODE","getOrderid","setOrderdetailsList","clearOrderdetailsList","refBlockBytes","getRefBlockBytes_asB64","refBlockNum","refBlockHash","getRefBlockHash_asB64","expiration","authsList","getAuthsList","data","getData_asB64","contractList","getContractList","scripts","getScripts_asB64","timestamp","feeLimit","setRefBlockBytes","setRefBlockNum","setRefBlockHash","setExpiration","addAuths","setData","addContract","setScripts","setTimestamp","setFeeLimit","getRefBlockBytes_asU8","getRefBlockNum","getRefBlockHash_asU8","getExpiration","getData_asU8","getScripts_asU8","getTimestamp","getFeeLimit","getRefBlockBytes","getRefBlockHash","setAuthsList","clearAuthsList","getData","setContractList","clearContractList","getScripts","clearRawData","hasRawData","getSignatureList","setSignatureList","clearSignatureList","setRetList","clearRetList","AccountType","NORMAL","ASSETISSUE","CONTRACT","exports","core_Tron_pb","AccountCreateContract","AccountUpdateContract","SetAccountIdContract","AccountPermissionUpdateContract","ownerAddress","getOwnerAddress_asB64","accountAddress","getAccountAddress_asB64","setOwnerAddress","setAccountAddress","getOwnerAddress_asU8","getAccountAddress_asU8","getOwnerAddress","getAccountAddress","owner","getOwner","witness","getWitness","activesList","getActivesList","setOwner","setWitness","addActives","clearOwner","hasOwner","clearWitness","hasWitness","setActivesList","clearActivesList","AssetIssueContract","FrozenSupply","TransferAssetContract","UnfreezeAssetContract","UpdateAssetContract","ParticipateAssetIssueContract","abbr","getAbbr_asB64","totalSupply","trxNum","precision","num","startTime","endTime","order","voteScore","description","getDescription_asB64","getUrl_asB64","freeAssetNetLimit","publicFreeAssetNetLimit","publicFreeAssetNetUsage","publicLatestFreeNetTime","setAbbr","setTotalSupply","setTrxNum","setPrecision","setNum","setStartTime","setEndTime","setOrder","setVoteScore","setDescription","setFreeAssetNetLimit","setPublicFreeAssetNetLimit","setPublicFreeAssetNetUsage","setPublicLatestFreeNetTime","getAbbr_asU8","getTotalSupply","getTrxNum","getPrecision","getNum","getStartTime","getEndTime","getOrder","getVoteScore","getDescription_asU8","getUrl_asU8","getFreeAssetNetLimit","getPublicFreeAssetNetLimit","getPublicFreeAssetNetUsage","getPublicLatestFreeNetTime","frozenAmount","frozenDays","setFrozenAmount","setFrozenDays","getFrozenAmount","getFrozenDays","getAbbr","getDescription","assetName","getAssetName_asB64","toAddress","getToAddress_asB64","amount","setAssetName","setToAddress","setAmount","getAssetName_asU8","getToAddress_asU8","getAmount","getAssetName","getToAddress","newLimit","newPublicLimit","setNewLimit","setNewPublicLimit","getNewLimit","getNewPublicLimit","core_contract_common_pb","FreezeBalanceContract","UnfreezeBalanceContract","WithdrawBalanceContract","TransferContract","TransactionBalanceTrace","Operation","BlockBalanceTrace","BlockIdentifier","AccountTrace","AccountIdentifier","AccountBalanceRequest","AccountBalanceResponse","FreezeBalanceV2Contract","UnfreezeBalanceV2Contract","WithdrawExpireUnfreezeContract","DelegateResourceContract","UnDelegateResourceContract","CancelAllUnfreezeV2Contract","frozenDuration","resource","receiverAddress","getReceiverAddress_asB64","setFrozenDuration","setResource","setReceiverAddress","getFrozenDuration","getResource","getReceiverAddress_asU8","getReceiverAddress","transactionIdentifier","getTransactionIdentifier_asB64","operationList","getOperationList","status","setTransactionIdentifier","addOperation","setStatus","getTransactionIdentifier_asU8","getStatus","operationIdentifier","setOperationIdentifier","getOperationIdentifier","getTransactionIdentifier","setOperationList","clearOperationList","blockIdentifier","getBlockIdentifier","transactionBalanceTraceList","getTransactionBalanceTraceList","setBlockIdentifier","addTransactionBalanceTrace","hash","getHash_asB64","number","setHash","setNumber","getHash_asU8","getNumber","getHash","clearBlockIdentifier","hasBlockIdentifier","setTransactionBalanceTraceList","clearTransactionBalanceTraceList","placeholder","setPlaceholder","getPlaceholder","accountIdentifier","getAccountIdentifier","setAccountIdentifier","clearAccountIdentifier","hasAccountIdentifier","unfreezeBalance","setUnfreezeBalance","getUnfreezeBalance","lock","lockPeriod","setLock","setLockPeriod","getLock","getLockPeriod","ResourceCode","BANDWIDTH","ENERGY","TRON_POWER","ExchangeCreateContract","ExchangeInjectContract","ExchangeWithdrawContract","ExchangeTransactionContract","tokenId","getTokenId_asB64","quant","setTokenId","setQuant","getTokenId_asU8","getQuant","getTokenId","expected","setExpected","getExpected","ProposalApproveContract","ProposalCreateContract","ProposalDeleteContract","isAddApproval","setIsAddApproval","getIsAddApproval","SmartContract","ABI","Entry","Param","ContractState","CreateSmartContract","TriggerSmartContract","ClearABIContract","UpdateSettingContract","UpdateEnergyLimitContract","SmartContractDataWrapper","originAddress","getOriginAddress_asB64","contractAddress","getContractAddress_asB64","abi","getAbi","bytecode","getBytecode_asB64","callValue","consumeUserResourcePercent","originEnergyLimit","codeHash","getCodeHash_asB64","trxHash","getTrxHash_asB64","version","setOriginAddress","setContractAddress","setAbi","setBytecode","setCallValue","setConsumeUserResourcePercent","setOriginEnergyLimit","setCodeHash","setTrxHash","setVersion","getOriginAddress_asU8","getContractAddress_asU8","getBytecode_asU8","getCallValue","getConsumeUserResourcePercent","getOriginEnergyLimit","getCodeHash_asU8","getTrxHash_asU8","getVersion","entrysList","getEntrysList","addEntrys","anonymous","constant","inputsList","getInputsList","outputsList","getOutputsList","payable","statemutability","setAnonymous","setConstant","addInputs","addOutputs","setPayable","setStatemutability","getAnonymous","getConstant","getPayable","getStatemutability","EntryType","UNKNOWNENTRYTYPE","CONSTRUCTOR","FUNCTION","EVENT","FALLBACK","RECEIVE","ERROR","StateMutabilityType","UNKNOWNMUTABILITYTYPE","PURE","VIEW","NONPAYABLE","PAYABLE","indexed","setIndexed","getIndexed","setInputsList","clearInputsList","setOutputsList","clearOutputsList","setEntrysList","clearEntrysList","getOriginAddress","getContractAddress","clearAbi","hasAbi","getBytecode","getCodeHash","getTrxHash","energyFactor","updateCycle","setEnergyFactor","setUpdateCycle","getEnergyFactor","getUpdateCycle","newContract","getNewContract","callTokenValue","setNewContract","setCallTokenValue","getCallTokenValue","clearNewContract","hasNewContract","smartContract","getSmartContract","runtimecode","getRuntimecode_asB64","contractState","getContractState","setSmartContract","setRuntimecode","setContractState","getRuntimecode_asU8","clearSmartContract","hasSmartContract","getRuntimecode","clearContractState","hasContractState","BuyStorageBytesContract","BuyStorageContract","SellStorageContract","UpdateBrokerageContract","setBytes","getBytes","storageBytes","setStorageBytes","getStorageBytes","brokerage","setBrokerage","getBrokerage","WitnessCreateContract","WitnessUpdateContract","VoteWitnessContract","updateUrl","getUpdateUrl_asB64","setUpdateUrl","getUpdateUrl_asU8","getUpdateUrl","support","setSupport","getSupport","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","Object","getPrototypeOf","t","mode","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","definition","o","defineProperty","enumerable","get","prop","hasOwnProperty","Symbol","toStringTag","Base64","_this","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","i","charCodeAt","isNaN","charAt","encodeIgnoreUtf8","inputBytes","decode","replace","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c","_utf8_encode","string","c2","c3","byte2hexStr","byte","Error","hexByteMap","str","bytesToString","arr","one","toString","v","match","bytesLength","store","slice","st","parseInt","hextoString","hex","split","out","tmp","concat","byteArray2hexStr","base64DecodeFromString","string64","base64EncodeToString","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ADDRESS_PREFIX_REGEX","TRON_BIP39_PATH_INDEX_0","TRON_BIP39_PATH_PREFIX","bin2String","array","arrayEquals","array1","array2","strict","JSON","stringify","stringToBytes","len","push","hexChar2byte","isHexChar","hexStr2byteArray","arguments","j","k","strToDate","test","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","digits","carry","reverse","map","digit","join","decode58","ZeroHash","checkType","types","trim","error","argument","async","resolveProperties","keys","Promise","all","resolve","reduce","accum","index","target","values","writable","isArray","Uint8Array","HEX","result","toJSON","BigInt","sort","isError","makeError","info","shortMessage","details","TypeError","RangeError","assign","assert","check","assertArgumentCount","count","expectedCount","_normalizeForms","form","normalize","assertNormalize","operation","assertPrivate","givenGuard","guard","className","method","_getBytes","copy","offset","substring","getBytesCopy","isHexString","isBytesLike","HexCharacters","hexlify","datas","dataLength","dataSlice","start","end","zeroPadValue","left","fill","set","zeroPad","BN_0","BN_1","maxValue","toTwos","_value","_width","getBigInt","width","limit","fault","mask","_bits","getUint","bits","Number","isInteger","e","Nibbles","toBigInt","toBeHex","toBeArray","BN_2","BN_27","BN_28","BN_35","_guard","toUint256","Signature","s","networkV","legacyChainId","getChainId","yParity","yParityAndS","compactSerialized","serialized","constructor","for","clone","_type","bv","getChainIdV","chainId","getNormalizedV","sig","assertError","_r","_v","_sha256","createHash","update","digest","_sha512","__sha256","__sha512","locked256","locked512","_data","sha512","_","register","func","freeze","locked","_pbkdf2","password","salt","iterations","keylen","algo","pbkdf2Sync","__pbkdf2","pbkdf2","_password","_salt","ignoreFunc","reason","badCodepoint","Utf8ErrorFuncs","ignore","toUtf8Bytes","pair","toUtf8String","onError","_bytes","extraLength","overlongMask","res","nextChar","getUtf8CodePoints","codePoint","isSafeInteger","b","lengths","includes","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","min","U32_MASK64","_32n","fromBig","le","h","l","lst","Ah","Uint32Array","Al","u8a","u32","byteOffset","Math","floor","byteLength","DataView","rotr","word","shift","nextTick","iters","tick","cb","ts","now","diff","toBytes","TextEncoder","utf8ToBytes","Hash","_cloneInto","toStr","checkOpts","defaults","opts","hashCons","hashC","getRandomValues","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","suffix","enableXOF","rounds","super","pos","posOut","state32","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","keccak_256","gen","_keccak256","__keccak256","keccak256","subsChrs","Word","unfold","words","sep","initial","decodeOwl","subs","clumps","leftover","item","semi","toLowerCase","Wordlist","locale","phrase","WordlistOwl","checksum","_decodeWords","getWord","getWordIndex","wordlist","LangEn","getUpperMask","mnemonicToEntropy","mnemonic","entropy","ceil","bit","entropyBits","checksumMask","entropyToMnemonic","indices","remainingBits","checksumBits","Mnemonic","computeSeed","fromPhrase","fromEntropy","_entropy","entropyToPhrase","phraseToEntropy","isValidMnemonic","_computeHmac","algorithm","createHmac","__computeHmac","computeHmac","_key","BN_36","getChecksumAddress","chars","expanded","hashed","toUpperCase","ibanLookup","safeDigits","Base36","startsWith","block","ibanChecksum","fromBase36","SHA2","padOffset","isLE","view","process","dataView","roundClean","setBigUint64","_u32_max","wh","wl","setUint32","oview","outLen","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","A","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","padStart","hexToNumber","hexByte","numberToBytesLE","title","expectedLength","arrays","sum","pad","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","sl","pred","validatorFns","bigint","val","function","boolean","stringOrUint8Array","field","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","pow","power","modulo","pow2","invert","u","q","m","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","HMAC","iHash","oHash","buf","hmac","validateBasic","curve","ORDER","MASK","BYTES","BITS","Gx","Gy","p","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrass","curveDef","CURVE","randomBytes","bits2int","bits2int_modN","lowS","validateOpts","compressedLen","uncompressedLen","modN","CURVE_ORDER","invN","ProjectivePoint","Point","normPrivateKeyToScalar","weierstrassEquation","isWithinCurveOrder","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","fromBytes","endo","eql","ZERO","beta","splitScalar","validatePointOpts","_c","point","_isCompressed","toAffine","tail","x2","sqr","x3","mul","add","assertGE","pointPrecomputes","assertPrjPoint","other","px","py","pz","fromAffine","is0","ONE","normalizeZ","points","toInv","invertBatch","fromHex","P","assertValidity","fromPrivateKey","privateKey","multiply","_setWindowSize","windowSize","_WINDOW_SIZE","delete","right","hasEvenY","isOdd","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","negate","neg","double","b3","X3","Y3","Z3","t0","t1","t2","t3","sub","t4","t5","subtract","wNAF","wnaf","wNAFCached","comp","multiplyUnsafe","I","unsafeLadder","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","constTimeNegate","multiplyAndAddUnsafe","Q","iz","z","inv","ax","ay","zz","cofactor","toRawBytes","isCompressed","toHex","condition","W","windows","elm","precomputeWindow","base","precomputes","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","precomputesMap","transform","weierstrassPoints","cat","head","y2","sqrt","numToNByteStr","isBiggerThanHalfOrder","slcNum","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","precompute","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","prehash","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","drbg","verify","signature","publicKey","sg","_sig","derError","is","msgs","secp256k1P","secp256k1N","divNearest","bitLen","redef","sqrtP","p1div4","root","c1","n2","nv","legendreC","S","Z","Q1div2","g","ge","tonelliShanks","FpSqrt","lhs","rhs","FpPow","div","sqrN","addN","subN","mulN","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","Field","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","SigningKey","computePublicKey","compressedPublicKey","computeSharedSecret","pubKey","compressed","pub","secpSig","addPoints","p0","p1","pub0","pub1","computeAddress","WordSize","Padding","passProperties","resultNames","WeakMap","getNames","setNames","names","throwError","wrapped","items","deep","getValue","args","wrap","nameCounts","proxy","Proxy","receiver","Reflect","apply","toArray","_names","filter","callback","thisArg","fromItems","Coder","localName","dynamic","_throwError","Writer","appendWriter","paddingOffset","writeValue","writeUpdatableValue","Reader","allowLoose","maxInflation","consumed","bytesRead","loose","alignedLength","subReader","readValue","readIndex","_gaurd","signed","Typed","size","_typedSymbol","gaurd","options","format","defaultValue","minValue","isBigInt","isData","isString","tupleName","arrayLength","uint8","uint16","uint24","uint32","uint40","uint48","uint56","uint64","uint72","uint80","uint88","uint96","uint104","uint112","uint120","uint128","uint136","uint144","uint152","uint160","uint168","uint176","uint184","uint192","uint200","uint208","uint216","uint224","uint232","uint240","uint248","uint256","uint","int8","int16","int24","int32","int40","int48","int56","int64","int72","int80","int88","int96","int104","int112","int120","int128","int136","int144","int152","int160","int168","int176","int184","int192","int200","int208","int216","int224","int232","int240","int248","int256","int","bytes1","bytes2","bytes3","bytes4","bytes5","bytes6","bytes7","bytes8","bytes9","bytes10","bytes11","bytes12","bytes13","bytes14","bytes15","bytes16","bytes17","bytes18","bytes19","bytes20","bytes21","bytes22","bytes23","bytes24","bytes25","bytes26","bytes27","bytes28","bytes29","bytes30","bytes31","bytes32","bool","tuple","overrides","isTyped","dereference","AddressCoder","AnonymousCoder","coder","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","unpack","baseReader","offsetReader","baseType","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","Empty","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","fromTwos","StringCoder","TupleCoder","uniqueNames","setify","Set","_kwVisib","_kwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespacePrefix","RegExp","regexNumberPrefix","regexIdPrefix","regexId","regexType","TokenString","tokens","linkBack","linkNext","popKeyword","allowed","top","peek","has","text","pop","popType","popParen","popParams","link","peekKeyword","peekType","token","consumeKeywords","keywords","keyword","regexArrayType","verifyBasicType","internal","ParamTypeInternal","ParamType","components","arrayChildren","parse","isTuple","isIndexable","walk","promises","setValue","childType","param","walkAsync","allowIndexed","isParamType","brackets","commas","cur","depth","lex","comps","bracket","arrayMatch","PanicReasons","paramTypeBytes","paramTypeNumber","defaultCoder","defaultMaxInflation","AbiCoder","getDefaultValue","_setDefaultMaxInflation","defaultAbiCoder","getBuiltinCallException","action","tx","abiCoder","revert","transaction","invocation","checkAddress","promise","resolveAddress","resolver","resolveName","padding","BN__1","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","toQuantity","getBaseEncoder","boundsUpper","boundsLower","hexPadRight","encodeType","fields","splitArray","TypedDataEncoder","primaryType","_types","links","parents","subtypes","primaryTypes","checkCircular","found","child","subtype","getEncoder","encoder","subEncoder","encodedType","unshift","encodeData","hashStruct","_visit","visit","getPrimaryType","hashDomain","domain","domainFields","EIP712Domain","resolveNames","ensCache","getPayload","domainValues","domainTypes","typesWithDomain","ZeroAddress","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","decoded","_decode","checkOffset","lengthLength","decodeRlp","arrayifyInteger","_encode","payload","nibbles","encodeRlp","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","BN_MAX_UINT","BLOB_SIZE","getVersionedHash","versioned","handleAddress","handleAccessList","handleNumber","handleUint","formatNumber","formatAccessList","formatHashes","_parseEipSignature","typeName","nonce","gasLimit","gasPrice","maxPriorityFeePerGas","maxFeePerGas","accessList","maxFeePerBlobGas","blobVersionedHashes","blobs","_blobs","versionedHashes","blob","padded","commit","blobToKzgCommitment","proof","computeBlobKzgProof","commitment","kzg","unsignedHash","unsignedSerialized","fromPublicKey","isSigned","sidecar","inferType","legacy","_serializeLegacy","_serializeEip2930","_serializeEip1559","_serializeEip4844","inferTypes","hasGasPrice","hasFee","hasAccessList","hasBlob","isLegacy","isBerlin","isLondon","isCancun","_parseLegacy","_parseEip2930","_parseEip1559","fBlobs","fCommits","fProofs","_parseEip4844","copyRequest","req","bigIntKeys","numberKeys","blockTag","enableCcipRead","customData","checkProvider","signer","populate","iterator","AbstractSigner","getNonce","getTransactionCount","populateCall","populateTransaction","estimateGas","network","getNetwork","hasEip1559","feeData","getFeeData","sendTransaction","txObj","broadcastTransaction","signTransaction","VoidSigner","connect","signMessage","signTypedData","BaseWallet","signingKey","btx","signMessageSync","hashMessage","populated","Rho","Id","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rr","sr","tl","tr","ripemd160","_ripemd160","__ripemd160","_randomBytes","__randomBytes","Alphabet","Lookup","getAlpha","letter","BN_58","_AES_key","_AES_Kd","_AES_Ke","__classPrivateFieldGet","kind","__classPrivateFieldSet","numberOfRounds","rcon","Si","T3","T4","T5","T6","T7","T8","U3","U4","convertToInt32","AES","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperation","cls","defineProperties","aes","_CBC_iv","_CBC_lastBlock","CBC","iv","WeakSet","_CTR_remaining","_CTR_remainingIndex","_CTR_counter","CTR","initialValue","setCounterValue","setCounterBytes","counter","MAX_SAFE_INTEGER","increment","_a","_b","crypttext","dkLen","DK","PRF","PRFSalt","_opts","asyncTick","pbkdf2Init","prfW","ti","Ti","setInt32","ui","pbkdf2Output","XorAndSalsa","prev","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","scryptInit","maxmem","N","onProgress","blockSize","blockSize32","memUsed","B32","V","blockMixCb","totalBlockMix","callbackPer","max","blockMixCnt","scryptOutput","lockedSync","lockedAsync","_scryptAsync","passwd","_scryptSync","__scryptAsync","__scryptSync","_passwd","progress","scryptSync","uuidV4","looseArrayify","hexString","zpad","getPassword","spelunk","_path","path","reqd","parseFloat","defaultPath","isKeystoreJson","json","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicAesCtr","getDecryptKdfParams","kdf","prf","stall","duration","setTimeout","getEncryptKdfParams","scrypt","_encryptKeystore","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipher","cipherparams","kdfparams","dklen","client","gethFilename","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mnemonicCounter","encryptKeystoreJsonSync","passwordBytes","encryptKeystoreJson","progressCallback","MasterSecret","HardenedBit","trunc","encodeBase58Check","encodeBase58","ser_I","chainCode","IL","IR","derivePath","node","component","deriveChild","HDNodeWallet","fingerprint","parentFingerprint","encryptSync","extendedKey","hasPath","neuter","HDNodeVoidWallet","_index","ki","_seed","fromExtendedKey","decodeBase58","createRandom","fromMnemonic","fromSeed","Ki","isCrowdsaleJson","encseed","decryptCrowdsaleJson","encryptedSeed","padder","pkcs7Strip","seedHex","Wallet","wallet","console","log","fromEncryptedJson","params","decryptKeystoreJson","fromEncryptedJsonSync","decryptKeystoreJsonSync","LangCz","WordlistOwlA","accent","_accent","accents","posOffset","positions","flood","decodeBits","charCode","regex","decodeOwlA","LangEs","LangFr","_wordlist","loadWords","kana","LangJa","LangKo","LangIt","LangPt","zh_cn","zh_tw","Checks","deltaOffset","wordlists","LangZh","dialect","cz","en","es","fr","it","pt","ja","ko","KwVisib","KwTypes","_offset","_tokens","_TokenString_brand","_classCallCheck","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","_createClass","_classPrivateFieldGet","_assertClassBrand","_subTokenString","_this$offset","allowSingle","included","consumeName","consumeMutability","modifiers","consumeParams","consumeGas","consumeEoi","_TokenString","assertArgument","ErrorFragmentInternal","EventFragmentInternal","ConstructorFragmentInternal","FallbackFragmentInternal","FunctionFragmentInternal","StructFragmentInternal","_ParamType_brand","_defineProperty","_walkAsync2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","next","_walkAsync","abrupt","stop","_x","_x2","_typeof","_components$index","_callee2","_context2","sent","Fragment","inputs","ConstructorFragment","ErrorFragment","EventFragment","FallbackFragment","FunctionFragment","StructFragment","isFragment","NamedFragment","_Fragment2","_this3","_callSuper","_inherits","joinParams","_NamedFragment2","_this4","_NamedFragment3","_this5","topicHash","_Fragment3","gas","_this6","stateMutability","_Fragment4","_this7","errorObj","mutability","outputs","_NamedFragment4","_this8","selector","_NamedFragment5","_this9","LogDescription","fragment","topic","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","_errors","_events","_functions","_abiCoder","_Interface_brand","Interface","fragments","_step","frags","_iterator","_createForOfIteratorHelper","done","err","fallback","receive","getAbiCoder","bucket","deploy","minimal","_getFunction","_getEvent","_step2","_iterator2","_step3","matching","_iterator3","_step3$value","_slicedToArray","matchStr","_encodeParams","getError","_decodeParams","getFunction","ef","parsed","parseTransaction","_this2","getEvent","topics","encodeTopic","dataTypes","dataValues","eventTopic","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","decodeEventLog","hexData","forceUnique","_step4","_iterator4","_step5","_iterator5","_step5$value","lastValue","valueLength","allowOptions","splice","lastArg","_step6","_iterator6","_step7","_iterator7","_step7$value","splitSignature","sigBytes","joinSignature","splitSig","arrayify","FormatTypes","sighash","full","Buffer","TronWeb","_ref","_fullTypes","_encoderCache","_TypedDataEncoder_brand","_step4$value","_getEncoder","_ref2","_ref3","getBase58CheckAddress","addressBytes","hash0","checkSum","decodeBase58Address","base58Sting","checkSum1","priKeyBytes","ECKeySign","txID","ecRecover","signedData","recovered","recoverAddress","arrayToBase64String","btoa","_toConsumableArray","signBytes","contents","_signTypedData","messageDigest","getRowBytesFromTransactionBase64","base64Data","bytesDecode","protocol","genPriKey","priKeyHex","secp","pubBytes","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","isAddressValid","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","normalizePrivateKeyBytes","xHex","yHex","hashBytes","msgBytes","sha256","passwordToAddress","pkToAddress","INVALID_TRON_PATH_ERROR_MSG","generateAccount","pubKeyBytes","base58","generateRandom","isObject","ethersHDNodeWallet","generateAccountWithMnemonic","_addressToHex","deepCopy","_array","newTarget","_isBigNumber","decodeParams","ignoreMethodHash","arg","substr","encodeParams","extractSize","extractArrayDim","encodeParamsV2ByABI","funABI","buildFullTypeDefinition","typeDef","innerTypes","innerType","convertAddresses","addrArr","addrs","mapTuple","dimension","encodeArgs","convertTypes","decodeParamsV2ByABI","decodeResult","buildFullTypeNameDefinition","outputTypes","convertTypeNames","decodeResCopy","TRON_MESSAGE_PREFIX","verifyMessage","_require","_require2","_require3","_require4","_require6","_require8","_require9","_require10","fromHexString","buildCommonTransaction","contractType","anyValue","contract","contractJsonToProtobuf","to_address","owner_address","transferContract","Permission_id","buildTransferContract","asset_name","buildTransferAssetContract","pbObj","buildParticipateAssetIssueContract","triggerSmartContract","contract_address","_value$parameter","function_selector","call_value","call_token_value","token_id","contractData","sha3","buildTriggerSmartContract","freezeBalanceContract","frozen_balance","frozen_duration","receiver_address","buildFreezeBalanceContract","unfreezeBalanceContract","buildUnfreezeBalanceContract","withdrawbalanceContract","buildWithdrawBalanceContract","freezeBalanceV2Contract","buildFreezeBalanceV2Contract","withdrawExpireUnfreeze","buildCancelFreezeBalanceV2Contract","unfreezeBalanceV2Contract","unfreeze_balance","buildUnfreezeBalanceV2Contract","delegateResourceContract","_value$lock","lock_period","buildDelegateResourceContract","unDelegateResourceContract","buildUnDelegateResourceContract","buildWithdrawExpireUnfreezeContract","createWitnessContract","buildCreateWitness","voteWitnessContract","votes","voteItem","vote","vote_address","vote_count","numberOfVotes","buildVoteWitnessAccount","new_contract","_objectSpread","consume_user_resource_percent","origin_energy_limit","_params$bytecode","contracName","_params$parameter","origin_address","createSmartContract","smartContractBuilder","abiJson","entrys","abiBuilder","buildEntryParam","entryBuilders","entry","entryBuilder","bytecodeParameter","buildCreateSmartContract","clearABIContract","buildClearABIContract","updateBrokerageContract","buildUpdateBrokerageContract","total_supply","trx_num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","_value$public_free_as","public_free_asset_net_usage","_value$public_latest_","public_latest_free_net_time","_value$vote_score","vote_score","frozen_supply","assetIssueContract","frozenSupplyContract","frozen_amount","frozen_days","buildAssetIssueContract","accountCreateContract","account_address","buildAccountCreateContract","accountUpdateContract","account_name","buildAccountUpdateContract","setAccountIdContract","account_id","buildSetAccountIdContract","proposalCreateContract","parameters","buildProposalCreateContract","proposalDeleteContract","proposal_id","buildProposalDeleteContract","proposalVoteContract","is_add_approval","buildVoteProposalContract","exchangeCreateContract","first_token_id","first_token_balance","second_token_id","second_token_balance","buildExchangeCreateContract","exchangeInjectContract","exchange_id","buildExchangeInjectContract","exchangeWithdrawContract","buildExchangeWithdrawContract","exchangeTransactionContract","buildExchangeTransactionContract","updateSettingContract","buildUpdateSettingContract","updateEnergyLimitContract","buildUpdateEnergyLimitContract","accountPermissionUpdateContract","actives","buildPermission","permission","permission_name","keyBuilder","active","buildAccountPermissionUpdateContract","updateAssetContract","new_limit","new_public_limit","buildUpdateAssetContract","txJsonToPb","contractJson","transactionObj","rawDataObj","ref_block_bytes","ref_block_hash","fee_limit","txJsonToPbWithArgs","compareTransaction","transactionPb","rawDataBytes","rawDataHex","raw_data_hex","txPbToRawDataHex","pb","txCheck","txCheckWithArgs","txPbToTxID","isValidURL","validator","protocols","require_tld","isJson","ex","isBoolean","isBigNumber","BigNumber","isFunction","isHex","hasProperty","property","hasProperties","_len","properties","mapEvent","event","block_number","block_timestamp","event_name","transaction_id","resourceNode","resource_Node","_unconfirmed","unconfirmed","_fingerprint","parseEvent","_abi$index","padLeft","isNotNullOrUndefined","sleep","_arguments","millis","accounts","crypto","_TypedDataEncoder","ethersUtils","HttpProvider","host","timeout","user","headers","statusPage","axios","baseURL","auth","_isConnected","_args","request","Validator","tronWeb","normalized","no","gt","lt","gte","lte","se","optional","isAddress","notPositive","notEqual","invalid","fromUtf8","deepCopyJson","resultManager","toUtf8","checkBlockHeader","createTransaction","_x3","_x4","_createTransaction","_callee7","_args7","_context7","type_url","fullNode","detail","block_header","raw_data","blockID","t6","t7","visible","getTransactionOptions","blockHeader","TransactionBuilder","injectPromise","injectpromise","_options","defaultAddress","sendTrx","notValid","transactionOptions","_options2","tokenID","sendToken","_options3","issuerAddress","buyer","purchaseToken","_options4","freezeBalance","_options5","_options6","freezeBalanceV2","_options7","unfreezeBalanceV2","_options8","cancelUnfreezeBalanceV2","_options9","delegateResource","_options10","undelegateResource","_options11","_options12","withdrawBlockRewards","_options13","applyForSR","_options14","voterAddress","srAddress","userFeePercentage","tokenValue","_options$abi","_options$bytecode","_options$parameters","_options$name","_unused","rawParameter","funcABIV2","parametersV2","constructorParams","find","_ret","_loop","replaceAddressPrefix","_args$origin_address","_x5","_params$","txLocal","_triggerSmartContractLocal","_triggerSmartContract","_len2","_key2","_isConstant","_len3","_key3","confirmed","_len4","_key4","estimateEnergy","_deployConstantContract","_options$callValue","pathInfo","_args2","energy_used","energy_required","functionSelector","_loop2","_parameters$i","shieldedParameter","_Object$assign","_getTriggerSmartContractArgs","_Object$assign2","resultManagerTriggerSmartContract","_options15","clearABI","trx","cache","contracts","_options16","updateBrokerage","createToken","_options$name2","_options$abbreviation","abbreviation","_options$description","_options$url","_options$totalSupply","_options$trxRatio","trxRatio","_options$tokenRatio","tokenRatio","_options$saleStart","saleStart","_options$saleEnd","saleEnd","_options$freeBandwidt","freeBandwidth","_options$freeBandwidt2","freeBandwidthLimit","_options$frozenAmount","_options$frozenDurati","_options17","createAccount","_options18","updateAccount","_options19","_options21","updateToken","_options20","_options20$descriptio","_options20$url","_options20$freeBandwi","_options20$freeBandwi2","_options22","createProposal","_options23","proposalID","deleteProposal","_options24","isApproval","voteProposal","tokenName","tokenBalance","trxBalance","_options25","createTRXExchange","firstTokenName","secondTokenName","_options26","createTokenExchange","_options27","exchangeID","tokenAmount","injectExchangeTokens","_options28","withdrawExchangeTokens","_options29","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","_options30","updateSetting","_options31","updateEnergyLimit","permissions","_options32","ownerPermissions","witnessPermissions","activesPermissions","updateAccountPermissions","checkPermissions","activesPermission","_ownerPermissions","_witnessPermissions","_activesPermissions","activePermissions","_newTxID","_callee3","_options33","_context3","newTxID","newTransaction","_x6","_x7","_x8","_alterTransaction","_callee4","_args4","_context4","alterTransaction","dataFormat","extension","_x9","_extendExpiration","_callee5","_options34","_args5","_context5","extendExpiration","_x10","_x11","_x12","_addUpdateData","_callee6","_options35","_args6","_context6","addUpdateData","_x13","_x14","TRX_MESSAGE_HEADER","ETH_MESSAGE_HEADER","Trx","getCurrentBlock","getConfirmedCurrentBlock","solidityNode","defaultBlock","getBlockByHash","getBlockByNumber","getBlock","blockHash","getBlockTransactionCount","_ref$transactions","transactions","getTransactionFromBlock","_ref2$transactions","transactionID","getTransaction","getConfirmedTransaction","_getTransactionInfoById","getTransactionsRelated","getTransactionsToAddress","getTransactionsFromAddress","_getTransactionsRelated","direction","_yield$Promise$all","_yield$Promise$all2","getAccountById","getAccountInfoById","_ref4","_ref4$balance","getUnconfirmedAccount","getUnconfirmedAccountById","getUnconfirmedBalance","_ref5","_ref5$balance","_ref6","_ref6$freeNetUsed","freeNetUsed","_ref6$freeNetLimit","freeNetLimit","_ref6$NetUsed","NetUsed","_ref6$NetLimit","NetLimit","getBandwidth","_ref7","_ref7$assetIssue","assetIssue","_parseToken","getTokensIssuedByAddress","getTokenFromID","listNodes","_ref8","_ref8$nodes","nodes","_ref9","_ref9$address","port","startNum","endNum","_ref10","_ref10$block","getBlockRange","listSuperRepresentatives","_ref11","_ref11$witnesses","witnesses","_ref13","_ref13$assetIssue","_ref12","_ref12$assetIssue","listTokens","timeUntilNextVoteCycle","_ref14","_ref14$num","getContract","_verifyMessage","useTronHeader","verifySignature","verifyMessageV2","verifyTypedData","_sign","multisig","signatureHex","_args3","defaultPrivateKey","signString","signMessageV2","_multiSign","signWeight","foundKey","multiSign","getSignWeight","approved_list","_getApprovedList","getApprovedList","_getSignWeight","signedTransaction","sendRawTransaction","signedHexTransaction","sendHexTransaction","hexTransaction","_sendTransaction","transactionBuilder","_sendToken","_callee8","_args8","_context8","_freezeBalance","_callee9","_freezeBalance2","_args9","_context9","_unfreezeBalance","_callee10","_unfreezeBalance2","_args10","_context10","_updateAccount","_callee11","_updateAccount2","_args11","_context11","proposal","getProposal","listProposals","_ref15","_ref15$proposals","proposals","getChainParameters","_ref16","_ref16$chainParameter","chainParameter","resources","getAccountResources","fromAddress","getDelegatedResourceV2","getDelegatedResourceAccountIndexV2","getCanDelegatedMaxSize","getAvailableUnfreezeCount","getCanWithdrawUnfreezeAmount","exchange","getExchangeByID","listExchanges","_ref17","_ref17$exchanges","exchanges","listExchangesPaginated","_ref18","_ref18$exchanges","getNodeInfo","getTokenListByName","getTokenByID","_getReward2","_callee12","_args12","_context12","_getReward","_getUnconfirmedReward","_callee13","_args13","_context13","_getBrokerage2","_callee14","_args14","_context14","_getBrokerage","_getUnconfirmedBrokerage","_callee15","_args15","_context15","_getReward3","_callee16","_args16","_context16","reward","_getBrokerage3","_callee17","_args17","_context17","_getBandwidthPrices","_callee18","_context18","prices","_getEnergyPrices","_callee19","_context19","_transaction$signatur","tronAddress","messageBytes","decodeOutput","Method","iface","getFunctionSelector","defaultOptions","shouldPollResponse","_call","send","_send","watch","_watch","_call2","deployed","constant_result","msg2","chunk","_send2","broadcast","_checkResult","checkResult","pollTimes","getTransactionInfo","resMessage","rawResponse","keepTxID","_watch2","listener","lastBlock","since","getEvents","bindListener","eventServer","events","_events$sort","_events$sort2","latestEvent","newEvents","eventName","blockNumber","filters","onlyUnconfirmed","onlyConfirmed","getEventsByContractAddress","priorEvent","reject","clearInterval","setInterval","eventListener","methods","methodInstances","props","loadAbi","_getEvents2","_startEventListener2","eventCallback","_getEvents","__proto__","methodCall","onMethod","bind","methodName","inputData","decodeInput","_new2","at","_at","startCallback","_startEventListener","_stopEventListener","Plugin","pluginNoOverride","disablePlugins","pluginInterface","requires","libs","plugged","skipped","plugin","semver","fullClass","classInstanceName","Event","healthcheck","providers","isValidProvider","isConnected","sinceTimestamp","page","fromTimestamp","previousLastEventFingerprint","previousFingerprint","routeParams","warn","qs","only_confirmed","only_unconfirmed","querystring","response","getEventsByTransactionID","SideChain","sideOptions","mainchain","fullHost","mainGatewayAddress","sideGatewayAddress","sideChainId","sidechain","setMainGatewayAddress","setSideGatewayAddress","setChainId","chainIdByteArr","byteArr","byteArrHash","_depositTrx","depositFee","contractInstance","depositTrx","depositTRX","_depositTrc","depositTrc10","depositTRC10","_depositTrc2","approveInstance","depositTrc","approve","depositTRC20","depositTRC721","retryDeposit","retryMapping","_approveTrc","_x15","_approveTrc2","_x16","_x17","_x18","_depositTrc3","_x19","_x20","_x21","_x22","_depositTrc4","_x23","_x24","_x25","_x26","_mappingTrc","mappingFee","mappingTrc","mappingTRC20","mappingTRC721","_x27","_x28","_x29","_x30","_mappingTrc2","_x31","_x32","_x33","_mappingTrc3","_x34","_x35","_x36","_withdrawTrx","withdrawFee","withdrawTrx","withdrawTRX","_x37","_x38","_x39","_withdrawTrc","withdrawTrc10","withdrawTRC10","_x40","_x41","_x42","_x43","_withdrawTrc2","numOrId","withdrawTrc","_x44","_x45","_x46","_x47","_x48","_withdrawTrc3","_x49","_x50","_x51","_x52","_x53","_withdrawTrc4","_args18","_x54","_x55","_x56","_x57","_x58","_injectFund","hexAddress","_args19","injectFund","_x59","_x60","_x61","_retryWithdraw","_callee20","retryWithdrawFee","_args20","_context20","_x62","_x63","_x64","_retryDeposit","_callee21","retryDepositFee","_args21","_context21","_x65","_x66","_x67","_retryMapping","_callee22","retryMappingFee","_args22","_context22","_x68","_x69","_x70","DEFAULT_VERSION","_EventEmitter","eventHeaders","setFullNode","setSolidityNode","setEventServer","setPrivateKey","fullnodeVersion","setFullNodeHeader","setEventHeader","_getFullnodeVersion","nodeInfo","configNodeInfo","codeVersion","emit","knownProvider","setStatusPage","_this$event","setServer","currentProviders","_this$event2","_this$event3","_unused2","fromDecimal","isFinite","padEnd","toBigNumber","toNumber","isLessThan","sun","times","_createAccount","EventEmitter"],"sourceRoot":""}